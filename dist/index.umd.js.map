{"version":3,"file":"index.umd.js","sources":["../src/constants.ts","../src/core/errors/CREBError.ts","../src/utils.ts","../node_modules/reflect-metadata/Reflect.js","../src/core/decorators/Injectable.ts","../src/balancer.ts","../src/stoichiometry.ts","../src/advancedTypes.ts","../src/enhancedBalancerSimple.ts","../src/performance/cache/EvictionPolicies.ts","../src/performance/cache/CacheMetrics.ts","../src/performance/cache/AdvancedCache.ts","../src/data/validation/types.ts","../src/data/validation/validators/BaseValidator.ts","../src/data/validation/validators/ChemicalFormulaValidator.ts","../src/data/validation/metrics/ValidationMetricsDashboard.ts","../src/data/validation/index.ts","../src/enhancedBalancer.ts","../src/visualization/Molecular2DGenerator.ts","../src/visualization/Canvas2DRenderer.ts","../src/visualization/SVGRenderer.ts","../src/visualization/SimplifiedMolecularVisualization.ts","../src/index.browser.ts"],"sourcesContent":["/**\n * Chemical elements and their atomic masses\n * Data from the original CREB project's Assets.py\n */\n\nexport const ELEMENTS_LIST: string[] = [\n  'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n  'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca',\n  'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n  'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr',\n  'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn',\n  'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd',\n  'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n  'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n  'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th',\n  'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm',\n  'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds',\n  'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og'\n];\n\nexport const PERIODIC_TABLE: Record<string, number> = {\n  'H': 1.008,\n  'He': 4.0026,\n  'Li': 6.94,\n  'Be': 9.0122,\n  'B': 10.81,\n  'C': 12.011,\n  'N': 14.007,\n  'O': 15.999,\n  'F': 18.998,\n  'Ne': 20.18,\n  'Na': 22.99,\n  'Mg': 24.305,\n  'Al': 26.982,\n  'Si': 28.085,\n  'P': 30.974,\n  'S': 32.06,\n  'Cl': 35.45,\n  'Ar': 39.948,\n  'K': 39.098,\n  'Ca': 40.078,\n  'Sc': 44.956,\n  'Ti': 47.867,\n  'V': 50.942,\n  'Cr': 51.996,\n  'Mn': 54.938,\n  'Fe': 55.845,\n  'Co': 58.933,\n  'Ni': 58.693,\n  'Cu': 63.546,\n  'Zn': 65.38,\n  'Ga': 69.723,\n  'Ge': 72.63,\n  'As': 74.922,\n  'Se': 78.971,\n  'Br': 79.904,\n  'Kr': 83.798,\n  'Rb': 85.468,\n  'Sr': 87.62,\n  'Y': 88.906,\n  'Zr': 91.224,\n  'Nb': 92.906,\n  'Mo': 95.95,\n  'Tc': 98.0,\n  'Ru': 101.07,\n  'Rh': 102.91,\n  'Pd': 106.42,\n  'Ag': 107.87,\n  'Cd': 112.41,\n  'In': 114.82,\n  'Sn': 118.71,\n  'Sb': 121.76,\n  'Te': 127.6,\n  'I': 126.9,\n  'Xe': 131.29,\n  'Cs': 132.91,\n  'Ba': 137.33,\n  'La': 138.91,\n  'Ce': 140.12,\n  'Pr': 140.91,\n  'Nd': 144.24,\n  'Pm': 145.0,\n  'Sm': 150.36,\n  'Eu': 151.96,\n  'Gd': 157.25,\n  'Tb': 158.93,\n  'Dy': 162.5,\n  'Ho': 164.93,\n  'Er': 167.26,\n  'Tm': 168.93,\n  'Yb': 173.04,\n  'Lu': 175.0,\n  'Hf': 178.49,\n  'Ta': 180.95,\n  'W': 183.84,\n  'Re': 186.21,\n  'Os': 190.23,\n  'Ir': 192.22,\n  'Pt': 195.08,\n  'Au': 196.97,\n  'Hg': 200.59,\n  'Tl': 204.38,\n  'Pb': 207.2,\n  'Bi': 208.98,\n  'Po': 209.0,\n  'At': 210.0,\n  'Rn': 222.0,\n  'Fr': 223.0,\n  'Ra': 226.0,\n  'Ac': 227.0,\n  'Th': 232.04,\n  'Pa': 231.04,\n  'U': 238.03,\n  'Np': 237.0,\n  'Pu': 244.0,\n  'Am': 243.0,\n  'Cm': 247.0,\n  'Bk': 247.0,\n  'Cf': 251.0,\n  'Es': 252.0,\n  'Fm': 257.0,\n  'Md': 258.0,\n  'No': 259.0,\n  'Lr': 262.0,\n  'Rf': 267.0,\n  'Db': 270.0,\n  'Sg': 271.0,\n  'Bh': 270.0,\n  'Hs': 277.0,\n  'Mt': 276.0,\n  'Ds': 281.0,\n  'Rg': 282.0,\n  'Cn': 285.0,\n  'Nh': 286.0,\n  'Fl': 289.0,\n  'Mc': 290.0,\n  'Lv': 293.0,\n  'Ts': 294.0,\n  'Og': 294.0\n};\n\nexport const PARAMETER_SYMBOLS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n","/**\n * Enhanced Error Handling for CREB-JS\n * Provides structured error types with context, stack traces, and error classification\n */\n\nexport enum ErrorCategory {\n  VALIDATION = 'VALIDATION',\n  NETWORK = 'NETWORK',\n  COMPUTATION = 'COMPUTATION',\n  DATA = 'DATA',\n  SYSTEM = 'SYSTEM',\n  EXTERNAL_API = 'EXTERNAL_API',\n  TIMEOUT = 'TIMEOUT',\n  RATE_LIMIT = 'RATE_LIMIT',\n  AUTHENTICATION = 'AUTHENTICATION',\n  PERMISSION = 'PERMISSION'\n}\n\nexport enum ErrorSeverity {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  CRITICAL = 'CRITICAL'\n}\n\nexport interface ErrorContext {\n  [key: string]: any;\n  timestamp?: Date;\n  correlationId?: string;\n  userId?: string;\n  operation?: string;\n  component?: string;\n  version?: string;\n}\n\nexport interface ErrorMetadata {\n  category: ErrorCategory;\n  severity: ErrorSeverity;\n  retryable: boolean;\n  errorCode: string;\n  correlationId: string;\n  context: ErrorContext;\n  timestamp: Date;\n  stackTrace?: string;\n  innerError?: Error;\n  sugggestedAction?: string;\n}\n\n/**\n * Base CREB Error class with enhanced context and metadata\n */\nexport class CREBError extends Error {\n  public readonly metadata: ErrorMetadata;\n\n  constructor(\n    message: string,\n    category: ErrorCategory,\n    severity: ErrorSeverity = ErrorSeverity.MEDIUM,\n    context: ErrorContext = {},\n    options: {\n      retryable?: boolean;\n      errorCode?: string;\n      correlationId?: string;\n      innerError?: Error;\n      suggestedAction?: string;\n    } = {}\n  ) {\n    super(message);\n    this.name = 'CREBError';\n\n    // Ensure proper prototype chain for instanceof checks\n    Object.setPrototypeOf(this, CREBError.prototype);\n\n    this.metadata = {\n      category,\n      severity,\n      retryable: options.retryable ?? this.isRetryableByDefault(category),\n      errorCode: options.errorCode ?? this.generateErrorCode(category),\n      correlationId: options.correlationId ?? this.generateCorrelationId(),\n      context: {\n        ...context,\n        timestamp: new Date(),\n        version: '1.6.0'\n      },\n      timestamp: new Date(),\n      stackTrace: this.stack,\n      innerError: options.innerError,\n      sugggestedAction: options.suggestedAction\n    };\n\n    // Capture stack trace for V8 engines\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CREBError);\n    }\n  }\n\n  /**\n   * Serialize error for logging and telemetry\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      name: this.name,\n      message: this.message,\n      metadata: {\n        ...this.metadata,\n        innerError: this.metadata.innerError?.message\n      }\n    };\n  }\n\n  /**\n   * Create a sanitized version for client-side consumption\n   */\n  public toClientSafe(): Record<string, any> {\n    return {\n      message: this.message,\n      category: this.metadata.category,\n      severity: this.metadata.severity,\n      errorCode: this.metadata.errorCode,\n      correlationId: this.metadata.correlationId,\n      retryable: this.metadata.retryable,\n      suggestedAction: this.metadata.sugggestedAction\n    };\n  }\n\n  /**\n   * Check if error is retryable based on category and context\n   */\n  public isRetryable(): boolean {\n    return this.metadata.retryable;\n  }\n\n  /**\n   * Get human-readable error description\n   */\n  public getDescription(): string {\n    const parts = [\n      `[${this.metadata.category}:${this.metadata.severity}]`,\n      this.message\n    ];\n\n    if (this.metadata.sugggestedAction) {\n      parts.push(`Suggestion: ${this.metadata.sugggestedAction}`);\n    }\n\n    return parts.join(' ');\n  }\n\n  private isRetryableByDefault(category: ErrorCategory): boolean {\n    const retryableCategories = [\n      ErrorCategory.NETWORK,\n      ErrorCategory.TIMEOUT,\n      ErrorCategory.RATE_LIMIT,\n      ErrorCategory.EXTERNAL_API\n    ];\n    return retryableCategories.includes(category);\n  }\n\n  private generateErrorCode(category: ErrorCategory): string {\n    const timestamp = Date.now().toString(36);\n    const random = Math.random().toString(36).substring(2, 8);\n    return `${category}_${timestamp}_${random}`.toUpperCase();\n  }\n\n  private generateCorrelationId(): string {\n    return `creb_${Date.now()}_${Math.random().toString(36).substring(2, 12)}`;\n  }\n}\n\n/**\n * Validation Error - for input validation failures\n */\nexport class ValidationError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: { field?: string; value?: any; constraint?: string } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.VALIDATION,\n      ErrorSeverity.MEDIUM,\n      {\n        ...context,\n        field: options.field,\n        value: options.value,\n        constraint: options.constraint\n      },\n      {\n        retryable: false,\n        suggestedAction: 'Please check the input parameters and try again'\n      }\n    );\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * Network Error - for network-related failures\n */\nexport class NetworkError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: { \n      statusCode?: number; \n      url?: string; \n      method?: string;\n      timeout?: number;\n    } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.NETWORK,\n      ErrorSeverity.HIGH,\n      {\n        ...context,\n        statusCode: options.statusCode,\n        url: options.url,\n        method: options.method,\n        timeout: options.timeout\n      },\n      {\n        retryable: true,\n        suggestedAction: 'Check network connectivity and try again'\n      }\n    );\n    this.name = 'NetworkError';\n  }\n}\n\n/**\n * External API Error - for third-party API failures\n */\nexport class ExternalAPIError extends CREBError {\n  constructor(\n    message: string,\n    apiName: string,\n    context: ErrorContext = {},\n    options: {\n      statusCode?: number;\n      responseBody?: string;\n      endpoint?: string;\n      rateLimited?: boolean;\n    } = {}\n  ) {\n    const severity = options.rateLimited ? ErrorSeverity.MEDIUM : ErrorSeverity.HIGH;\n    const category = options.rateLimited ? ErrorCategory.RATE_LIMIT : ErrorCategory.EXTERNAL_API;\n    \n    super(\n      message,\n      category,\n      severity,\n      {\n        ...context,\n        apiName,\n        statusCode: options.statusCode,\n        responseBody: options.responseBody,\n        endpoint: options.endpoint\n      },\n      {\n        retryable: options.rateLimited || (!!options.statusCode && options.statusCode >= 500),\n        suggestedAction: options.rateLimited \n          ? 'Rate limit exceeded. Please wait before retrying'\n          : 'External service unavailable. Please try again later'\n      }\n    );\n    this.name = 'ExternalAPIError';\n  }\n}\n\n/**\n * Computation Error - for calculation failures\n */\nexport class ComputationError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: {\n      algorithm?: string;\n      input?: any;\n      expectedRange?: string;\n    } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.COMPUTATION,\n      ErrorSeverity.MEDIUM,\n      {\n        ...context,\n        algorithm: options.algorithm,\n        input: options.input,\n        expectedRange: options.expectedRange\n      },\n      {\n        retryable: false,\n        suggestedAction: 'Please verify input parameters and calculation constraints'\n      }\n    );\n    this.name = 'ComputationError';\n  }\n}\n\n/**\n * System Error - for internal system failures\n */\nexport class SystemError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: {\n      subsystem?: string;\n      resource?: string;\n    } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.SYSTEM,\n      ErrorSeverity.CRITICAL,\n      {\n        ...context,\n        subsystem: options.subsystem,\n        resource: options.resource\n      },\n      {\n        retryable: false,\n        suggestedAction: 'Internal system error. Please contact support'\n      }\n    );\n    this.name = 'SystemError';\n  }\n}\n\n/**\n * Error aggregation utility for collecting and analyzing multiple errors\n */\nexport class ErrorAggregator {\n  private errors: CREBError[] = [];\n  private readonly maxErrors: number;\n\n  constructor(maxErrors: number = 100) {\n    this.maxErrors = maxErrors;\n  }\n\n  /**\n   * Add an error to the aggregator\n   */\n  public addError(error: CREBError): void {\n    this.errors.push(error);\n    \n    // Keep only the most recent errors\n    if (this.errors.length > this.maxErrors) {\n      this.errors.shift();\n    }\n  }\n\n  /**\n   * Get errors by category\n   */\n  public getErrorsByCategory(category: ErrorCategory): CREBError[] {\n    return this.errors.filter(error => error.metadata.category === category);\n  }\n\n  /**\n   * Get errors by severity\n   */\n  public getErrorsBySeverity(severity: ErrorSeverity): CREBError[] {\n    return this.errors.filter(error => error.metadata.severity === severity);\n  }\n\n  /**\n   * Get error statistics\n   */\n  public getStatistics(): {\n    total: number;\n    byCategory: Record<ErrorCategory, number>;\n    bySeverity: Record<ErrorSeverity, number>;\n    retryableCount: number;\n    recentErrors: CREBError[];\n  } {\n    const byCategory = {} as Record<ErrorCategory, number>;\n    const bySeverity = {} as Record<ErrorSeverity, number>;\n    let retryableCount = 0;\n\n    // Initialize counters\n    Object.values(ErrorCategory).forEach(cat => byCategory[cat] = 0);\n    Object.values(ErrorSeverity).forEach(sev => bySeverity[sev] = 0);\n\n    // Count errors\n    this.errors.forEach(error => {\n      byCategory[error.metadata.category]++;\n      bySeverity[error.metadata.severity]++;\n      if (error.isRetryable()) {\n        retryableCount++;\n      }\n    });\n\n    return {\n      total: this.errors.length,\n      byCategory,\n      bySeverity,\n      retryableCount,\n      recentErrors: this.errors.slice(-10) // Last 10 errors\n    };\n  }\n\n  /**\n   * Clear all collected errors\n   */\n  public clear(): void {\n    this.errors = [];\n  }\n\n  /**\n   * Get all errors as JSON for logging\n   */\n  public toJSON(): Record<string, any>[] {\n    return this.errors.map(error => error.toJSON());\n  }\n}\n\n/**\n * Utility functions for error handling\n */\nexport class ErrorUtils {\n  /**\n   * Wrap a function with error handling and transformation\n   */\n  static withErrorHandling<T extends any[], R>(\n    fn: (...args: T) => R,\n    errorTransformer?: (error: any) => CREBError\n  ): (...args: T) => R {\n    return (...args: T): R => {\n      try {\n        return fn(...args);\n      } catch (error) {\n        throw errorTransformer ? errorTransformer(error) : ErrorUtils.transformUnknownError(error);\n      }\n    };\n  }\n\n  /**\n   * Wrap an async function with error handling and transformation\n   */\n  static withAsyncErrorHandling<T extends any[], R>(\n    fn: (...args: T) => Promise<R>,\n    errorTransformer?: (error: any) => CREBError\n  ): (...args: T) => Promise<R> {\n    return async (...args: T): Promise<R> => {\n      try {\n        return await fn(...args);\n      } catch (error) {\n        throw errorTransformer ? errorTransformer(error) : ErrorUtils.transformUnknownError(error);\n      }\n    };\n  }\n\n  /**\n   * Transform unknown errors into CREBError instances\n   */\n  static transformUnknownError(error: any): CREBError {\n    if (error instanceof CREBError) {\n      return error;\n    }\n\n    if (error instanceof Error) {\n      return new SystemError(\n        error.message,\n        { originalError: error.name },\n        { subsystem: 'unknown' }\n      );\n    }\n\n    return new SystemError(\n      typeof error === 'string' ? error : 'Unknown error occurred',\n      { originalError: error }\n    );\n  }\n\n  /**\n   * Check if an error indicates a transient failure\n   */\n  static isTransientError(error: any): boolean {\n    if (error instanceof CREBError) {\n      return error.isRetryable();\n    }\n\n    // Common patterns for transient errors\n    const transientPatterns = [\n      /timeout/i,\n      /connection/i,\n      /network/i,\n      /503/,\n      /502/,\n      /504/,\n      /rate limit/i\n    ];\n\n    const message = error?.message || String(error);\n    return transientPatterns.some(pattern => pattern.test(message));\n  }\n}\n","import { PERIODIC_TABLE } from './constants';\nimport { ElementCount } from './types';\nimport { ValidationError } from './core/errors/CREBError';\n\n/**\n * Utility functions for chemical formula parsing and calculations\n */\n\n/**\n * Counts elements in a chemical formula\n * Based on the ElementCounter class from the original CREB project\n */\nexport class ElementCounter {\n  private formula: string;\n\n  constructor(chemicalFormula: string) {\n    this.formula = chemicalFormula;\n  }\n\n  /**\n   * Parses the chemical formula and returns element counts\n   * Handles parentheses and multipliers\n   */\n  parseFormula(): ElementCount {\n    let formula = this.formula;\n    \n    // Expand parentheses\n    while (formula.includes('(')) {\n      formula = formula.replace(/\\(([^()]+)\\)(\\d*)/g, (match, group, multiplier) => {\n        const mult = multiplier ? parseInt(multiplier) : 1;\n        return this.expandGroup(group, mult);\n      });\n    }\n\n    // Count elements\n    const elementCounts: ElementCount = {};\n    const matches = formula.match(/([A-Z][a-z]*)(\\d*)/g) || [];\n    \n    for (const match of matches) {\n      const elementMatch = match.match(/([A-Z][a-z]*)(\\d*)/);\n      if (elementMatch) {\n        const element = elementMatch[1];\n        const count = elementMatch[2] ? parseInt(elementMatch[2]) : 1;\n        elementCounts[element] = (elementCounts[element] || 0) + count;\n      }\n    }\n\n    return elementCounts;\n  }\n\n  private expandGroup(group: string, multiplier: number): string {\n    const matches = group.match(/([A-Z][a-z]*)(\\d*)/g) || [];\n    let expanded = '';\n    \n    for (const match of matches) {\n      const elementMatch = match.match(/([A-Z][a-z]*)(\\d*)/);\n      if (elementMatch) {\n        const element = elementMatch[1];\n        const count = elementMatch[2] ? parseInt(elementMatch[2]) : 1;\n        const newCount = count * multiplier;\n        expanded += element + (newCount > 1 ? newCount : '');\n      }\n    }\n    \n    return expanded;\n  }\n}\n\n/**\n * Parses a chemical equation into reactants and products\n * Based on the EquationParser class from the original CREB project\n */\nexport class EquationParser {\n  private equation: string;\n  private equationSplitter = '=';\n  private speciesSplitter = '+';\n\n  constructor(chemicalEquation: string) {\n    this.equation = chemicalEquation.replace(/\\s/g, ''); // Remove all spaces\n  }\n\n  /**\n   * Parses the equation and returns structured data\n   */\n  parse() {\n    const { reactants, products } = this.splitIntoSpecies();\n    const parsedReactants = this.parseSpecies(reactants);\n    const parsedProducts = this.parseSpecies(products);\n\n    return {\n      reactants,\n      products,\n      parsedReactants,\n      parsedProducts\n    };\n  }\n\n  private splitIntoSpecies() {\n    // Check if equation is empty or only whitespace\n    if (!this.equation || this.equation.length === 0) {\n      throw new ValidationError(\n        'Empty equation provided. Please enter a valid chemical equation.',\n        { equation: this.equation, operation: 'equation_parsing' }\n      );\n    }\n    \n    const sides = this.equation.split(this.equationSplitter);\n    if (sides.length !== 2) {\n      throw new ValidationError(\n        'Invalid equation format. Must contain exactly one \"=\" sign.',\n        { equation: this.equation, sides: sides.length, operation: 'equation_parsing' }\n      );\n    }\n    \n    // Check if either side is empty\n    if (!sides[0].trim() || !sides[1].trim()) {\n      throw new ValidationError(\n        'Both sides of the equation must contain chemical species.',\n        { equation: this.equation, leftSide: sides[0], rightSide: sides[1], operation: 'equation_parsing' }\n      );\n    }\n\n    const cleanSpecies = (speciesString: string): string[] => {\n      return speciesString.split(this.speciesSplitter)\n        .map(species => species.trim())\n        .filter(species => species.length > 0)\n        .map(species => {\n          // Remove existing coefficients (numbers at the beginning)\n          return species.replace(/^\\d+\\s*/, '');\n        });\n    };\n\n    const reactants = cleanSpecies(sides[0]);\n    const products = cleanSpecies(sides[1]);\n\n    return { reactants, products };\n  }\n\n  private parseSpecies(species: string[]) {\n    const parsed: { [species: string]: ElementCount } = {};\n    \n    for (const specie of species) {\n      const counter = new ElementCounter(specie);\n      parsed[specie] = counter.parseFormula();\n    }\n    \n    return parsed;\n  }\n}\n\n/**\n * Calculates molar weight of a chemical formula\n */\nexport function calculateMolarWeight(formula: string): number {\n  const counter = new ElementCounter(formula);\n  const elementCounts = counter.parseFormula();\n  \n  let molarWeight = 0;\n  for (const element in elementCounts) {\n    if (!(element in PERIODIC_TABLE)) {\n      throw new ValidationError(\n        `Unknown element: ${element}`,\n        { element, formula, operation: 'molar_weight_calculation' }\n      );\n    }\n    molarWeight += elementCounts[element] * PERIODIC_TABLE[element];\n  }\n  \n  return parseFloat(molarWeight.toFixed(3));\n}\n\n/**\n * Gets all unique elements present in a reaction\n */\nexport function getElementsInReaction(parsedReactants: any, parsedProducts: any): string[] {\n  const elements = new Set<string>();\n  \n  // Add elements from reactants\n  Object.values(parsedReactants).forEach((species: any) => {\n    Object.keys(species).forEach(element => elements.add(element));\n  });\n  \n  // Add elements from products\n  Object.values(parsedProducts).forEach((species: any) => {\n    Object.keys(species).forEach(element => elements.add(element));\n  });\n  \n  return Array.from(elements);\n}\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","/**\n * Injectable decorator and related types for dependency injection\n * \n * Provides decorators and metadata for automatic dependency injection\n * in the CREB-JS container system.\n * \n * @author Loganathane Virassamy\n * @version 1.6.0\n */\n\nimport 'reflect-metadata';\n\n/**\n * Service lifetime enumeration\n */\nexport enum ServiceLifetime {\n  Singleton = 'singleton',\n  Transient = 'transient',\n}\n\n/**\n * Injectable metadata interface\n */\nexport interface InjectableMetadata {\n  dependencies?: any[];\n  lifetime?: ServiceLifetime;\n  token?: string | symbol;\n}\n\n/**\n * Injectable decorator options\n */\nexport interface InjectableOptions {\n  lifetime?: ServiceLifetime;\n  token?: string | symbol;\n}\n\n/**\n * Metadata key for injectable services\n */\nexport const INJECTABLE_METADATA_KEY = Symbol.for('injectable');\n\n/**\n * Metadata key for constructor parameters\n */\nexport const PARAM_TYPES_METADATA_KEY = 'design:paramtypes';\n\n/**\n * Injectable class decorator\n * \n * Marks a class as injectable and provides metadata for dependency injection.\n * \n * @param options Optional configuration for the injectable service\n */\nexport function Injectable(options: InjectableOptions = {}) {\n  return function <T extends new (...args: any[]) => any>(constructor: T): T {\n    // Get constructor parameter types from TypeScript compiler\n    const paramTypes = Reflect.getMetadata(PARAM_TYPES_METADATA_KEY, constructor) || [];\n    \n    // Create injectable metadata\n    const metadata: InjectableMetadata = {\n      dependencies: paramTypes,\n      lifetime: options.lifetime || ServiceLifetime.Transient,\n      token: options.token,\n    };\n\n    // Store metadata on the constructor\n    Reflect.defineMetadata(INJECTABLE_METADATA_KEY, metadata, constructor);\n\n    return constructor;\n  };\n}\n\n/**\n * Inject decorator for constructor parameters\n * \n * Explicitly specifies the token to inject for a constructor parameter.\n * Useful when TypeScript reflection doesn't provide enough information.\n * \n * @param token The service token to inject\n */\nexport function Inject(token: any) {\n  return function (target: any, propertyKey: string | symbol | undefined, parameterIndex: number) {\n    const existingMetadata = Reflect.getMetadata(INJECTABLE_METADATA_KEY, target) || {};\n    const dependencies = existingMetadata.dependencies || [];\n    \n    // Ensure dependencies array is large enough\n    while (dependencies.length <= parameterIndex) {\n      dependencies.push(undefined);\n    }\n    \n    // Set the specific dependency\n    dependencies[parameterIndex] = token;\n    \n    // Update metadata\n    const updatedMetadata: InjectableMetadata = {\n      ...existingMetadata,\n      dependencies,\n    };\n    \n    Reflect.defineMetadata(INJECTABLE_METADATA_KEY, updatedMetadata, target);\n  };\n}\n\n/**\n * Optional decorator for constructor parameters\n * \n * Marks a dependency as optional, allowing injection to succeed\n * even if the service is not registered.\n * \n * @param defaultValue Optional default value to use if service is not found\n */\nexport function Optional(defaultValue?: any) {\n  return function (target: any, propertyKey: string | symbol | undefined, parameterIndex: number) {\n    const existingMetadata = Reflect.getMetadata(INJECTABLE_METADATA_KEY, target) || {};\n    const optionalDependencies = existingMetadata.optionalDependencies || new Set();\n    \n    optionalDependencies.add(parameterIndex);\n    \n    const updatedMetadata: InjectableMetadata = {\n      ...existingMetadata,\n      optionalDependencies,\n      defaultValues: {\n        ...existingMetadata.defaultValues,\n        [parameterIndex]: defaultValue,\n      },\n    };\n    \n    Reflect.defineMetadata(INJECTABLE_METADATA_KEY, updatedMetadata, target);\n  };\n}\n\n/**\n * Get injectable metadata from a constructor\n */\nexport function getInjectableMetadata(constructor: any): InjectableMetadata | undefined {\n  return Reflect.getMetadata(INJECTABLE_METADATA_KEY, constructor);\n}\n\n/**\n * Check if a constructor is marked as injectable\n */\nexport function isInjectable(constructor: any): boolean {\n  return Reflect.hasMetadata(INJECTABLE_METADATA_KEY, constructor);\n}\n\n/**\n * Helper function to extract dependency tokens from a constructor\n */\nexport function getDependencyTokens(constructor: any): any[] {\n  const metadata = getInjectableMetadata(constructor);\n  if (!metadata) {\n    return [];\n  }\n  \n  return metadata.dependencies || [];\n}\n\n/**\n * Self-binding token type for auto-registration\n */\nexport const SELF = Symbol('SELF');\n\n/**\n * Factory for creating injectable class decorators with specific lifetimes\n */\nexport const Singleton = (options: Omit<InjectableOptions, 'lifetime'> = {}) =>\n  Injectable({ ...options, lifetime: ServiceLifetime.Singleton });\n\nexport const Transient = (options: Omit<InjectableOptions, 'lifetime'> = {}) =>\n  Injectable({ ...options, lifetime: ServiceLifetime.Transient });\n\n/**\n * Auto-registration helper for common patterns\n */\nexport interface AutoRegisterOptions {\n  lifetime?: ServiceLifetime;\n  token?: any;\n  as?: any[];\n}\n\n/**\n * Auto-register decorator that combines Injectable with container registration\n * This is a convenience decorator for common registration patterns\n */\nexport function AutoRegister(options: AutoRegisterOptions = {}) {\n  return function <T extends new (...args: any[]) => any>(constructor: T): T {\n    // First make it injectable\n    const injectable = Injectable({\n      lifetime: options.lifetime,\n      token: options.token,\n    });\n    \n    const decoratedConstructor = injectable(constructor);\n    \n    // Store auto-registration metadata for later processing\n    const autoRegisterMetadata = {\n      constructor: decoratedConstructor,\n      options,\n    };\n    \n    Reflect.defineMetadata('auto-register', autoRegisterMetadata, decoratedConstructor);\n    \n    return decoratedConstructor;\n  };\n}\n\n/**\n * Get auto-registration metadata\n */\nexport function getAutoRegisterMetadata(constructor: any) {\n  return Reflect.getMetadata('auto-register', constructor);\n}\n\n/**\n * Type guard for checking if a value is a constructor\n */\nexport function isConstructor(value: any): value is new (...args: any[]) => any {\n  return typeof value === 'function' && value.prototype && value.prototype.constructor === value;\n}\n","import { EquationParser, getElementsInReaction } from './utils';\nimport { EquationData, LinearSystem, BalancedEquation } from './types';\nimport { ComputationError } from './core/errors/CREBError';\nimport { Injectable } from './core/decorators/Injectable';\n\n/**\n * Linear equation system generator and solver\n * Based on the Generator and FileMaker classes from the original CREB project\n */\nexport class LinearEquationSolver {\n  private equationData: EquationData;\n  private allSpecies: string[];\n  private elements: string[];\n\n  constructor(chemicalEquation: string) {\n    const parser = new EquationParser(chemicalEquation);\n    this.equationData = parser.parse();\n    this.allSpecies = [...this.equationData.reactants, ...this.equationData.products];\n    this.elements = getElementsInReaction(\n      this.equationData.parsedReactants,\n      this.equationData.parsedProducts\n    );\n  }\n\n  /**\n   * Generates the system of linear equations representing the chemical balance\n   */\n  generateLinearSystem(): LinearSystem {\n    const equations = [];\n    \n    // Create one equation for each element\n    for (const element of this.elements) {\n      const coefficients = [];\n      \n      // For each species in the reaction\n      for (const species of this.allSpecies) {\n        let coefficient = 0;\n        \n        // Check if this species contains the current element\n        if (this.equationData.reactants.includes(species)) {\n          // Reactants have positive coefficients\n          const elementCount = this.equationData.parsedReactants[species][element] || 0;\n          coefficient = elementCount;\n        } else if (this.equationData.products.includes(species)) {\n          // Products have negative coefficients\n          const elementCount = this.equationData.parsedProducts[species][element] || 0;\n          coefficient = -elementCount;\n        }\n        \n        coefficients.push(coefficient);\n      }\n      \n      equations.push({\n        coefficients,\n        constant: 0 // All equations equal zero (balanced)\n      });\n    }\n\n    return {\n      equations,\n      variables: this.allSpecies.map((_, i) => `x${i}`)\n    };\n  }\n\n  /**\n   * Solves the linear system to find coefficients\n   */\n  solve(): number[] {\n    const system = this.generateLinearSystem();\n    \n    // For simple equations, try a brute force approach with small integer coefficients\n    const maxCoeff = 10;\n    const numSpecies = this.allSpecies.length;\n    \n    // Try different combinations of coefficients\n    for (let attempt = 1; attempt <= maxCoeff; attempt++) {\n      const coefficients = this.findCoefficients(system, attempt);\n      if (coefficients) {\n        return coefficients;\n      }\n    }\n    \n    throw new ComputationError(\n      'Unable to balance equation: Could not find integer coefficients',\n      { maxCoeff, numSpecies, operation: 'equation_balancing' }\n    );\n  }\n\n  /**\n   * Tries to find valid coefficients using a systematic approach\n   */\n  private findCoefficients(system: LinearSystem, maxVal: number): number[] | null {\n    const numSpecies = this.allSpecies.length;\n    \n    // Generate all possible combinations\n    const generateCombinations = (length: number, max: number): number[][] => {\n      const results: number[][] = [];\n      \n      const generate = (current: number[], remaining: number) => {\n        if (remaining === 0) {\n          results.push([...current]);\n          return;\n        }\n        \n        for (let i = 1; i <= max; i++) {\n          current.push(i);\n          generate(current, remaining - 1);\n          current.pop();\n        }\n      };\n      \n      generate([], length);\n      return results;\n    };\n    \n    const combinations = generateCombinations(numSpecies, maxVal);\n    \n    for (const coeffs of combinations) {\n      if (this.checkBalance(system, coeffs)) {\n        return coeffs;\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Checks if given coefficients balance the equation\n   */\n  private checkBalance(system: LinearSystem, coefficients: number[]): boolean {\n    for (const equation of system.equations) {\n      let sum = 0;\n      for (let i = 0; i < coefficients.length; i++) {\n        sum += equation.coefficients[i] * coefficients[i];\n      }\n      if (Math.abs(sum) > 1e-10) { // Allow for small floating point errors\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Normalizes coefficients to positive integers\n   */\n  private normalizeCoefficients(coefficients: number[]): number[] {\n    // Convert to positive numbers\n    const positiveCoeffs = coefficients.map(c => Math.abs(c));\n    \n    // Find a common denominator and convert to integers\n    const precision = 1000; // For handling decimal coefficients\n    const intCoeffs = positiveCoeffs.map(c => Math.round(c * precision));\n    \n    // Find GCD and simplify\n    const gcd = this.findGCD(intCoeffs.filter(c => c !== 0));\n    const simplified = intCoeffs.map(c => c / gcd);\n    \n    // Ensure all coefficients are at least 1\n    const minCoeff = Math.min(...simplified.filter(c => c > 0));\n    const scaled = simplified.map(c => Math.round(c / minCoeff));\n    \n    return scaled.map(c => c === 0 ? 1 : c);\n  }\n\n  /**\n   * Finds the greatest common divisor of an array of numbers\n   */\n  private findGCD(numbers: number[]): number {\n    const gcdTwo = (a: number, b: number): number => {\n      return b === 0 ? a : gcdTwo(b, a % b);\n    };\n    \n    return numbers.reduce((acc, num) => gcdTwo(acc, Math.abs(num)));\n  }\n}\n\n/**\n * Chemical equation balancer\n * Based on the main CREB functionality\n */\n@Injectable()\nexport class ChemicalEquationBalancer {\n  /**\n   * Balances a chemical equation and returns the balanced equation string\n   */\n  balance(equation: string): string {\n    try {\n      const solver = new LinearEquationSolver(equation);\n      const coefficients = solver.solve();\n      \n      const parser = new EquationParser(equation);\n      const { reactants, products } = parser.parse();\n      \n      return this.formatBalancedEquation(reactants, products, coefficients);\n    } catch (error) {\n      throw new ComputationError(\n        `Failed to balance equation \"${equation}\": ${error}`,\n        { equation, operation: 'equation_balancing', originalError: error }\n      );\n    }\n  }\n\n  /**\n   * Balances a chemical equation and returns detailed result\n   */\n  balanceDetailed(equation: string): BalancedEquation {\n    const solver = new LinearEquationSolver(equation);\n    const coefficients = solver.solve();\n    \n    const parser = new EquationParser(equation);\n    const { reactants, products } = parser.parse();\n    \n    return {\n      equation: this.formatBalancedEquation(reactants, products, coefficients),\n      coefficients,\n      reactants,\n      products\n    };\n  }\n\n  private formatBalancedEquation(reactants: string[], products: string[], coefficients: number[]): string {\n    const formatSide = (species: string[], startIndex: number): string => {\n      return species.map((specie, index) => {\n        const coeff = coefficients[startIndex + index];\n        return coeff === 1 ? specie : `${coeff} ${specie}`;\n      }).join(' + ');\n    };\n\n    const reactantSide = formatSide(reactants, 0);\n    const productSide = formatSide(products, reactants.length);\n    \n    return `${reactantSide} = ${productSide}`;\n  }\n}\n","import { calculateMolarWeight, EquationParser } from './utils';\nimport { ChemicalEquationBalancer } from './balancer';\nimport { StoichiometryResult, SpeciesData } from './types';\nimport { ValidationError } from './core/errors/CREBError';\nimport { Injectable } from './core/decorators/Injectable';\n\n/**\n * Stoichiometry calculator\n * Based on the Stoichiometry class from the original CREB project\n */\n@Injectable()\nexport class Stoichiometry {\n  private equation?: string;\n  private reactants: string[] = [];\n  private products: string[] = [];\n  private coefficients: number[] = [];\n  private balancer: ChemicalEquationBalancer;\n\n  constructor(equation?: string) {\n    this.balancer = new ChemicalEquationBalancer();\n    \n    if (equation) {\n      this.equation = equation;\n      this.initializeFromEquation(equation);\n    }\n  }\n\n  private initializeFromEquation(equation: string) {\n    // First, parse the raw equation (without coefficients) to get species names\n    const rawParser = new EquationParser(equation);\n    const rawData = rawParser.parse();\n    \n    // Balance the equation to get coefficients\n    const balanced = this.balancer.balanceDetailed(equation);\n    this.reactants = rawData.reactants;\n    this.products = rawData.products;\n    this.coefficients = balanced.coefficients;\n  }\n\n  /**\n   * Calculates the molar weight of a chemical formula\n   */\n  calculateMolarWeight(formula: string): number {\n    return calculateMolarWeight(formula);\n  }\n\n  /**\n   * Calculates stoichiometric ratios relative to a selected species\n   */\n  calculateRatios(selectedSpecies: string): number[] {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided. Initialize with an equation first.',\n        { operation: 'calculateRatios', selectedSpecies },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n\n    const allSpecies = [...this.reactants, ...this.products];\n    const selectedIndex = allSpecies.indexOf(selectedSpecies);\n    \n    if (selectedIndex === -1) {\n      const availableSpecies = allSpecies.join(', ');\n      throw new ValidationError(\n        `Species \"${selectedSpecies}\" not found in the equation. Available species: ${availableSpecies}`,\n        { selectedSpecies, availableSpecies: allSpecies },\n        { field: 'selectedSpecies', value: selectedSpecies, constraint: `must be one of: ${availableSpecies}` }\n      );\n    }\n\n    const selectedCoefficient = this.coefficients[selectedIndex];\n    return this.coefficients.map(coeff => coeff / selectedCoefficient);\n  }\n\n  /**\n   * Performs stoichiometric calculations starting from moles\n   */\n  calculateFromMoles(selectedSpecies: string, moles: number): StoichiometryResult {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided. Initialize with an equation first.',\n        { operation: 'calculateFromMoles', selectedSpecies, moles },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n\n    const ratios = this.calculateRatios(selectedSpecies);\n    const allSpecies = [...this.reactants, ...this.products];\n    \n    const result: StoichiometryResult = {\n      reactants: {},\n      products: {},\n      totalMolarMass: { reactants: 0, products: 0 }\n    };\n\n    // Calculate for all species\n    allSpecies.forEach((species, index) => {\n      const speciesMoles = ratios[index] * moles;\n      const molarWeight = this.calculateMolarWeight(species);\n      const grams = speciesMoles * molarWeight;\n\n      const speciesData: SpeciesData = {\n        moles: parseFloat(speciesMoles.toFixed(3)),\n        grams: parseFloat(grams.toFixed(3)),\n        molarWeight: molarWeight\n      };\n\n      if (this.reactants.includes(species)) {\n        result.reactants[species] = speciesData;\n        result.totalMolarMass.reactants += grams;\n      } else {\n        result.products[species] = speciesData;\n        result.totalMolarMass.products += grams;\n      }\n    });\n\n    // Round total molar masses\n    result.totalMolarMass.reactants = parseFloat(result.totalMolarMass.reactants.toFixed(3));\n    result.totalMolarMass.products = parseFloat(result.totalMolarMass.products.toFixed(3));\n\n    return result;\n  }\n\n  /**\n   * Performs stoichiometric calculations starting from grams\n   */\n  calculateFromGrams(selectedSpecies: string, grams: number): StoichiometryResult {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided. Initialize with an equation first.',\n        { operation: 'calculateFromGrams', selectedSpecies, grams },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n\n    const molarWeight = this.calculateMolarWeight(selectedSpecies);\n    const moles = grams / molarWeight;\n    \n    return this.calculateFromMoles(selectedSpecies, moles);\n  }\n\n  /**\n   * Gets the balanced equation\n   */\n  getBalancedEquation(): string {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided.',\n        { operation: 'getBalancedEquation' },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n    return this.balancer.balance(this.equation);\n  }\n\n  /**\n   * Gets all species in the reaction with their molar weights\n   */\n  getSpeciesInfo(): { [species: string]: { molarWeight: number; type: 'reactant' | 'product' } } {\n    const result: { [species: string]: { molarWeight: number; type: 'reactant' | 'product' } } = {};\n    \n    this.reactants.forEach(species => {\n      result[species] = {\n        molarWeight: this.calculateMolarWeight(species),\n        type: 'reactant'\n      };\n    });\n\n    this.products.forEach(species => {\n      result[species] = {\n        molarWeight: this.calculateMolarWeight(species),\n        type: 'product'\n      };\n    });\n\n    return result;\n  }\n\n  /**\n   * Static method to calculate molar weight without instantiating the class\n   */\n  static calculateMolarWeight(formula: string): number {\n    return calculateMolarWeight(formula);\n  }\n}\n","/**\n * Advanced TypeScript Support for CREB Library\n * Enhanced type definitions with generic constraints and branded types\n * Provides superior IntelliSense and type safety for chemical data structures\n */\n\n// ============================================================================\n// Branded Types for Enhanced Type Safety\n// ============================================================================\n\n/**\n * Branded type for chemical formulas ensuring compile-time validation\n */\nexport type ChemicalFormula = string & { readonly __brand: 'ChemicalFormula' };\n\n/**\n * Branded type for valid element symbols\n */\nexport type ElementSymbol = string & { readonly __brand: 'ElementSymbol' };\n\n/**\n * Branded type for balanced chemical equations\n */\nexport type BalancedEquationString = string & { readonly __brand: 'BalancedEquation' };\n\n/**\n * Branded type for SMILES notation\n */\nexport type SMILESNotation = string & { readonly __brand: 'SMILES' };\n\n/**\n * Branded type for InChI notation\n */\nexport type InChINotation = string & { readonly __brand: 'InChI' };\n\n/**\n * Branded type for CAS numbers\n */\nexport type CASNumber = string & { readonly __brand: 'CAS' };\n\n// ============================================================================\n// Generic Constraints for Chemical Formulas\n// ============================================================================\n\n/**\n * Type constraint for valid chemical elements (Periodic Table)\n */\nexport type ValidElement = \n  | 'H' | 'He' | 'Li' | 'Be' | 'B' | 'C' | 'N' | 'O' | 'F' | 'Ne'\n  | 'Na' | 'Mg' | 'Al' | 'Si' | 'P' | 'S' | 'Cl' | 'Ar' | 'K' | 'Ca'\n  | 'Sc' | 'Ti' | 'V' | 'Cr' | 'Mn' | 'Fe' | 'Co' | 'Ni' | 'Cu' | 'Zn'\n  | 'Ga' | 'Ge' | 'As' | 'Se' | 'Br' | 'Kr' | 'Rb' | 'Sr' | 'Y' | 'Zr'\n  | 'Nb' | 'Mo' | 'Tc' | 'Ru' | 'Rh' | 'Pd' | 'Ag' | 'Cd' | 'In' | 'Sn'\n  | 'Sb' | 'Te' | 'I' | 'Xe' | 'Cs' | 'Ba' | 'La' | 'Ce' | 'Pr' | 'Nd'\n  | 'Pm' | 'Sm' | 'Eu' | 'Gd' | 'Tb' | 'Dy' | 'Ho' | 'Er' | 'Tm' | 'Yb'\n  | 'Lu' | 'Hf' | 'Ta' | 'W' | 'Re' | 'Os' | 'Ir' | 'Pt' | 'Au' | 'Hg'\n  | 'Tl' | 'Pb' | 'Bi' | 'Po' | 'At' | 'Rn' | 'Fr' | 'Ra' | 'Ac' | 'Th'\n  | 'Pa' | 'U' | 'Np' | 'Pu' | 'Am' | 'Cm' | 'Bk' | 'Cf' | 'Es' | 'Fm'\n  | 'Md' | 'No' | 'Lr' | 'Rf' | 'Db' | 'Sg' | 'Bh' | 'Hs' | 'Mt' | 'Ds'\n  | 'Rg' | 'Cn' | 'Nh' | 'Fl' | 'Mc' | 'Lv' | 'Ts' | 'Og';\n\n/**\n * Generic element count with typed element symbols\n */\n/**\n * Type-safe element count with generic constraints for elements\n */\nexport type TypedElementCount<T extends ValidElement = ValidElement> = {\n  [K in T]?: number;\n};\n\n/**\n * Generic compound composition with strict typing\n */\nexport type CompoundComposition<T extends ValidElement = ValidElement> = {\n  readonly elements: TypedElementCount<T>;\n  readonly molecularWeight: number;\n  readonly formula: ChemicalFormula;\n};\n\n// ============================================================================\n// Advanced Type Guards and Validation\n// ============================================================================\n\n/**\n * Type guard for chemical formulas\n */\nexport function isChemicalFormula(value: string): value is ChemicalFormula {\n  // More permissive validation - basic pattern for chemical formulas\n  const pattern = /^[A-Z][a-z]?(?:\\d*\\(?[A-Z][a-z]?\\d*\\)?)*\\d*$/;\n  return typeof value === 'string' && value.length > 0 && /[A-Z]/.test(value);\n}\n\n/**\n * Type guard for element symbols\n */\nexport function isElementSymbol(value: string): value is ElementSymbol {\n  const validElements: ReadonlySet<string> = new Set([\n    'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca',\n    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr',\n    'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn',\n    'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd',\n    'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n    'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th',\n    'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm',\n    'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds',\n    'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og'\n  ]);\n  return validElements.has(value);\n}\n\n/**\n * Type guard for balanced equations\n */\nexport function isBalancedEquation(value: string): value is BalancedEquationString {\n  return value.includes('->') || value.includes('→');\n}\n\n// ============================================================================\n// Type-Safe Chemical Data Structures\n// ============================================================================\n\n/**\n * Enhanced equation data with strict typing\n */\nexport interface TypedEquationData<TElements extends ValidElement = ValidElement> {\n  readonly reactants: readonly ChemicalFormula[];\n  readonly products: readonly ChemicalFormula[];\n  readonly parsedReactants: Record<ChemicalFormula, TypedElementCount<TElements>>;\n  readonly parsedProducts: Record<ChemicalFormula, TypedElementCount<TElements>>;\n  readonly elements: readonly TElements[];\n}\n\n/**\n * Enhanced balanced equation with type safety\n */\nexport interface TypedBalancedEquation<TElements extends ValidElement = ValidElement> {\n  readonly equation: BalancedEquationString;\n  readonly coefficients: readonly number[];\n  readonly reactants: readonly ChemicalFormula[];\n  readonly products: readonly ChemicalFormula[];\n  readonly elementalBalance: Record<TElements, number>;\n  readonly isBalanced: true; // Literal type for compile-time guarantee\n}\n\n/**\n * Type-safe species data with enhanced properties\n */\nexport interface TypedSpeciesData<TFormula extends ChemicalFormula = ChemicalFormula> {\n  readonly formula: TFormula;\n  readonly moles: number;\n  readonly grams: number;\n  readonly molarWeight: number;\n  readonly percentage: number;\n  readonly composition: CompoundComposition;\n}\n\n/**\n * Enhanced stoichiometry result with strict typing\n */\nexport interface TypedStoichiometryResult<\n  TReactants extends ChemicalFormula = ChemicalFormula,\n  TProducts extends ChemicalFormula = ChemicalFormula\n> {\n  readonly reactants: Record<TReactants, TypedSpeciesData<TReactants>>;\n  readonly products: Record<TProducts, TypedSpeciesData<TProducts>>;\n  readonly totalMolarMass: {\n    readonly reactants: number;\n    readonly products: number;\n  };\n  readonly massBalance: number; // Should be 1.0 for balanced equations\n  readonly equation: TypedBalancedEquation;\n}\n\n// ============================================================================\n// Advanced Reaction Types\n// ============================================================================\n\n/**\n * Reaction type classification with literal types\n */\nexport type ReactionType = \n  | 'synthesis'\n  | 'decomposition'\n  | 'single-replacement'\n  | 'double-replacement'\n  | 'combustion'\n  | 'acid-base'\n  | 'redox'\n  | 'precipitation'\n  | 'complex-formation';\n\n/**\n * Phase state with literal types\n */\nexport type PhaseState = 'solid' | 'liquid' | 'gas' | 'aqueous' | 'plasma';\n\n/**\n * Enhanced compound with phase information\n */\nexport interface TypedCompound<TFormula extends ChemicalFormula = ChemicalFormula> {\n  readonly formula: TFormula;\n  readonly name?: string;\n  readonly phase?: PhaseState;\n  readonly coefficient: number;\n  readonly composition: CompoundComposition;\n  readonly properties?: Readonly<{\n    molarMass: number;\n    density?: number;\n    meltingPoint?: number;\n    boilingPoint?: number;\n  }>;\n}\n\n/**\n * Type-safe reaction with enhanced metadata\n */\nexport interface TypedReaction<\n  TReactants extends ChemicalFormula = ChemicalFormula,\n  TProducts extends ChemicalFormula = ChemicalFormula\n> {\n  readonly reactants: readonly TypedCompound<TReactants>[];\n  readonly products: readonly TypedCompound<TProducts>[];\n  readonly type: ReactionType;\n  readonly isBalanced: boolean;\n  readonly balancedEquation?: TypedBalancedEquation;\n  readonly conditions?: Readonly<{\n    temperature?: number;\n    pressure?: number;\n    catalyst?: string;\n    solvent?: string;\n  }>;\n}\n\n// ============================================================================\n// Utility Types for Enhanced IntelliSense\n// ============================================================================\n\n/**\n * Extract element types from a chemical formula (compile-time)\n */\nexport type ExtractElements<T extends string> = \n  T extends `${infer Element}${infer Rest}`\n    ? Element extends ValidElement\n      ? Element | ExtractElements<Rest>\n      : ExtractElements<Rest>\n    : never;\n\n/**\n * Conditional type for organic vs inorganic compounds\n */\nexport type CompoundCategory<T extends ChemicalFormula> = \n  T extends ChemicalFormula\n    ? ExtractElements<T> extends 'C'\n      ? 'organic'\n      : 'inorganic'\n    : never;\n\n/**\n * Helper type for reaction participants\n */\nexport type ReactionParticipants<T extends TypedReaction> = \n  T extends TypedReaction<infer R, infer P> ? R | P : never;\n\n// ============================================================================\n// Factory Functions with Type Safety\n// ============================================================================\n\n/**\n * Create a chemical formula with compile-time validation\n */\nexport function createChemicalFormula(formula: string): ChemicalFormula {\n  if (!isChemicalFormula(formula)) {\n    throw new Error(`Invalid chemical formula: ${formula}`);\n  }\n  return formula;\n}\n\n/**\n * Create an element symbol with validation\n */\nexport function createElementSymbol(symbol: string): ElementSymbol {\n  if (!isElementSymbol(symbol)) {\n    throw new Error(`Invalid element symbol: ${symbol}`);\n  }\n  return symbol as ElementSymbol;\n}\n\n// ============================================================================\n// Template Literal Types for Formula Parsing\n// ============================================================================\n\n/**\n * Template literal type for common chemical formulas\n */\nexport type CommonFormulas = \n  | 'H2O' | 'CO2' | 'O2' | 'N2' | 'H2' | 'CH4' | 'C2H6' | 'C2H4' | 'C2H2'\n  | 'NH3' | 'HCl' | 'H2SO4' | 'NaOH' | 'Ca(OH)2' | 'CaCO3' | 'NaCl'\n  | 'C6H12O6' | 'C6H6' | 'C2H5OH' | 'CH3COOH' | 'C8H18';\n\n/**\n * Auto-completion helper for common chemical formulas\n */\nexport type FormulaAutoComplete<T extends string> = \n  T extends CommonFormulas ? T : T extends `${CommonFormulas}${string}` ? T : string;\n\n// ============================================================================\n// Advanced Generic Constraints\n// ============================================================================\n\n/**\n * Constraint for balanced chemical equations\n */\nexport interface BalancedEquationConstraint<T extends TypedReaction> {\n  readonly reaction: T;\n  readonly verify: T['isBalanced'] extends true ? true : false;\n}\n\n/**\n * Constraint for mass conservation\n */\nexport interface MassConservationConstraint<T extends TypedStoichiometryResult> {\n  readonly result: T;\n  readonly conserved: T['massBalance'] extends 1.0 ? true : false;\n}\n\n// ============================================================================\n// Utility Functions for Type-Safe Operations\n// ============================================================================\n\n/**\n * Parse a chemical formula into element counts\n */\nexport function parseFormula(formula: ChemicalFormula): TypedElementCount {\n  const result: TypedElementCount = {};\n  \n  // Handle parentheses first by expanding them\n  let expandedFormula = formula as string;\n  \n  // Find patterns like (OH)2 and expand them\n  const parenthesesPattern = /\\(([^)]+)\\)(\\d*)/g;\n  expandedFormula = expandedFormula.replace(parenthesesPattern, (match, group, multiplier) => {\n    const mult = multiplier ? parseInt(multiplier, 10) : 1;\n    let expanded = '';\n    for (let i = 0; i < mult; i++) {\n      expanded += group;\n    }\n    return expanded;\n  });\n  \n  // Now parse the expanded formula\n  const matches = expandedFormula.match(/([A-Z][a-z]?)(\\d*)/g);\n  if (matches) {\n    for (const match of matches) {\n      const elementMatch = match.match(/([A-Z][a-z]?)(\\d*)/);\n      if (elementMatch) {\n        const element = elementMatch[1];\n        const count = elementMatch[2] ? parseInt(elementMatch[2], 10) : 1;\n        \n        if (isElementSymbol(element)) {\n          result[element as ValidElement] = (result[element as ValidElement] || 0) + count;\n        }\n      }\n    }\n  }\n  \n  return result;\n}\n\n// ============================================================================\n// Enhanced Error Types\n// ============================================================================\n\n/**\n * Type-safe error for chemical formula validation\n */\nexport class ChemicalFormulaError extends Error {\n  constructor(\n    public readonly formula: string,\n    public readonly reason: 'invalid-syntax' | 'unknown-element' | 'invalid-structure'\n  ) {\n    super(`Invalid chemical formula \"${formula}\": ${reason}`);\n    this.name = 'ChemicalFormulaError';\n  }\n}\n\n/**\n * Type-safe error for equation balancing\n */\nexport class EquationBalancingError extends Error {\n  constructor(\n    public readonly equation: string,\n    public readonly reason: 'impossible-balance' | 'invalid-reactants' | 'invalid-products'\n  ) {\n    super(`Cannot balance equation \"${equation}\": ${reason}`);\n    this.name = 'EquationBalancingError';\n  }\n}\n\n// ============================================================================\n// Exports for Enhanced IntelliSense\n// ============================================================================\n\nexport {\n  // Re-export all types for better IntelliSense\n  type TypedElementCount as ElementCount,\n  type TypedEquationData as EquationData,\n  type TypedBalancedEquation as BalancedEquation,\n  type TypedSpeciesData as SpeciesData,\n  type TypedStoichiometryResult as StoichiometryResult,\n  type TypedCompound as Compound,\n  type TypedReaction as Reaction\n};\n","/**\n * Enhanced Chemical Equation Balancer with Advanced TypeScript Support\n * Simplified version that provides compound analysis and type safety\n */\n\nimport { ChemicalEquationBalancer } from './balancer';\nimport { ElementCounter } from './utils';\nimport { \n  ChemicalFormula, \n  ElementSymbol, \n  ValidElement,\n  TypedElementCount,\n  isChemicalFormula,\n  isElementSymbol,\n  parseFormula,\n  createChemicalFormula\n} from './advancedTypes';\n\n/**\n * Enhanced chemical compound information\n */\nexport interface EnhancedCompoundInfo {\n  formula: string;\n  molarMass: number;\n  elements: string[];\n  elementCount: Record<string, number>;\n}\n\n/**\n * Enhanced balanced equation result with compound analysis\n */\nexport interface EnhancedBalanceResult {\n  equation: string;\n  isBalanced: boolean;\n  compounds: EnhancedCompoundInfo[];\n  coefficients?: number[];\n  reactants?: string[];\n  products?: string[];\n}\n\n/**\n * Enhanced balancer with type-safe compound analysis\n */\nexport class EnhancedBalancer {\n  private balancer: ChemicalEquationBalancer;\n\n  constructor() {\n    this.balancer = new ChemicalEquationBalancer();\n  }\n\n  /**\n   * Balance equation with enhanced compound information\n   */\n  balance(equation: string): EnhancedBalanceResult {\n    try {\n      // Use the detailed balancer for more information\n      const result = this.balancer.balanceDetailed(equation);\n      \n      // Extract all unique formulas from reactants and products\n      const allFormulas = new Set<string>();\n      \n      // Add formulas from the result structure\n      if (result.reactants && result.reactants.length > 0) {\n        result.reactants.forEach((formula: string) => allFormulas.add(formula));\n      }\n      if (result.products && result.products.length > 0) {\n        result.products.forEach((formula: string) => allFormulas.add(formula));\n      }\n\n      // Analyze each compound\n      const compounds = Array.from(allFormulas).map(formula => \n        this.analyzeCompound(formula)\n      ).filter(compound => compound.formula !== ''); // Filter out empty results\n\n      // Determine if the equation was balanced by checking if it changed OR if coefficients are all 1 (already balanced)\n      const coefficientsAllOne = result.coefficients && result.coefficients.every(coeff => coeff === 1);\n      const wasBalanced = result.equation !== equation || coefficientsAllOne;\n\n      return {\n        equation: result.equation,\n        isBalanced: wasBalanced,\n        compounds,\n        coefficients: result.coefficients,\n        reactants: result.reactants,\n        products: result.products\n      };\n\n    } catch (error) {\n      // Note: Error in enhanced balancer - using fallback\n      return {\n        equation,\n        isBalanced: false,\n        compounds: [],\n        coefficients: [],\n        reactants: [],\n        products: []\n      };\n    }\n  }\n\n  /**\n   * Analyze a single compound for detailed information\n   */\n  private analyzeCompound(formula: string): EnhancedCompoundInfo {\n    try {\n      const elementCounter = new ElementCounter(formula);\n      const elementCount = elementCounter.parseFormula();\n      \n      const elements = Object.keys(elementCount);\n      const molarMass = this.calculateMolarMass(elementCount);\n\n      return {\n        formula,\n        molarMass,\n        elements,\n        elementCount\n      };\n    } catch (error) {\n      return {\n        formula,\n        molarMass: 0,\n        elements: [],\n        elementCount: {}\n      };\n    }\n  }\n\n  /**\n   * Calculate molar mass from element count\n   */\n  private calculateMolarMass(elementCount: Record<string, number>): number {\n    // Atomic masses (simplified)\n    const atomicMasses: Record<string, number> = {\n      'H': 1.008, 'He': 4.003, 'Li': 6.941, 'Be': 9.012, 'B': 10.811,\n      'C': 12.011, 'N': 14.007, 'O': 15.999, 'F': 18.998, 'Ne': 20.180,\n      'Na': 22.990, 'Mg': 24.305, 'Al': 26.982, 'Si': 28.086, 'P': 30.974,\n      'S': 32.065, 'Cl': 35.453, 'Ar': 39.948, 'K': 39.098, 'Ca': 40.078,\n      'Fe': 55.845, 'Cu': 63.546, 'Zn': 65.38, 'Ag': 107.868, 'Au': 196.966\n      // Add more as needed\n    };\n\n    let totalMass = 0;\n    for (const [element, count] of Object.entries(elementCount)) {\n      const atomicMass = atomicMasses[element];\n      if (atomicMass) {\n        totalMass += atomicMass * (count || 0);\n      }\n    }\n\n    return totalMass;\n  }\n\n  /**\n   * Simple formula validation\n   */\n  private isValidFormula(formula: string): boolean {\n    // Basic validation - contains at least one capital letter\n    return /[A-Z]/.test(formula) && formula.length > 0;\n  }\n}\n","/**\n * Cache Eviction Policies for CREB-JS\n * \n * Implements various cache eviction strategies including LRU, LFU, FIFO, TTL, and Random.\n * Each policy provides different trade-offs between performance and memory efficiency.\n */\n\nimport { EvictionPolicy, EvictionStrategy, CacheEntry, AdvancedCacheConfig } from './types';\n\n/**\n * Least Recently Used (LRU) eviction policy\n * Evicts entries that haven't been accessed for the longest time\n */\nexport class LRUEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'lru';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const candidates: Array<{ key: string; lastAccessed: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      candidates.push({ key, lastAccessed: entry.lastAccessed });\n    }\n    \n    // Sort by last accessed time (oldest first)\n    candidates.sort((a, b) => a.lastAccessed - b.lastAccessed);\n    \n    return candidates.slice(0, targetCount).map(c => c.key);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Least Frequently Used (LFU) eviction policy\n * Evicts entries with the lowest access frequency\n */\nexport class LFUEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'lfu';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const candidates: Array<{ key: string; accessCount: number; lastAccessed: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      candidates.push({ \n        key, \n        accessCount: entry.accessCount,\n        lastAccessed: entry.lastAccessed \n      });\n    }\n    \n    // Sort by access count (lowest first), then by last accessed for ties\n    candidates.sort((a, b) => {\n      if (a.accessCount !== b.accessCount) {\n        return a.accessCount - b.accessCount;\n      }\n      return a.lastAccessed - b.lastAccessed;\n    });\n    \n    return candidates.slice(0, targetCount).map(c => c.key);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * First In, First Out (FIFO) eviction policy\n * Evicts entries in the order they were inserted\n */\nexport class FIFOEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'fifo';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const candidates: Array<{ key: string; insertionOrder: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      candidates.push({ key, insertionOrder: entry.insertionOrder });\n    }\n    \n    // Sort by insertion order (oldest first)\n    candidates.sort((a, b) => a.insertionOrder - b.insertionOrder);\n    \n    return candidates.slice(0, targetCount).map(c => c.key);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Time To Live (TTL) eviction policy\n * Evicts expired entries first, then falls back to LRU\n */\nexport class TTLEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'ttl';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const now = Date.now();\n    const expired: string[] = [];\n    const nonExpired: Array<{ key: string; lastAccessed: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      if (entry.ttl > 0 && now >= entry.expiresAt) {\n        expired.push(key);\n      } else {\n        nonExpired.push({ key, lastAccessed: entry.lastAccessed });\n      }\n    }\n    \n    // Return expired entries first\n    if (expired.length >= targetCount) {\n      return expired.slice(0, targetCount);\n    }\n    \n    // If not enough expired entries, use LRU for the rest\n    const remaining = targetCount - expired.length;\n    nonExpired.sort((a, b) => a.lastAccessed - b.lastAccessed);\n    \n    return [...expired, ...nonExpired.slice(0, remaining).map(c => c.key)];\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Random eviction policy\n * Evicts random entries (useful for testing and as fallback)\n */\nexport class RandomEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'random';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const keys = Array.from(entries.keys());\n    const candidates: string[] = [];\n    \n    // Fisher-Yates shuffle to get random keys\n    for (let i = 0; i < targetCount && i < keys.length; i++) {\n      const randomIndex = Math.floor(Math.random() * (keys.length - i)) + i;\n      [keys[i], keys[randomIndex]] = [keys[randomIndex], keys[i]];\n      candidates.push(keys[i]);\n    }\n    \n    return candidates;\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Eviction policy factory\n */\nexport class EvictionPolicyFactory {\n  private static policies = new Map<EvictionStrategy, EvictionPolicy>([\n    ['lru', new LRUEvictionPolicy()],\n    ['lfu', new LFUEvictionPolicy()],\n    ['fifo', new FIFOEvictionPolicy()],\n    ['ttl', new TTLEvictionPolicy()],\n    ['random', new RandomEvictionPolicy()]\n  ]);\n\n  /**\n   * Get eviction policy instance\n   */\n  static getPolicy(strategy: EvictionStrategy): EvictionPolicy {\n    const policy = this.policies.get(strategy);\n    if (!policy) {\n      throw new Error(`Unknown eviction strategy: ${strategy}`);\n    }\n    return policy;\n  }\n\n  /**\n   * Register custom eviction policy\n   */\n  static registerPolicy(policy: EvictionPolicy): void {\n    this.policies.set(policy.strategy, policy);\n  }\n\n  /**\n   * Get all available strategies\n   */\n  static getAvailableStrategies(): EvictionStrategy[] {\n    return Array.from(this.policies.keys());\n  }\n}\n\n/**\n * Adaptive eviction policy that switches strategies based on access patterns\n */\nexport class AdaptiveEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'lru'; // Default fallback\n  \n  private currentPolicy: EvictionPolicy;\n  private performanceHistory: Map<EvictionStrategy, number[]> = new Map();\n  private evaluationWindow = 100; // Number of operations to evaluate\n  private operationCount = 0;\n  \n  constructor(private fallbackStrategy: EvictionStrategy = 'lru') {\n    this.currentPolicy = EvictionPolicyFactory.getPolicy(fallbackStrategy);\n    \n    // Initialize performance tracking\n    for (const strategy of EvictionPolicyFactory.getAvailableStrategies()) {\n      this.performanceHistory.set(strategy, []);\n    }\n  }\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    this.operationCount++;\n    \n    // Periodically evaluate and potentially switch strategies\n    if (this.operationCount % this.evaluationWindow === 0) {\n      this.evaluateAndAdapt(entries, config);\n    }\n    \n    return this.currentPolicy.selectEvictionCandidates(entries, config, targetCount);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    this.currentPolicy.onAccess(entry);\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    this.currentPolicy.onInsert(entry);\n  }\n\n  /**\n   * Evaluate current performance and adapt strategy if needed\n   */\n  private evaluateAndAdapt<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig\n  ): void {\n    // Calculate access pattern metrics\n    const now = Date.now();\n    let totalAccesses = 0;\n    let recentAccesses = 0;\n    let accessVariance = 0;\n    let meanAccess = 0;\n    \n    const accessCounts: number[] = [];\n    \n    for (const entry of entries.values()) {\n      totalAccesses += entry.accessCount;\n      accessCounts.push(entry.accessCount);\n      \n      // Count recent accesses (last hour)\n      if (now - entry.lastAccessed < 3600000) {\n        recentAccesses++;\n      }\n    }\n    \n    if (accessCounts.length > 0) {\n      meanAccess = totalAccesses / accessCounts.length;\n      accessVariance = accessCounts.reduce((sum, count) => sum + Math.pow(count - meanAccess, 2), 0) / accessCounts.length;\n    }\n    \n    // Determine optimal strategy based on patterns\n    let optimalStrategy: EvictionStrategy;\n    \n    if (accessVariance > meanAccess * 2) {\n      // High variance suggests some items are much more popular -> LFU\n      optimalStrategy = 'lfu';\n    } else if (recentAccesses / entries.size > 0.8) {\n      // Most items accessed recently -> LRU\n      optimalStrategy = 'lru';\n    } else if (totalAccesses / entries.size < 2) {\n      // Low overall access -> FIFO\n      optimalStrategy = 'fifo';\n    } else {\n      // Mixed pattern -> TTL\n      optimalStrategy = 'ttl';\n    }\n    \n    // Switch strategy if different from current\n    if (optimalStrategy !== this.currentPolicy.strategy) {\n      this.currentPolicy = EvictionPolicyFactory.getPolicy(optimalStrategy);\n    }\n  }\n\n  /**\n   * Get current strategy being used\n   */\n  getCurrentStrategy(): EvictionStrategy {\n    return this.currentPolicy.strategy;\n  }\n}\n","/**\n * Cache Metrics Collection and Analysis for CREB-JS\n * \n * Provides comprehensive metrics collection, analysis, and reporting for cache performance.\n * Includes real-time monitoring, historical analysis, and performance recommendations.\n */\n\nimport { \n  CacheStats, \n  CacheMetrics, \n  EvictionStrategy, \n  CacheEvent, \n  CacheEventType \n} from './types';\n\n/**\n * Real-time cache metrics collector\n */\nexport class CacheMetricsCollector {\n  private stats!: CacheStats;\n  private history: CacheStats[] = [];\n  private maxHistorySize = 100;\n  private eventCounts = new Map<CacheEventType, number>();\n  private accessTimes: number[] = [];\n  private maxAccessTimeSamples = 1000;\n  \n  constructor() {\n    this.resetStats();\n  }\n\n  /**\n   * Reset all statistics\n   */\n  resetStats(): void {\n    this.stats = {\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      size: 0,\n      memoryUsage: 0,\n      memoryUtilization: 0,\n      evictions: 0,\n      expirations: 0,\n      averageAccessTime: 0,\n      evictionBreakdown: {\n        'lru': 0,\n        'lfu': 0,\n        'fifo': 0,\n        'ttl': 0,\n        'random': 0\n      },\n      lastUpdated: Date.now()\n    };\n    this.eventCounts.clear();\n    this.accessTimes = [];\n  }\n\n  /**\n   * Record a cache event\n   */\n  recordEvent(event: CacheEvent): void {\n    const currentCount = this.eventCounts.get(event.type) || 0;\n    this.eventCounts.set(event.type, currentCount + 1);\n\n    switch (event.type) {\n      case 'hit':\n        this.stats.hits++;\n        break;\n      case 'miss':\n        this.stats.misses++;\n        break;\n      case 'eviction':\n        this.stats.evictions++;\n        if (event.metadata?.strategy) {\n          this.stats.evictionBreakdown[event.metadata.strategy]++;\n        }\n        break;\n      case 'expiration':\n        this.stats.expirations++;\n        break;\n    }\n\n    // Record access time if available\n    if (event.metadata?.latency !== undefined) {\n      this.accessTimes.push(event.metadata.latency);\n      if (this.accessTimes.length > this.maxAccessTimeSamples) {\n        this.accessTimes.shift(); // Remove oldest sample\n      }\n    }\n\n    this.updateComputedStats();\n  }\n\n  /**\n   * Update cache size and memory usage\n   */\n  updateCacheInfo(size: number, memoryUsage: number, maxMemory: number): void {\n    this.stats.size = size;\n    this.stats.memoryUsage = memoryUsage;\n    this.stats.memoryUtilization = maxMemory > 0 ? (memoryUsage / maxMemory) * 100 : 0;\n    this.stats.lastUpdated = Date.now();\n  }\n\n  /**\n   * Get current statistics\n   */\n  getStats(): CacheStats {\n    return { ...this.stats };\n  }\n\n  /**\n   * Get comprehensive metrics with historical data and trends\n   */\n  getMetrics(): CacheMetrics {\n    const current = this.getStats();\n    \n    // Calculate trends\n    const trends = this.calculateTrends();\n    \n    // Calculate peaks\n    const peaks = this.calculatePeaks();\n    \n    return {\n      current,\n      history: [...this.history],\n      trends,\n      peaks\n    };\n  }\n\n  /**\n   * Take a snapshot of current stats for historical tracking\n   */\n  takeSnapshot(): void {\n    const snapshot = this.getStats();\n    this.history.push(snapshot);\n    \n    if (this.history.length > this.maxHistorySize) {\n      this.history.shift(); // Remove oldest snapshot\n    }\n  }\n\n  /**\n   * Get event counts\n   */\n  getEventCounts(): Map<CacheEventType, number> {\n    return new Map(this.eventCounts);\n  }\n\n  /**\n   * Get access time percentiles\n   */\n  getAccessTimePercentiles(): { p50: number; p90: number; p95: number; p99: number } {\n    if (this.accessTimes.length === 0) {\n      return { p50: 0, p90: 0, p95: 0, p99: 0 };\n    }\n\n    const sorted = [...this.accessTimes].sort((a, b) => a - b);\n    const n = sorted.length;\n\n    return {\n      p50: this.getPercentile(sorted, 50),\n      p90: this.getPercentile(sorted, 90),\n      p95: this.getPercentile(sorted, 95),\n      p99: this.getPercentile(sorted, 99)\n    };\n  }\n\n  /**\n   * Update computed statistics\n   */\n  private updateComputedStats(): void {\n    const total = this.stats.hits + this.stats.misses;\n    this.stats.hitRate = total > 0 ? (this.stats.hits / total) * 100 : 0;\n    \n    if (this.accessTimes.length > 0) {\n      this.stats.averageAccessTime = this.accessTimes.reduce((sum, time) => sum + time, 0) / this.accessTimes.length;\n    }\n    \n    this.stats.lastUpdated = Date.now();\n  }\n\n  /**\n   * Calculate performance trends\n   */\n  private calculateTrends(): CacheMetrics['trends'] {\n    if (this.history.length < 3) {\n      return {\n        hitRateTrend: 'stable',\n        memoryTrend: 'stable',\n        latencyTrend: 'stable'\n      };\n    }\n\n    const recent = this.history.slice(-3);\n    \n    // Hit rate trend\n    const hitRateChange = recent[2].hitRate - recent[0].hitRate;\n    const hitRateTrend = Math.abs(hitRateChange) < 1 ? 'stable' : \n                        hitRateChange > 0 ? 'improving' : 'declining';\n    \n    // Memory trend\n    const memoryChange = recent[2].memoryUtilization - recent[0].memoryUtilization;\n    const memoryTrend = Math.abs(memoryChange) < 5 ? 'stable' :\n                        memoryChange > 0 ? 'increasing' : 'decreasing';\n    \n    // Latency trend\n    const latencyChange = recent[2].averageAccessTime - recent[0].averageAccessTime;\n    const latencyTrend = Math.abs(latencyChange) < 0.1 ? 'stable' :\n                         latencyChange < 0 ? 'improving' : 'degrading';\n\n    return {\n      hitRateTrend,\n      memoryTrend,\n      latencyTrend\n    };\n  }\n\n  /**\n   * Calculate peak performance metrics\n   */\n  private calculatePeaks(): CacheMetrics['peaks'] {\n    if (this.history.length === 0) {\n      return {\n        maxHitRate: this.stats.hitRate,\n        maxMemoryUsage: this.stats.memoryUsage,\n        minLatency: this.stats.averageAccessTime\n      };\n    }\n\n    const allStats = [...this.history, this.stats];\n    \n    return {\n      maxHitRate: Math.max(...allStats.map(s => s.hitRate)),\n      maxMemoryUsage: Math.max(...allStats.map(s => s.memoryUsage)),\n      minLatency: Math.min(...allStats.map(s => s.averageAccessTime))\n    };\n  }\n\n  /**\n   * Get percentile value from sorted array\n   */\n  private getPercentile(sorted: number[], percentile: number): number {\n    const index = Math.ceil((percentile / 100) * sorted.length) - 1;\n    return sorted[Math.max(0, Math.min(index, sorted.length - 1))];\n  }\n}\n\n/**\n * Cache performance analyzer\n */\nexport class CachePerformanceAnalyzer {\n  /**\n   * Analyze cache performance and provide recommendations\n   */\n  static analyze(metrics: CacheMetrics): {\n    score: number;\n    issues: string[];\n    recommendations: string[];\n    insights: string[];\n  } {\n    const { current, trends, history } = metrics;\n    const issues: string[] = [];\n    const recommendations: string[] = [];\n    const insights: string[] = [];\n    let score = 100;\n\n    // Analyze hit rate\n    if (current.hitRate < 50) {\n      score -= 30;\n      issues.push('Low cache hit rate');\n      recommendations.push('Consider increasing cache size or optimizing access patterns');\n    } else if (current.hitRate < 70) {\n      score -= 15;\n      issues.push('Moderate cache hit rate');\n      recommendations.push('Review cache eviction strategy');\n    }\n\n    // Analyze memory utilization\n    if (current.memoryUtilization > 90) {\n      score -= 20;\n      issues.push('High memory utilization');\n      recommendations.push('Increase memory limit or improve eviction policy');\n    } else if (current.memoryUtilization < 30) {\n      insights.push('Low memory utilization - cache size could be reduced');\n    }\n\n    // Analyze access time\n    if (current.averageAccessTime > 5) {\n      score -= 15;\n      issues.push('High average access time');\n      recommendations.push('Check for lock contention or optimize data structures');\n    }\n\n    // Analyze trends\n    if (trends.hitRateTrend === 'declining') {\n      score -= 10;\n      issues.push('Declining hit rate trend');\n      recommendations.push('Monitor access patterns and consider adaptive caching');\n    }\n\n    if (trends.latencyTrend === 'degrading') {\n      score -= 10;\n      issues.push('Increasing access latency');\n      recommendations.push('Profile cache operations for performance bottlenecks');\n    }\n\n    // Analyze eviction distribution\n    const totalEvictions = Object.values(current.evictionBreakdown).reduce((sum, count) => sum + count, 0);\n    if (totalEvictions > 0) {\n      const dominantStrategy = Object.entries(current.evictionBreakdown)\n        .reduce((max, [strategy, count]) => count > max.count ? { strategy, count } : max, { strategy: '', count: 0 });\n      \n      if (dominantStrategy.count / totalEvictions > 0.8) {\n        insights.push(`Cache primarily using ${dominantStrategy.strategy} eviction`);\n      } else {\n        insights.push('Cache using mixed eviction strategies - consider adaptive policy');\n      }\n    }\n\n    // Historical comparison\n    if (history.length > 0) {\n      const baseline = history[0];\n      const hitRateImprovement = current.hitRate - baseline.hitRate;\n      if (hitRateImprovement > 10) {\n        insights.push('Significant hit rate improvement observed');\n      } else if (hitRateImprovement < -10) {\n        issues.push('Hit rate has declined significantly');\n        recommendations.push('Review recent changes to access patterns or cache configuration');\n      }\n    }\n\n    return {\n      score: Math.max(0, score),\n      issues,\n      recommendations,\n      insights\n    };\n  }\n\n  /**\n   * Generate performance report\n   */\n  static generateReport(metrics: CacheMetrics): string {\n    const analysis = this.analyze(metrics);\n    const { current } = metrics;\n\n    let report = '# Cache Performance Report\\n\\n';\n    \n    report += `## Overall Score: ${analysis.score}/100\\n\\n`;\n    \n    report += '## Current Statistics\\n';\n    report += `- Hit Rate: ${current.hitRate.toFixed(2)}%\\n`;\n    report += `- Cache Size: ${current.size} entries\\n`;\n    report += `- Memory Usage: ${(current.memoryUsage / 1024 / 1024).toFixed(2)} MB (${current.memoryUtilization.toFixed(1)}%)\\n`;\n    report += `- Average Access Time: ${current.averageAccessTime.toFixed(2)}ms\\n`;\n    report += `- Evictions: ${current.evictions}\\n`;\n    report += `- Expirations: ${current.expirations}\\n\\n`;\n\n    report += '## Trends\\n';\n    report += `- Hit Rate: ${metrics.trends.hitRateTrend}\\n`;\n    report += `- Memory Usage: ${metrics.trends.memoryTrend}\\n`;\n    report += `- Latency: ${metrics.trends.latencyTrend}\\n\\n`;\n\n    if (analysis.issues.length > 0) {\n      report += '## Issues\\n';\n      analysis.issues.forEach(issue => {\n        report += `- ${issue}\\n`;\n      });\n      report += '\\n';\n    }\n\n    if (analysis.recommendations.length > 0) {\n      report += '## Recommendations\\n';\n      analysis.recommendations.forEach(rec => {\n        report += `- ${rec}\\n`;\n      });\n      report += '\\n';\n    }\n\n    if (analysis.insights.length > 0) {\n      report += '## Insights\\n';\n      analysis.insights.forEach(insight => {\n        report += `- ${insight}\\n`;\n      });\n      report += '\\n';\n    }\n\n    return report;\n  }\n}\n","/**\n * Advanced Cache Implementation for CREB-JS\n * \n * Production-ready cache with TTL, multiple eviction policies, metrics,\n * memory management, and thread safety.\n */\n\nimport { \n  IAdvancedCache, \n  CacheEntry, \n  AdvancedCacheConfig, \n  CacheResult, \n  CacheStats, \n  CacheMetrics,\n  CacheEvent,\n  CacheEventType,\n  CacheEventListener,\n  EvictionStrategy\n} from './types';\nimport { EvictionPolicyFactory } from './EvictionPolicies';\nimport { CacheMetricsCollector, CachePerformanceAnalyzer } from './CacheMetrics';\nimport { Injectable } from '../../core/decorators/Injectable';\n\n/**\n * Default cache configuration\n */\nconst DEFAULT_CONFIG: AdvancedCacheConfig = {\n  maxSize: 1000,\n  defaultTtl: 3600000, // 1 hour\n  evictionStrategy: 'lru',\n  fallbackStrategy: 'fifo',\n  maxMemoryBytes: 100 * 1024 * 1024, // 100MB\n  enableMetrics: true,\n  metricsInterval: 60000, // 1 minute\n  autoCleanup: true,\n  cleanupInterval: 300000, // 5 minutes\n  threadSafe: true\n};\n\n/**\n * Advanced cache implementation with comprehensive features\n */\n@Injectable()\nexport class AdvancedCache<T = any> implements IAdvancedCache<T> {\n  private entries = new Map<string, CacheEntry<T>>();\n  private config: AdvancedCacheConfig;\n  private metrics: CacheMetricsCollector;\n  private listeners = new Map<CacheEventType, Set<CacheEventListener<T>>>();\n  private insertionCounter = 0;\n  private cleanupTimer?: NodeJS.Timeout;\n  private metricsTimer?: NodeJS.Timeout;\n  private mutex = new AsyncMutex();\n\n  constructor(config: Partial<AdvancedCacheConfig> = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.metrics = new CacheMetricsCollector();\n    \n    // Start background tasks\n    if (this.config.autoCleanup) {\n      this.startCleanupTimer();\n    }\n    \n    if (this.config.enableMetrics) {\n      this.startMetricsTimer();\n    }\n  }\n\n  /**\n   * Get value from cache\n   */\n  async get(key: string): Promise<CacheResult<T>> {\n    const startTime = Date.now();\n    \n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.getInternal(key, startTime));\n    } else {\n      return this.getInternal(key, startTime);\n    }\n  }\n\n  /**\n   * Set value in cache\n   */\n  async set(key: string, value: T, ttl?: number): Promise<CacheResult<void>> {\n    const startTime = Date.now();\n    \n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.setInternal(key, value, ttl, startTime));\n    } else {\n      return this.setInternal(key, value, ttl, startTime);\n    }\n  }\n\n  /**\n   * Check if key exists in cache\n   */\n  async has(key: string): Promise<boolean> {\n    const entry = this.entries.get(key);\n    if (!entry) return false;\n    \n    // Check if expired\n    const now = Date.now();\n    if (entry.ttl > 0 && now >= entry.expiresAt) {\n      await this.deleteInternal(key);\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Delete entry from cache\n   */\n  async delete(key: string): Promise<boolean> {\n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.deleteInternal(key));\n    } else {\n      return this.deleteInternal(key);\n    }\n  }\n\n  /**\n   * Clear all entries\n   */\n  async clear(): Promise<void> {\n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.clearInternal());\n    } else {\n      return this.clearInternal();\n    }\n  }\n\n  /**\n   * Get current cache statistics\n   */\n  getStats(): CacheStats {\n    this.updateMetrics();\n    return this.metrics.getStats();\n  }\n\n  /**\n   * Get detailed metrics\n   */\n  getMetrics(): CacheMetrics {\n    this.metrics.takeSnapshot();\n    return this.metrics.getMetrics();\n  }\n\n  /**\n   * Force cleanup of expired entries\n   */\n  async cleanup(): Promise<number> {\n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.cleanupInternal());\n    } else {\n      return this.cleanupInternal();\n    }\n  }\n\n  /**\n   * Add event listener\n   */\n  addEventListener(type: CacheEventType, listener: CacheEventListener<T>): void {\n    if (!this.listeners.has(type)) {\n      this.listeners.set(type, new Set());\n    }\n    this.listeners.get(type)!.add(listener);\n  }\n\n  /**\n   * Remove event listener\n   */\n  removeEventListener(type: CacheEventType, listener: CacheEventListener<T>): void {\n    const typeListeners = this.listeners.get(type);\n    if (typeListeners) {\n      typeListeners.delete(listener);\n    }\n  }\n\n  /**\n   * Get all keys\n   */\n  keys(): string[] {\n    return Array.from(this.entries.keys());\n  }\n\n  /**\n   * Get cache size\n   */\n  size(): number {\n    return this.entries.size;\n  }\n\n  /**\n   * Get memory usage in bytes\n   */\n  memoryUsage(): number {\n    let total = 0;\n    for (const entry of this.entries.values()) {\n      total += entry.sizeBytes;\n    }\n    return total;\n  }\n\n  /**\n   * Check if cache is healthy\n   */\n  async healthCheck(): Promise<{\n    healthy: boolean;\n    issues: string[];\n    recommendations: string[];\n  }> {\n    const metrics = this.getMetrics();\n    const analysis = CachePerformanceAnalyzer.analyze(metrics);\n    \n    return {\n      healthy: analysis.score >= 70,\n      issues: analysis.issues,\n      recommendations: analysis.recommendations\n    };\n  }\n\n  /**\n   * Shutdown cache and cleanup resources\n   */\n  shutdown(): void {\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n    }\n    if (this.metricsTimer) {\n      clearInterval(this.metricsTimer);\n    }\n  }\n\n  // Internal implementation methods\n\n  private async getInternal(key: string, startTime: number): Promise<CacheResult<T>> {\n    const entry = this.entries.get(key);\n    const latency = Date.now() - startTime;\n    \n    if (!entry) {\n      this.emitEvent('miss', key, undefined, { latency });\n      return { success: true, hit: false, latency };\n    }\n    \n    // Check if expired\n    const now = Date.now();\n    if (entry.ttl > 0 && now >= entry.expiresAt) {\n      await this.deleteInternal(key);\n      this.emitEvent('miss', key, undefined, { latency, expired: true });\n      return { success: true, hit: false, latency, metadata: { expired: true } };\n    }\n    \n    // Update access metadata\n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    policy.onAccess(entry);\n    \n    this.emitEvent('hit', key, entry.value, { latency });\n    return { success: true, value: entry.value, hit: true, latency };\n  }\n\n  private async setInternal(key: string, value: T, ttl?: number, startTime?: number): Promise<CacheResult<void>> {\n    const now = Date.now();\n    const entryTtl = ttl ?? this.config.defaultTtl;\n    const latency = startTime ? now - startTime : 0;\n    \n    // Calculate size estimate\n    const sizeBytes = this.estimateSize(value);\n    \n    // Check memory constraints before adding\n    const currentMemory = this.memoryUsage();\n    if (this.config.maxMemoryBytes > 0 && currentMemory + sizeBytes > this.config.maxMemoryBytes) {\n      await this.evictForMemory(sizeBytes);\n    }\n    \n    // Check size constraints and evict if necessary\n    if (this.entries.size >= this.config.maxSize) {\n      await this.evictEntries(1);\n    }\n    \n    // Create new entry\n    const entry: CacheEntry<T> = {\n      value,\n      createdAt: now,\n      lastAccessed: now,\n      accessCount: 1,\n      ttl: entryTtl,\n      expiresAt: entryTtl > 0 ? now + entryTtl : 0,\n      sizeBytes,\n      insertionOrder: this.insertionCounter++\n    };\n    \n    // Update access metadata\n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    policy.onInsert(entry);\n    \n    // Store entry\n    this.entries.set(key, entry);\n    \n    this.emitEvent('set', key, value, { latency });\n    return { success: true, hit: false, latency };\n  }\n\n  private async deleteInternal(key: string): Promise<boolean> {\n    const entry = this.entries.get(key);\n    if (!entry) return false;\n    \n    this.entries.delete(key);\n    this.emitEvent('delete', key, entry.value);\n    return true;\n  }\n\n  private async clearInternal(): Promise<void> {\n    this.entries.clear();\n    this.insertionCounter = 0;\n    this.emitEvent('clear');\n  }\n\n  private async cleanupInternal(): Promise<number> {\n    const now = Date.now();\n    const expiredKeys: string[] = [];\n    \n    for (const [key, entry] of this.entries.entries()) {\n      if (entry.ttl > 0 && now >= entry.expiresAt) {\n        expiredKeys.push(key);\n      }\n    }\n    \n    for (const key of expiredKeys) {\n      this.entries.delete(key);\n      this.emitEvent('expiration', key);\n    }\n    \n    return expiredKeys.length;\n  }\n\n  private async evictEntries(count: number): Promise<void> {\n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    const candidates = policy.selectEvictionCandidates(this.entries, this.config, count);\n    \n    for (const key of candidates) {\n      const entry = this.entries.get(key);\n      if (entry) {\n        this.entries.delete(key);\n        this.emitEvent('eviction', key, entry.value, { \n          strategy: this.config.evictionStrategy \n        });\n      }\n    }\n  }\n\n  private async evictForMemory(requiredBytes: number): Promise<void> {\n    const currentMemory = this.memoryUsage();\n    const targetMemory = this.config.maxMemoryBytes - requiredBytes;\n    \n    if (currentMemory <= targetMemory) return;\n    \n    const bytesToEvict = currentMemory - targetMemory;\n    let evictedBytes = 0;\n    let evictedCount = 0;\n    \n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    \n    while (evictedBytes < bytesToEvict && this.entries.size > 0) {\n      const candidates = policy.selectEvictionCandidates(this.entries, this.config, 1);\n      if (candidates.length === 0) break;\n      \n      const key = candidates[0];\n      const entry = this.entries.get(key);\n      if (entry) {\n        evictedBytes += entry.sizeBytes;\n        evictedCount++;\n        this.entries.delete(key);\n        this.emitEvent('eviction', key, entry.value, { \n          strategy: this.config.evictionStrategy,\n          reason: 'memory-pressure',\n          memoryBefore: currentMemory,\n          memoryAfter: currentMemory - evictedBytes\n        });\n      }\n    }\n    \n    if (evictedBytes < bytesToEvict) {\n      this.emitEvent('memory-pressure', undefined, undefined, {\n        reason: 'Unable to free sufficient memory'\n      });\n    }\n  }\n\n  private estimateSize(value: T): number {\n    // Simple size estimation - could be improved with more sophisticated analysis\n    const str = JSON.stringify(value);\n    return str.length * 2; // Rough estimate for UTF-16 encoding\n  }\n\n  private emitEvent(type: CacheEventType, key?: string, value?: T, metadata?: any): void {\n    const event: CacheEvent<T> = {\n      type,\n      key,\n      value,\n      timestamp: Date.now(),\n      metadata\n    };\n    \n    // Record in metrics\n    this.metrics.recordEvent(event);\n    \n    // Notify listeners\n    const typeListeners = this.listeners.get(type);\n    if (typeListeners) {\n      for (const listener of typeListeners) {\n        try {\n          listener(event);\n        } catch (error) {\n          console.warn('Cache event listener error:', error);\n        }\n      }\n    }\n  }\n\n  private updateMetrics(): void {\n    const size = this.entries.size;\n    const memory = this.memoryUsage();\n    this.metrics.updateCacheInfo(size, memory, this.config.maxMemoryBytes);\n  }\n\n  private startCleanupTimer(): void {\n    this.cleanupTimer = setInterval(async () => {\n      try {\n        await this.cleanup();\n      } catch (error) {\n        console.warn('Cache cleanup error:', error);\n      }\n    }, this.config.cleanupInterval);\n  }\n\n  private startMetricsTimer(): void {\n    this.metricsTimer = setInterval(() => {\n      this.metrics.takeSnapshot();\n      this.emitEvent('stats-update');\n    }, this.config.metricsInterval);\n  }\n}\n\n/**\n * Simple async mutex for thread safety\n */\nclass AsyncMutex {\n  private locked = false;\n  private queue: Array<() => void> = [];\n\n  async runExclusive<R>(fn: () => R | Promise<R>): Promise<R> {\n    return new Promise((resolve, reject) => {\n      const run = async () => {\n        this.locked = true;\n        try {\n          const result = await fn();\n          resolve(result);\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.locked = false;\n          const next = this.queue.shift();\n          if (next) {\n            next();\n          }\n        }\n      };\n\n      if (this.locked) {\n        this.queue.push(run);\n      } else {\n        run();\n      }\n    });\n  }\n}\n\n/**\n * Cache factory for creating configured cache instances\n */\nexport class CacheFactory {\n  private static presets: Record<string, Partial<AdvancedCacheConfig>> = {\n    'small': {\n      maxSize: 100,\n      maxMemoryBytes: 10 * 1024 * 1024, // 10MB\n      defaultTtl: 1800000, // 30 minutes\n      evictionStrategy: 'lru'\n    },\n    'medium': {\n      maxSize: 1000,\n      maxMemoryBytes: 50 * 1024 * 1024, // 50MB\n      defaultTtl: 3600000, // 1 hour\n      evictionStrategy: 'lru'\n    },\n    'large': {\n      maxSize: 10000,\n      maxMemoryBytes: 200 * 1024 * 1024, // 200MB\n      defaultTtl: 7200000, // 2 hours\n      evictionStrategy: 'lfu'\n    },\n    'memory-optimized': {\n      maxSize: 500,\n      maxMemoryBytes: 25 * 1024 * 1024, // 25MB\n      defaultTtl: 1800000, // 30 minutes\n      evictionStrategy: 'lfu',\n      autoCleanup: true,\n      cleanupInterval: 60000 // 1 minute\n    },\n    'performance-optimized': {\n      maxSize: 5000,\n      maxMemoryBytes: 100 * 1024 * 1024, // 100MB\n      defaultTtl: 3600000, // 1 hour\n      evictionStrategy: 'lru',\n      threadSafe: false, // Better performance but not thread-safe\n      enableMetrics: false // Better performance\n    }\n  };\n\n  /**\n   * Create cache with preset configuration\n   */\n  static create<T = any>(preset: keyof typeof CacheFactory.presets): AdvancedCache<T>;\n  static create<T = any>(config: Partial<AdvancedCacheConfig>): AdvancedCache<T>;\n  static create<T = any>(configOrPreset: keyof typeof CacheFactory.presets | Partial<AdvancedCacheConfig>): AdvancedCache<T> {\n    if (typeof configOrPreset === 'string') {\n      const presetConfig = this.presets[configOrPreset];\n      if (!presetConfig) {\n        throw new Error(`Unknown cache preset: ${configOrPreset}`);\n      }\n      return new AdvancedCache<T>(presetConfig);\n    } else {\n      return new AdvancedCache<T>(configOrPreset);\n    }\n  }\n\n  /**\n   * Register custom preset\n   */\n  static registerPreset(name: string, config: Partial<AdvancedCacheConfig>): void {\n    this.presets[name] = config;\n  }\n\n  /**\n   * Get available presets\n   */\n  static getPresets(): string[] {\n    return Object.keys(this.presets);\n  }\n}\n","/**\n * @fileoverview Type definitions for the CREB Validation Pipeline\n * \n * Provides comprehensive type definitions for:\n * - Validation results and errors\n * - Validator interfaces and compositions\n * - Rule definitions and dependencies\n * - Performance metrics and caching\n * - Chemical-specific validation types\n * \n * @version 1.0.0\n * @author CREB Team\n */\n\nimport { CREBError } from '../../core/errors/CREBError';\n\n// ============================================================================\n// Core Validation Types\n// ============================================================================\n\n/**\n * Severity levels for validation errors\n */\nexport enum ValidationSeverity {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n  CRITICAL = 'critical'\n}\n\n/**\n * Validation error with context and suggested fixes\n */\nexport interface ValidationError {\n  /** Error code for programmatic handling */\n  code: string;\n  /** Human-readable error message */\n  message: string;\n  /** Path to the invalid field/property */\n  path: string[];\n  /** Severity level of the error */\n  severity: ValidationSeverity;\n  /** Suggested fixes or corrections */\n  suggestions: string[];\n  /** Additional context data */\n  context?: Record<string, any>;\n  /** Original invalid value */\n  value?: any;\n}\n\n/**\n * Result of a validation operation\n */\nexport interface ValidationResult {\n  /** Whether validation passed */\n  isValid: boolean;\n  /** List of validation errors */\n  errors: ValidationError[];\n  /** Warnings that don't prevent validation */\n  warnings: ValidationError[];\n  /** Performance metrics */\n  metrics: ValidationMetrics;\n  /** Cached result indicator */\n  fromCache?: boolean;\n  /** Validation timestamp */\n  timestamp: Date;\n}\n\n/**\n * Performance metrics for validation operations\n */\nexport interface ValidationMetrics {\n  /** Total validation time in milliseconds */\n  duration: number;\n  /** Number of rules executed */\n  rulesExecuted: number;\n  /** Number of validators used */\n  validatorsUsed: number;\n  /** Cache hit/miss information */\n  cacheStats: {\n    hits: number;\n    misses: number;\n    hitRate: number;\n  };\n  /** Memory usage during validation */\n  memoryUsage?: number;\n}\n\n// ============================================================================\n// Validator Interfaces\n// ============================================================================\n\n/**\n * Configuration for a validator\n */\nexport interface ValidatorConfig {\n  /** Whether validator is enabled */\n  enabled: boolean;\n  /** Priority for execution order */\n  priority: number;\n  /** Timeout in milliseconds */\n  timeout?: number;\n  /** Whether to cache results */\n  cacheable: boolean;\n  /** Custom configuration options */\n  options?: Record<string, any>;\n}\n\n/**\n * Context passed to validators during execution\n */\nexport interface ValidationContext {\n  /** Path to current property being validated */\n  path: string[];\n  /** Root object being validated */\n  root: any;\n  /** Parent object of current property */\n  parent?: any;\n  /** Validation configuration */\n  config: ValidatorConfig;\n  /** Shared context data */\n  shared: Map<string, any>;\n  /** Performance tracker */\n  metrics: ValidationMetrics;\n}\n\n/**\n * Base validator interface\n */\nexport interface IValidator<T = any> {\n  /** Unique validator identifier */\n  readonly name: string;\n  /** Validator configuration */\n  readonly config: ValidatorConfig;\n  /** Dependencies on other validators */\n  readonly dependencies: string[];\n  \n  /**\n   * Validate a value\n   * @param value Value to validate\n   * @param context Validation context\n   * @returns Promise resolving to validation result\n   */\n  validate(value: T, context: ValidationContext): Promise<ValidationResult>;\n  \n  /**\n   * Check if validator can handle the given value type\n   * @param value Value to check\n   * @returns Whether validator can validate this value\n   */\n  canValidate(value: any): value is T;\n  \n  /**\n   * Get validation schema/metadata\n   * @returns Schema information\n   */\n  getSchema(): ValidationSchema;\n}\n\n/**\n * Composite validator that combines multiple validators\n */\nexport interface ICompositeValidator extends IValidator {\n  /** Child validators */\n  readonly validators: IValidator[];\n  \n  /**\n   * Add a validator to the composition\n   * @param validator Validator to add\n   */\n  addValidator(validator: IValidator): void;\n  \n  /**\n   * Remove a validator from the composition\n   * @param name Name of validator to remove\n   */\n  removeValidator(name: string): void;\n  \n  /**\n   * Get a specific validator by name\n   * @param name Validator name\n   */\n  getValidator(name: string): IValidator | undefined;\n}\n\n// ============================================================================\n// Rule System\n// ============================================================================\n\n/**\n * Validation rule definition\n */\nexport interface ValidationRule<T = any> {\n  /** Unique rule identifier */\n  name: string;\n  /** Human-readable description */\n  description: string;\n  /** Rule dependencies */\n  dependencies: string[];\n  /** Rule priority (higher = earlier execution) */\n  priority: number;\n  /** Whether rule can be cached */\n  cacheable: boolean;\n  \n  /**\n   * Execute the validation rule\n   * @param value Value to validate\n   * @param context Validation context\n   * @returns Promise resolving to rule result\n   */\n  execute(value: T, context: ValidationContext): Promise<RuleResult>;\n  \n  /**\n   * Check if rule applies to the given value\n   * @param value Value to check\n   * @returns Whether rule should be executed\n   */\n  appliesTo(value: any): boolean;\n}\n\n/**\n * Result of executing a validation rule\n */\nexport interface RuleResult {\n  /** Whether rule passed */\n  passed: boolean;\n  /** Error if rule failed */\n  error?: ValidationError;\n  /** Execution time in milliseconds */\n  duration: number;\n  /** Whether result was cached */\n  cached: boolean;\n  /** Additional metadata */\n  metadata?: Record<string, any>;\n}\n\n/**\n * Rule dependency graph node\n */\nexport interface RuleDependencyNode {\n  /** Rule name */\n  name: string;\n  /** Dependent rules */\n  dependencies: string[];\n  /** Rules that depend on this one */\n  dependents: string[];\n  /** Execution order */\n  order: number;\n}\n\n// ============================================================================\n// Chemical Validation Types\n// ============================================================================\n\n/**\n * Chemical formula validation configuration\n */\nexport interface ChemicalFormulaConfig {\n  /** Allow isotope notation (e.g., 13C) */\n  allowIsotopes: boolean;\n  /** Allow radical notation (e.g., •) */\n  allowRadicals: boolean;\n  /** Allow charge notation (e.g., +, -, 2+) */\n  allowCharges: boolean;\n  /** Allow complex notation (e.g., [Cu(NH3)4]2+) */\n  allowComplexes: boolean;\n  /** Maximum allowed atoms per formula */\n  maxAtoms: number;\n  /** Allowed elements (empty = all) */\n  allowedElements: string[];\n}\n\n/**\n * Thermodynamic property validation configuration\n */\nexport interface ThermodynamicConfig {\n  /** Temperature range in Kelvin */\n  temperatureRange: { min: number; max: number };\n  /** Pressure range in Pa */\n  pressureRange: { min: number; max: number };\n  /** Enthalpy range in kJ/mol */\n  enthalpyRange: { min: number; max: number };\n  /** Entropy range in J/(mol·K) */\n  entropyRange: { min: number; max: number };\n  /** Heat capacity range in J/(mol·K) */\n  heatCapacityRange: { min: number; max: number };\n}\n\n/**\n * Safety data validation configuration\n */\nexport interface SafetyDataConfig {\n  /** Required safety properties */\n  requiredProperties: string[];\n  /** GHS classification validation */\n  validateGHS: boolean;\n  /** UN number validation */\n  validateUN: boolean;\n  /** Flash point validation */\n  validateFlashPoint: boolean;\n  /** Autoignition temperature validation */\n  validateAutoignition: boolean;\n}\n\n/**\n * Chemical compound data for validation\n */\nexport interface ChemicalCompound {\n  /** Chemical formula */\n  formula: string;\n  /** IUPAC name */\n  name?: string;\n  /** CAS registry number */\n  cas?: string;\n  /** SMILES notation */\n  smiles?: string;\n  /** InChI identifier */\n  inchi?: string;\n  /** Molecular weight in g/mol */\n  molecularWeight?: number;\n  /** Thermodynamic properties */\n  thermodynamics?: ThermodynamicProperties;\n  /** Safety data */\n  safety?: SafetyData;\n}\n\n/**\n * Thermodynamic properties\n */\nexport interface ThermodynamicProperties {\n  /** Standard enthalpy of formation (kJ/mol) */\n  enthalpyFormation?: number;\n  /** Standard entropy (J/(mol·K)) */\n  entropy?: number;\n  /** Heat capacity at constant pressure (J/(mol·K)) */\n  heatCapacity?: number;\n  /** Standard Gibbs free energy (kJ/mol) */\n  gibbsEnergy?: number;\n  /** Melting point (K) */\n  meltingPoint?: number;\n  /** Boiling point (K) */\n  boilingPoint?: number;\n  /** Density (g/cm³) */\n  density?: number;\n}\n\n/**\n * Safety data\n */\nexport interface SafetyData {\n  /** GHS hazard classifications */\n  ghsClassifications?: string[];\n  /** Hazard statements */\n  hazardStatements?: string[];\n  /** Precautionary statements */\n  precautionaryStatements?: string[];\n  /** UN number */\n  unNumber?: string;\n  /** Flash point (°C) */\n  flashPoint?: number;\n  /** Autoignition temperature (°C) */\n  autoignitionTemperature?: number;\n  /** Vapor pressure (Pa) */\n  vaporPressure?: number;\n  /** Water solubility (g/L) */\n  waterSolubility?: number;\n}\n\n// ============================================================================\n// Pipeline Configuration\n// ============================================================================\n\n/**\n * Validation pipeline configuration\n */\nexport interface ValidationPipelineConfig {\n  /** Maximum validation time in milliseconds */\n  timeout: number;\n  /** Whether to enable caching */\n  enableCaching: boolean;\n  /** Cache TTL in milliseconds */\n  cacheTTL: number;\n  /** Maximum cache size */\n  maxCacheSize: number;\n  /** Whether to continue on errors */\n  continueOnError: boolean;\n  /** Parallel execution settings */\n  parallel: {\n    enabled: boolean;\n    maxConcurrency: number;\n  };\n  /** Performance monitoring settings */\n  monitoring: {\n    enabled: boolean;\n    sampleRate: number;\n  };\n}\n\n/**\n * Validation schema definition\n */\nexport interface ValidationSchema {\n  /** Schema name */\n  name: string;\n  /** Schema version */\n  version: string;\n  /** Schema description */\n  description: string;\n  /** Supported data types */\n  types: string[];\n  /** Required validators */\n  requiredValidators: string[];\n  /** Optional validators */\n  optionalValidators: string[];\n  /** Custom properties */\n  properties: Record<string, any>;\n}\n\n// ============================================================================\n// Cache Types\n// ============================================================================\n\n/**\n * Cache key for validation results\n */\nexport interface ValidationCacheKey {\n  /** Validator name */\n  validator: string;\n  /** Value hash */\n  valueHash: string;\n  /** Config hash */\n  configHash: string;\n  /** Schema version */\n  schemaVersion: string;\n}\n\n/**\n * Cached validation result\n */\nexport interface CachedValidationResult {\n  /** Validation result */\n  result: ValidationResult;\n  /** Cache creation timestamp */\n  createdAt: Date;\n  /** Cache expiration timestamp */\n  expiresAt: Date;\n  /** Number of cache hits */\n  hitCount: number;\n}\n\n// ============================================================================\n// Event Types\n// ============================================================================\n\n/**\n * Validation pipeline events\n */\nexport interface ValidationEvents {\n  'validation:started': { target: any; validators: string[] };\n  'validation:completed': { result: ValidationResult };\n  'validation:error': { error: CREBError };\n  'validator:executed': { validator: string; result: ValidationResult };\n  'rule:executed': { rule: string; result: RuleResult };\n  'cache:hit': { key: ValidationCacheKey };\n  'cache:miss': { key: ValidationCacheKey };\n  'performance:threshold': { metric: string; value: number; threshold: number };\n}\n\n// ============================================================================\n// Utility Types\n// ============================================================================\n\n/**\n * Validation builder for fluent API\n */\nexport interface ValidationBuilder<T> {\n  /** Add a validator */\n  addValidator(validator: IValidator<T>): ValidationBuilder<T>;\n  /** Add a rule */\n  addRule(rule: ValidationRule<T>): ValidationBuilder<T>;\n  /** Set configuration */\n  withConfig(config: Partial<ValidationPipelineConfig>): ValidationBuilder<T>;\n  /** Build the validator */\n  build(): IValidator<T>;\n}\n\n/**\n * Validator factory function type\n */\nexport type ValidatorFactory<T = any> = (config?: any) => IValidator<T>;\n\n/**\n * Rule factory function type\n */\nexport type RuleFactory<T = any> = (config?: any) => ValidationRule<T>;\n\n// ============================================================================\n// Type Guards\n// ============================================================================\n\n/**\n * Type guard for validation results\n */\nexport function isValidationResult(obj: any): obj is ValidationResult {\n  return obj && \n    typeof obj.isValid === 'boolean' &&\n    Array.isArray(obj.errors) &&\n    Array.isArray(obj.warnings) &&\n    obj.metrics &&\n    obj.timestamp instanceof Date;\n}\n\n/**\n * Type guard for validation errors\n */\nexport function isValidationError(obj: any): obj is ValidationError {\n  return obj &&\n    typeof obj.code === 'string' &&\n    typeof obj.message === 'string' &&\n    Array.isArray(obj.path) &&\n    Object.values(ValidationSeverity).includes(obj.severity) &&\n    Array.isArray(obj.suggestions);\n}\n\n/**\n * Type guard for validators\n */\nexport function isValidator(obj: any): obj is IValidator {\n  return obj &&\n    typeof obj.name === 'string' &&\n    obj.config &&\n    Array.isArray(obj.dependencies) &&\n    typeof obj.validate === 'function' &&\n    typeof obj.canValidate === 'function' &&\n    typeof obj.getSchema === 'function';\n}\n\n/**\n * Type guard for validation rules\n */\nexport function isValidationRule(obj: any): obj is ValidationRule {\n  return obj &&\n    typeof obj.name === 'string' &&\n    typeof obj.description === 'string' &&\n    Array.isArray(obj.dependencies) &&\n    typeof obj.priority === 'number' &&\n    typeof obj.execute === 'function' &&\n    typeof obj.appliesTo === 'function';\n}\n","/**\n * @fileoverview Base validator classes and validator composition utilities\n * \n * Provides foundation classes for building custom validators:\n * - BaseValidator: Abstract base class with common functionality\n * - CompositeValidator: Combines multiple validators\n * - ValidatorBuilder: Fluent API for building validators\n * - SpecializedValidators: Chemistry-specific validator helpers\n * \n * @version 1.0.0\n * @author CREB Team\n */\n\nimport {\n  IValidator,\n  ICompositeValidator,\n  ValidationResult,\n  ValidationContext,\n  ValidatorConfig,\n  ValidationSchema,\n  ValidationError,\n  ValidationSeverity,\n  ValidationBuilder\n} from '../types';\nimport { CREBError, ValidationError as CREBValidationError } from '../../../core/errors/CREBError';\n\n// ============================================================================\n// Base Validator\n// ============================================================================\n\n/**\n * Abstract base class for all validators\n */\nexport abstract class BaseValidator<T = any> implements IValidator<T> {\n  public readonly name: string;\n  public readonly config: ValidatorConfig;\n  public readonly dependencies: string[];\n  protected readonly schema: ValidationSchema;\n\n  constructor(\n    name: string,\n    config: Partial<ValidatorConfig> = {},\n    dependencies: string[] = []\n  ) {\n    this.name = name;\n    this.dependencies = dependencies;\n    this.config = {\n      enabled: true,\n      priority: 0,\n      timeout: 5000,\n      cacheable: true,\n      ...config\n    };\n    \n    this.schema = this.createSchema();\n  }\n\n  /**\n   * Validate a value - must be implemented by subclasses\n   */\n  abstract validate(value: T, context: ValidationContext): Promise<ValidationResult>;\n\n  /**\n   * Check if validator can handle the given value type\n   */\n  abstract canValidate(value: any): value is T;\n\n  /**\n   * Create validation schema - can be overridden by subclasses\n   */\n  protected createSchema(): ValidationSchema {\n    return {\n      name: this.name,\n      version: '1.0.0',\n      description: `Schema for ${this.name} validator`,\n      types: ['any'],\n      requiredValidators: [],\n      optionalValidators: [],\n      properties: {}\n    };\n  }\n\n  /**\n   * Get validation schema\n   */\n  getSchema(): ValidationSchema {\n    return { ...this.schema };\n  }\n\n  /**\n   * Create a validation error\n   */\n  protected createError(\n    code: string,\n    message: string,\n    path: string[],\n    severity: ValidationSeverity = ValidationSeverity.ERROR,\n    suggestions: string[] = [],\n    context?: Record<string, any>,\n    value?: any\n  ): ValidationError {\n    return {\n      code,\n      message,\n      path,\n      severity,\n      suggestions,\n      context,\n      value\n    };\n  }\n\n  /**\n   * Create a successful validation result\n   */\n  protected createSuccessResult(\n    context: ValidationContext,\n    warnings: ValidationError[] = []\n  ): ValidationResult {\n    return {\n      isValid: true,\n      errors: [],\n      warnings,\n      metrics: {\n        duration: 0,\n        rulesExecuted: 0,\n        validatorsUsed: 1,\n        cacheStats: { hits: 0, misses: 0, hitRate: 0 }\n      },\n      timestamp: new Date()\n    };\n  }\n\n  /**\n   * Create a failed validation result\n   */\n  protected createFailureResult(\n    errors: ValidationError[],\n    context: ValidationContext,\n    warnings: ValidationError[] = []\n  ): ValidationResult {\n    return {\n      isValid: false,\n      errors,\n      warnings,\n      metrics: {\n        duration: 0,\n        rulesExecuted: 0,\n        validatorsUsed: 1,\n        cacheStats: { hits: 0, misses: 0, hitRate: 0 }\n      },\n      timestamp: new Date()\n    };\n  }\n\n  /**\n   * Validate configuration\n   */\n  protected validateConfig(): void {\n    if (this.config.timeout && this.config.timeout <= 0) {\n      throw new CREBValidationError(\n        'Validator timeout must be positive',\n        { validator: this.name, timeout: this.config.timeout }\n      );\n    }\n  }\n}\n\n// ============================================================================\n// Composite Validator\n// ============================================================================\n\n/**\n * Validator that combines multiple validators\n */\nexport class CompositeValidator extends BaseValidator implements ICompositeValidator {\n  public readonly validators: IValidator[] = [];\n  private readonly validatorMap = new Map<string, IValidator>();\n\n  constructor(\n    name: string,\n    validators: IValidator[] = [],\n    config: Partial<ValidatorConfig> = {}\n  ) {\n    super(name, config);\n    \n    for (const validator of validators) {\n      this.addValidator(validator);\n    }\n  }\n\n  /**\n   * Add a validator to the composition\n   */\n  addValidator(validator: IValidator): void {\n    if (this.validatorMap.has(validator.name)) {\n      throw new CREBValidationError(\n        `Validator '${validator.name}' already exists in composite`,\n        { composite: this.name, validator: validator.name }\n      );\n    }\n\n    this.validators.push(validator);\n    this.validatorMap.set(validator.name, validator);\n  }\n\n  /**\n   * Remove a validator from the composition\n   */\n  removeValidator(name: string): void {\n    const index = this.validators.findIndex(v => v.name === name);\n    if (index !== -1) {\n      this.validators.splice(index, 1);\n      this.validatorMap.delete(name);\n    }\n  }\n\n  /**\n   * Get a specific validator by name\n   */\n  getValidator(name: string): IValidator | undefined {\n    return this.validatorMap.get(name);\n  }\n\n  /**\n   * Check if composite can validate the value\n   */\n  canValidate(value: any): value is any {\n    return this.validators.some(validator => validator.canValidate(value));\n  }\n\n  /**\n   * Validate using all applicable validators\n   */\n  async validate(value: any, context: ValidationContext): Promise<ValidationResult> {\n    const startTime = Date.now();\n    const applicableValidators = this.validators.filter(v => v.canValidate(value));\n\n    if (applicableValidators.length === 0) {\n      return this.createSuccessResult(context);\n    }\n\n    const results: ValidationResult[] = [];\n    const allErrors: ValidationError[] = [];\n    const allWarnings: ValidationError[] = [];\n\n    // Execute all applicable validators\n    for (const validator of applicableValidators) {\n      try {\n        const result = await validator.validate(value, context);\n        results.push(result);\n        allErrors.push(...result.errors);\n        allWarnings.push(...result.warnings);\n      } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        const validationError = this.createError(\n          'COMPOSITE_VALIDATOR_ERROR',\n          `Validator '${validator.name}' failed: ${errorMessage}`,\n          context.path,\n          ValidationSeverity.ERROR,\n          ['Check validator configuration', 'Verify input data'],\n          { validator: validator.name, error: errorMessage }\n        );\n        allErrors.push(validationError);\n      }\n    }\n\n    const duration = Date.now() - startTime;\n    const totalRules = results.reduce((sum, r) => sum + r.metrics.rulesExecuted, 0);\n    const totalCacheHits = results.reduce((sum, r) => sum + r.metrics.cacheStats.hits, 0);\n    const totalCacheMisses = results.reduce((sum, r) => sum + r.metrics.cacheStats.misses, 0);\n    const totalCache = totalCacheHits + totalCacheMisses;\n\n    return {\n      isValid: allErrors.length === 0,\n      errors: allErrors,\n      warnings: allWarnings,\n      metrics: {\n        duration,\n        rulesExecuted: totalRules,\n        validatorsUsed: applicableValidators.length,\n        cacheStats: {\n          hits: totalCacheHits,\n          misses: totalCacheMisses,\n          hitRate: totalCache > 0 ? totalCacheHits / totalCache : 0\n        }\n      },\n      timestamp: new Date()\n    };\n  }\n\n  /**\n   * Create composite schema\n   */\n  protected createSchema(): ValidationSchema {\n    const childSchemas = this.validators.map(v => v.getSchema());\n    const allTypes = new Set<string>();\n    const allRequired = new Set<string>();\n    const allOptional = new Set<string>();\n\n    for (const schema of childSchemas) {\n      schema.types.forEach(type => allTypes.add(type));\n      schema.requiredValidators.forEach(req => allRequired.add(req));\n      schema.optionalValidators.forEach(opt => allOptional.add(opt));\n    }\n\n    return {\n      name: this.name,\n      version: '1.0.0',\n      description: `Composite schema for ${this.name}`,\n      types: Array.from(allTypes),\n      requiredValidators: Array.from(allRequired),\n      optionalValidators: Array.from(allOptional),\n      properties: {\n        compositeOf: this.validators.map(v => v.name),\n        childSchemas\n      }\n    };\n  }\n}\n\n// ============================================================================\n// Validation Builder\n// ============================================================================\n\n/**\n * Fluent API for building validators\n */\nexport class FluentValidationBuilder<T> implements ValidationBuilder<T> {\n  private readonly validators: IValidator<T>[] = [];\n  private readonly rules: any[] = []; // ValidationRule<T>[] - avoiding circular dependency\n  private config: Partial<ValidatorConfig> = {};\n  private name: string;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  /**\n   * Add a validator to the builder\n   */\n  addValidator(validator: IValidator<T>): ValidationBuilder<T> {\n    this.validators.push(validator);\n    return this;\n  }\n\n  /**\n   * Add a rule to the builder\n   */\n  addRule(rule: any): ValidationBuilder<T> { // ValidationRule<T>\n    this.rules.push(rule);\n    return this;\n  }\n\n  /**\n   * Set configuration for the validator\n   */\n  withConfig(config: Partial<ValidatorConfig>): ValidationBuilder<T> {\n    this.config = { ...this.config, ...config };\n    return this;\n  }\n\n  /**\n   * Set validator name\n   */\n  withName(name: string): ValidationBuilder<T> {\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Set validator priority\n   */\n  withPriority(priority: number): ValidationBuilder<T> {\n    this.config.priority = priority;\n    return this;\n  }\n\n  /**\n   * Enable/disable caching\n   */\n  withCaching(enabled: boolean): ValidationBuilder<T> {\n    this.config.cacheable = enabled;\n    return this;\n  }\n\n  /**\n   * Set validator timeout\n   */\n  withTimeout(timeout: number): ValidationBuilder<T> {\n    this.config.timeout = timeout;\n    return this;\n  }\n\n  /**\n   * Build the composite validator\n   */\n  build(): IValidator<T> {\n    if (this.validators.length === 0) {\n      throw new CREBValidationError(\n        'Cannot build validator without any validators',\n        { name: this.name }\n      );\n    }\n\n    if (this.validators.length === 1) {\n      return this.validators[0];\n    }\n\n    return new CompositeValidator(this.name, this.validators, this.config) as IValidator<T>;\n  }\n}\n\n// ============================================================================\n// Specialized Validator Helpers\n// ============================================================================\n\n/**\n * Base class for chemistry-specific validators\n */\nexport abstract class ChemistryValidator<T> extends BaseValidator<T> {\n  protected readonly elementSymbols = new Set([\n    'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca',\n    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr',\n    'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn',\n    'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd',\n    'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n    'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th',\n    'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm',\n    'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds',\n    'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og'\n  ]);\n\n  /**\n   * Validate element symbol\n   */\n  protected isValidElement(symbol: string): boolean {\n    return this.elementSymbols.has(symbol);\n  }\n\n  /**\n   * Parse chemical formula into elements and counts\n   */\n  protected parseFormula(formula: string): Map<string, number> {\n    const elements = new Map<string, number>();\n    const regex = /([A-Z][a-z]?)(\\d*)/g;\n    let match;\n\n    while ((match = regex.exec(formula)) !== null) {\n      const element = match[1];\n      const count = parseInt(match[2] || '1', 10);\n      \n      if (!this.isValidElement(element)) {\n        throw new CREBValidationError(\n          `Invalid element symbol: ${element}`,\n          { element, formula }\n        );\n      }\n\n      elements.set(element, (elements.get(element) || 0) + count);\n    }\n\n    return elements;\n  }\n\n  /**\n   * Calculate molecular weight from formula\n   */\n  protected calculateMolecularWeight(elements: Map<string, number>): number {\n    // Simplified atomic weights (should be imported from constants)\n    const atomicWeights: Record<string, number> = {\n      'H': 1.008, 'C': 12.011, 'N': 14.007, 'O': 15.999,\n      'F': 18.998, 'P': 30.974, 'S': 32.06, 'Cl': 35.45,\n      'K': 39.098, 'Ca': 40.078, 'Fe': 55.845, 'Cu': 63.546,\n      'Zn': 65.38, 'Br': 79.904, 'Ag': 107.868, 'I': 126.90\n      // Add more as needed\n    };\n\n    let totalWeight = 0;\n    for (const [element, count] of elements) {\n      const weight = atomicWeights[element];\n      if (weight === undefined) {\n        throw new CREBValidationError(\n          `Atomic weight not available for element: ${element}`,\n          { element }\n        );\n      }\n      totalWeight += weight * count;\n    }\n\n    return totalWeight;\n  }\n}\n\n/**\n * Async validator base class\n */\nexport abstract class AsyncValidator<T> extends BaseValidator<T> {\n  protected readonly concurrencyLimit: number;\n  private activeTasks = 0;\n\n  constructor(\n    name: string,\n    config: Partial<ValidatorConfig> = {},\n    dependencies: string[] = [],\n    concurrencyLimit = 5\n  ) {\n    super(name, config, dependencies);\n    this.concurrencyLimit = concurrencyLimit;\n  }\n\n  /**\n   * Execute async validation with concurrency control\n   */\n  async validate(value: T, context: ValidationContext): Promise<ValidationResult> {\n    await this.waitForSlot();\n    this.activeTasks++;\n\n    try {\n      return await this.performAsyncValidation(value, context);\n    } finally {\n      this.activeTasks--;\n    }\n  }\n\n  /**\n   * Perform the actual async validation - must be implemented by subclasses\n   */\n  protected abstract performAsyncValidation(\n    value: T,\n    context: ValidationContext\n  ): Promise<ValidationResult>;\n\n  /**\n   * Wait for an available slot\n   */\n  private async waitForSlot(): Promise<void> {\n    while (this.activeTasks >= this.concurrencyLimit) {\n      await new Promise(resolve => setTimeout(resolve, 10));\n    }\n  }\n}\n\n// ============================================================================\n// Factory Functions\n// ============================================================================\n\n/**\n * Create a validation builder\n */\nexport function createValidator<T>(name: string): ValidationBuilder<T> {\n  return new FluentValidationBuilder<T>(name);\n}\n\n/**\n * Create a composite validator\n */\nexport function createCompositeValidator(\n  name: string,\n  validators: IValidator[],\n  config?: Partial<ValidatorConfig>\n): ICompositeValidator {\n  return new CompositeValidator(name, validators, config);\n}\n\n/**\n * Create a chemistry validator (helper for common chemistry validations)\n */\nexport function createChemistryValidator<T>(\n  name: string,\n  validationFn: (value: T, context: ValidationContext) => Promise<ValidationResult>,\n  canValidateFn: (value: any) => value is T,\n  config?: Partial<ValidatorConfig>\n): IValidator<T> {\n  return new (class extends ChemistryValidator<T> {\n    canValidate = canValidateFn;\n    validate = validationFn;\n  })(name, config);\n}\n","/**\n * @fileoverview Chemical Formula Validator\n * \n * Validates chemical formulas with support for:\n * - Basic chemical formulas (H2O, C6H12O6)\n * - Isotope notation (13C, 2H)\n * - Charge notation (+, -, 2+, 3-)\n * - Complex notation ([Cu(NH3)4]2+)\n * - Radical notation (•)\n * \n * @version 1.0.0\n * @author CREB Team\n */\n\nimport {\n  ValidationResult,\n  ValidationContext,\n  ValidatorConfig,\n  ValidationSchema,\n  ValidationSeverity,\n  ValidationError,\n  ChemicalFormulaConfig\n} from '../types';\nimport { ChemistryValidator } from './BaseValidator';\n\n/**\n * Validator for chemical formulas\n */\nexport class ChemicalFormulaValidator extends ChemistryValidator<string> {\n  private readonly formulaConfig: ChemicalFormulaConfig;\n\n  constructor(\n    config: Partial<ValidatorConfig> = {},\n    formulaConfig: Partial<ChemicalFormulaConfig> = {}\n  ) {\n    super('chemical-formula', config);\n    \n    this.formulaConfig = {\n      allowIsotopes: true,\n      allowRadicals: false,\n      allowCharges: true,\n      allowComplexes: true,\n      maxAtoms: 1000,\n      allowedElements: [], // Empty = all elements allowed\n      ...formulaConfig\n    };\n  }\n\n  /**\n   * Check if validator can handle the given value\n   */\n  canValidate(value: any): value is string {\n    return typeof value === 'string' && value.trim().length > 0;\n  }\n\n  /**\n   * Validate chemical formula\n   */\n  async validate(value: string, context: ValidationContext): Promise<ValidationResult> {\n    const startTime = Date.now();\n    const errors = [];\n    const warnings = [];\n\n    try {\n      const formula = value.trim();\n      \n      // Basic format validation\n      if (!this.hasValidFormat(formula)) {\n        // Check for specific types of invalid format\n        const invalidCharPattern = /[^A-Za-z0-9\\(\\)\\[\\]\\+\\-\\s\\•]/;\n        const unicodePattern = /[₀-₉⁰-⁹]/;\n        \n        let errorMessage = `Invalid chemical formula format: ${formula}`;\n        let suggestions = [\n          'Use standard chemical notation (e.g., H2O, CaCl2)',\n          'Ensure element symbols start with uppercase letter',\n          'Use numbers for atom counts, not letters'\n        ];\n\n        if (invalidCharPattern.test(formula)) {\n          errorMessage = `Formula contains invalid character(s): ${formula}`;\n          suggestions = [\n            'Remove special characters like !, @, #, $, %, etc.',\n            'Use only letters, numbers, parentheses, brackets, and +/- signs'\n          ];\n        } else if (unicodePattern.test(formula)) {\n          errorMessage = `Formula contains invalid character(s) (Unicode subscripts/superscripts): ${formula}`;\n          suggestions = [\n            'Use regular numbers instead of subscript/superscript characters',\n            'Example: Use H2O instead of H₂O'\n          ];\n        }\n\n        errors.push(this.createError(\n          'INVALID_FORMULA_FORMAT',\n          errorMessage,\n          context.path,\n          ValidationSeverity.ERROR,\n          suggestions,\n          { formula },\n          value\n        ));\n      } else {\n        // Detailed validation\n        const validationResults = this.validateFormulaComponents(formula, context.path);\n        errors.push(...validationResults.errors);\n        warnings.push(...validationResults.warnings);\n      }\n\n      const duration = Date.now() - startTime;\n      const isValid = errors.length === 0;\n\n      return {\n        isValid,\n        errors,\n        warnings,\n        metrics: {\n          duration,\n          rulesExecuted: 1,\n          validatorsUsed: 1,\n          cacheStats: { hits: 0, misses: 1, hitRate: 0 }\n        },\n        timestamp: new Date()\n      };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      return this.createFailureResult([\n        this.createError(\n          'FORMULA_VALIDATION_ERROR',\n          `Formula validation failed: ${errorMessage}`,\n          context.path,\n          ValidationSeverity.ERROR,\n          ['Check formula syntax', 'Verify element symbols'],\n          { error: errorMessage },\n          value\n        )\n      ], context);\n    }\n  }\n\n  /**\n   * Basic format validation\n   */\n  private hasValidFormat(formula: string): boolean {\n    // Check for invalid characters first\n    const invalidCharPattern = /[^A-Za-z0-9\\(\\)\\[\\]\\+\\-\\s\\•]/;\n    if (invalidCharPattern.test(formula)) {\n      return false;\n    }\n\n    // Check for Unicode subscript/superscript characters\n    const unicodePattern = /[₀-₉⁰-⁹]/;\n    if (unicodePattern.test(formula)) {\n      return false;\n    }\n\n    // Basic regex for chemical formula validation\n    // Allows: Element symbols, numbers, brackets, charges, isotopes\n    const basicPattern = /^[A-Z][a-z]?(\\d*[A-Z][a-z]?\\d*)*(\\[.*\\])?[+-]?\\d*[+-]?$/;\n    return basicPattern.test(formula.replace(/[\\(\\)\\[\\]]/g, ''));\n  }\n\n  /**\n   * Detailed component validation\n   */\n  private validateFormulaComponents(\n    formula: string,\n    path: string[]\n  ): { errors: ValidationError[], warnings: ValidationError[] } {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationError[] = [];\n\n    try {\n      // Handle complex formulas with brackets\n      if (this.hasComplexNotation(formula)) {\n        if (!this.formulaConfig.allowComplexes) {\n          errors.push(this.createError(\n            'COMPLEX_NOTATION_NOT_ALLOWED',\n            'Complex notation with brackets is not allowed',\n            path,\n            ValidationSeverity.ERROR,\n            ['Use simple formula notation without brackets'],\n            { formula }\n          ));\n          return { errors, warnings };\n        }\n        return this.validateComplexFormula(formula, path);\n      }\n\n      // Handle charged formulas\n      if (this.hasChargeNotation(formula)) {\n        if (!this.formulaConfig.allowCharges) {\n          errors.push(this.createError(\n            'CHARGE_NOTATION_NOT_ALLOWED',\n            'Charge notation is not allowed',\n            path,\n            ValidationSeverity.ERROR,\n            ['Remove charge notation from formula'],\n            { formula }\n          ));\n          return { errors, warnings };\n        }\n        return this.validateChargedFormula(formula, path);\n      }\n\n      // Validate simple formula\n      return this.validateSimpleFormula(formula, path);\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      errors.push(this.createError(\n        'COMPONENT_VALIDATION_ERROR',\n        `Component validation failed: ${errorMessage}`,\n        path,\n        ValidationSeverity.ERROR,\n        ['Check formula structure'],\n        { error: errorMessage }\n      ));\n      return { errors, warnings };\n    }\n  }\n\n  /**\n   * Validate simple chemical formula\n   */\n  private validateSimpleFormula(\n    formula: string,\n    path: string[]\n  ): { errors: ValidationError[], warnings: ValidationError[] } {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationError[] = [];\n\n    // Extract elements and counts\n    const elementPattern = /([A-Z][a-z]?)(\\d*)/g;\n    const elements = new Map<string, number>();\n    let totalAtoms = 0;\n    let match;\n\n    while ((match = elementPattern.exec(formula)) !== null) {\n      const element = match[1];\n      const count = parseInt(match[2] || '1', 10);\n\n      // Validate element symbol\n      if (!this.isValidElement(element)) {\n        errors.push(this.createError(\n          'INVALID_ELEMENT',\n          `Invalid element symbol: ${element}`,\n          path,\n          ValidationSeverity.ERROR,\n          [\n            'Check periodic table for correct element symbols',\n            'Ensure proper capitalization (first letter uppercase, second lowercase)'\n          ],\n          { element, formula }\n        ));\n      }\n\n      // Check if element is allowed\n      if (this.formulaConfig.allowedElements.length > 0 &&\n          !this.formulaConfig.allowedElements.includes(element)) {\n        errors.push(this.createError(\n          'ELEMENT_NOT_ALLOWED',\n          `Element ${element} is not allowed`,\n          path,\n          ValidationSeverity.ERROR,\n          [`Use only allowed elements: ${this.formulaConfig.allowedElements.join(', ')}`],\n          { element, allowedElements: this.formulaConfig.allowedElements }\n        ));\n      }\n\n      // Check for isotope notation\n      if (/^\\d+[A-Z]/.test(element)) {\n        if (!this.formulaConfig.allowIsotopes) {\n          errors.push(this.createError(\n            'ISOTOPE_NOTATION_NOT_ALLOWED',\n            'Isotope notation is not allowed',\n            path,\n            ValidationSeverity.ERROR,\n            ['Remove isotope numbers from element symbols'],\n            { element, formula }\n          ));\n        }\n      }\n\n      elements.set(element, count);\n      totalAtoms += count;\n    }\n\n    // Check maximum atoms limit\n    if (totalAtoms > this.formulaConfig.maxAtoms) {\n      errors.push(this.createError(\n        'TOO_MANY_ATOMS',\n        `Formula contains ${totalAtoms} atoms, maximum allowed is ${this.formulaConfig.maxAtoms}`,\n        path,\n        ValidationSeverity.ERROR,\n        ['Simplify the formula', 'Use smaller atom counts'],\n        { totalAtoms, maxAtoms: this.formulaConfig.maxAtoms }\n      ));\n    }\n\n    // Warnings for unusual patterns\n    if (totalAtoms > 100) {\n      warnings.push(this.createError(\n        'LARGE_MOLECULE',\n        `Formula contains ${totalAtoms} atoms, which is unusually large`,\n        path,\n        ValidationSeverity.WARNING,\n        ['Verify the formula is correct', 'Consider if this represents a polymer unit'],\n        { totalAtoms }\n      ));\n    }\n\n    return { errors, warnings };\n  }\n\n  /**\n   * Validate charged formula\n   */\n  private validateChargedFormula(\n    formula: string,\n    path: string[]\n  ): { errors: ValidationError[], warnings: ValidationError[] } {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationError[] = [];\n\n    // Extract charge part\n    const chargeMatch = formula.match(/([+-]\\d*|\\d*[+-])$/);\n    if (!chargeMatch) {\n      errors.push(this.createError(\n        'INVALID_CHARGE_FORMAT',\n        'Invalid charge notation format',\n        path,\n        ValidationSeverity.ERROR,\n        ['Use format like +, -, 2+, 3- for charges'],\n        { formula }\n      ));\n      return { errors, warnings };\n    }\n\n    const charge = chargeMatch[1];\n    const neutralFormula = formula.replace(chargeMatch[0], '');\n\n    // Validate the neutral part\n    const neutralResults = this.validateSimpleFormula(neutralFormula, path);\n    errors.push(...neutralResults.errors);\n    warnings.push(...neutralResults.warnings);\n\n    // Validate charge format\n    if (!/^[+-]\\d*$|^\\d*[+-]$/.test(charge)) {\n      errors.push(this.createError(\n        'INVALID_CHARGE_VALUE',\n        `Invalid charge value: ${charge}`,\n        path,\n        ValidationSeverity.ERROR,\n        ['Use valid charge notation (e.g., +, -, 2+, 3-)'],\n        { charge, formula }\n      ));\n    }\n\n    return { errors, warnings };\n  }\n\n  /**\n   * Validate complex formula with brackets\n   */\n  private validateComplexFormula(\n    formula: string,\n    path: string[]\n  ): { errors: ValidationError[], warnings: ValidationError[] } {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationError[] = [];\n\n    // Check bracket balance\n    if (!this.areBracketsBalanced(formula)) {\n      errors.push(this.createError(\n        'UNBALANCED_BRACKETS',\n        'Unbalanced brackets in complex formula',\n        path,\n        ValidationSeverity.ERROR,\n        ['Ensure all brackets are properly paired', 'Check for missing opening or closing brackets'],\n        { formula }\n      ));\n      return { errors, warnings };\n    }\n\n    // For complex formulas, we would need more sophisticated parsing\n    // This is a simplified validation\n    warnings.push(this.createError(\n      'COMPLEX_FORMULA_LIMITED_VALIDATION',\n      'Limited validation for complex formulas',\n      path,\n      ValidationSeverity.WARNING,\n      ['Complex formulas receive basic validation only'],\n      { formula }\n    ));\n\n    return { errors, warnings };\n  }\n\n  /**\n   * Check if formula has complex notation\n   */\n  private hasComplexNotation(formula: string): boolean {\n    return /[\\[\\]]/.test(formula);\n  }\n\n  /**\n   * Check if formula has charge notation\n   */\n  private hasChargeNotation(formula: string): boolean {\n    return /[+-]\\d*$|\\d*[+-]$/.test(formula);\n  }\n\n  /**\n   * Check if brackets are balanced\n   */\n  private areBracketsBalanced(formula: string): boolean {\n    const stack: string[] = [];\n    const pairs: Record<string, string> = { '[': ']', '(': ')' };\n\n    for (const char of formula) {\n      if (char in pairs) {\n        stack.push(char);\n      } else if (Object.values(pairs).includes(char)) {\n        const last = stack.pop();\n        if (!last || pairs[last] !== char) {\n          return false;\n        }\n      }\n    }\n\n    return stack.length === 0;\n  }\n\n  /**\n   * Create validation schema\n   */\n  protected createSchema(): ValidationSchema {\n    return {\n      name: this.name,\n      version: '1.0.0',\n      description: 'Chemical formula validation schema',\n      types: ['string'],\n      requiredValidators: [],\n      optionalValidators: [],\n      properties: {\n        config: this.formulaConfig,\n        examples: ['H2O', 'CaCl2', 'C6H12O6', '[Cu(NH3)4]2+'],\n        patterns: [\n          'Simple formulas: ElementCount (e.g., H2O)',\n          'Charged formulas: Formula+/- (e.g., Ca2+)',\n          'Complex formulas: [Formula]Charge (e.g., [Cu(NH3)4]2+)'\n        ]\n      }\n    };\n  }\n}\n","/**\n * @fileoverview Validation Metrics Dashboard and Performance Monitoring\n * \n * Provides comprehensive performance monitoring and metrics collection\n * for the validation pipeline with real-time dashboard capabilities.\n */\n\nimport { EventEmitter } from 'events';\nimport {\n  ValidationResult,\n  ValidationError,\n  ValidationMetrics,\n  ValidationSeverity\n} from '../types';\n\n/**\n * Real-time validation metrics and performance data\n */\nexport interface ValidationPerformanceMetrics {\n  /** Total validations performed */\n  totalValidations: number;\n  /** Successful validations */\n  successfulValidations: number;\n  /** Failed validations */\n  failedValidations: number;\n  /** Average validation time in milliseconds */\n  averageValidationTime: number;\n  /** Peak validation time in milliseconds */\n  peakValidationTime: number;\n  /** Minimum validation time in milliseconds */\n  minValidationTime: number;\n  /** Validations per second (current rate) */\n  validationsPerSecond: number;\n  /** Cache hit rate percentage */\n  cacheHitRate: number;\n  /** Memory usage for validation operations */\n  memoryUsage: MemoryUsageMetrics;\n  /** Error distribution by type */\n  errorDistribution: Map<string, number>;\n  /** Performance percentiles */\n  percentiles: PerformancePercentiles;\n  /** Validator-specific metrics */\n  validatorMetrics: Map<string, ValidatorPerformanceMetrics>;\n  /** Time series data for trending */\n  timeSeries: TimeSeries[];\n}\n\n/**\n * Memory usage metrics\n */\nexport interface MemoryUsageMetrics {\n  /** Current memory usage in MB */\n  current: number;\n  /** Peak memory usage in MB */\n  peak: number;\n  /** Average memory usage in MB */\n  average: number;\n  /** Memory allocation rate */\n  allocationRate: number;\n}\n\n/**\n * Performance percentile data\n */\nexport interface PerformancePercentiles {\n  p50: number;  // Median\n  p75: number;  // 75th percentile\n  p90: number;  // 90th percentile\n  p95: number;  // 95th percentile\n  p99: number;  // 99th percentile\n}\n\n/**\n * Validator-specific performance metrics\n */\nexport interface ValidatorPerformanceMetrics {\n  /** Validator name */\n  name: string;\n  /** Number of executions */\n  executions: number;\n  /** Average execution time */\n  averageTime: number;\n  /** Success rate percentage */\n  successRate: number;\n  /** Error count */\n  errorCount: number;\n  /** Cache hit rate for this validator */\n  cacheHitRate: number;\n}\n\n/**\n * Time series data point\n */\nexport interface TimeSeries {\n  /** Timestamp */\n  timestamp: Date;\n  /** Validations per second at this time */\n  validationsPerSecond: number;\n  /** Average response time at this time */\n  averageResponseTime: number;\n  /** Error rate at this time */\n  errorRate: number;\n  /** Memory usage at this time */\n  memoryUsage: number;\n}\n\n/**\n * Dashboard configuration options\n */\nexport interface DashboardConfig {\n  /** Update interval in milliseconds */\n  updateInterval: number;\n  /** Maximum time series data points to keep */\n  maxTimeSeriesPoints: number;\n  /** Whether to enable real-time updates */\n  realTimeUpdates: boolean;\n  /** Memory monitoring enabled */\n  memoryMonitoring: boolean;\n  /** Percentile calculation enabled */\n  percentileTracking: boolean;\n}\n\n/**\n * Validation Metrics Dashboard\n * \n * Provides real-time monitoring and analytics for validation performance\n */\nexport class ValidationMetricsDashboard extends EventEmitter {\n  private metrics: ValidationPerformanceMetrics;\n  private config: DashboardConfig;\n  private validationTimes: number[] = [];\n  private recentValidations: Array<{ timestamp: Date; duration: number; success: boolean }> = [];\n  private memorySnapshots: Array<{ timestamp: Date; usage: number }> = [];\n  private updateTimer?: NodeJS.Timeout;\n  private startTime: Date;\n\n  constructor(config: Partial<DashboardConfig> = {}) {\n    super();\n    \n    this.config = {\n      updateInterval: 1000,\n      maxTimeSeriesPoints: 100,\n      realTimeUpdates: true,\n      memoryMonitoring: true,\n      percentileTracking: true,\n      ...config\n    };\n\n    this.startTime = new Date();\n    this.metrics = this.initializeMetrics();\n    \n    if (this.config.realTimeUpdates) {\n      this.startRealTimeUpdates();\n    }\n  }\n\n  /**\n   * Record a validation result for metrics tracking\n   */\n  recordValidation(result: ValidationResult): void {\n    const now = new Date();\n    const success = result.isValid;\n    const duration = result.metrics.duration;\n\n    // Update basic counters\n    this.metrics.totalValidations++;\n    if (success) {\n      this.metrics.successfulValidations++;\n    } else {\n      this.metrics.failedValidations++;\n    }\n\n    // Update timing metrics\n    this.validationTimes.push(duration);\n    this.recentValidations.push({ timestamp: now, duration, success });\n\n    // Update min/max/average times\n    this.updateTimingMetrics(duration);\n\n    // Update cache metrics\n    if (result.fromCache) {\n      this.updateCacheMetrics();\n    }\n\n    // Record error distribution\n    if (!success) {\n      this.recordErrors(result.errors);\n    }\n\n    // Update validator-specific metrics\n    this.updateValidatorMetrics(result);\n\n    // Memory monitoring\n    if (this.config.memoryMonitoring) {\n      this.recordMemoryUsage();\n    }\n\n    // Cleanup old data\n    this.cleanupOldData();\n\n    // Emit update event\n    this.emit('metrics:updated', this.metrics);\n  }\n\n  /**\n   * Get current performance metrics\n   */\n  getMetrics(): ValidationPerformanceMetrics {\n    this.updateDerivedMetrics();\n    return { ...this.metrics };\n  }\n\n  /**\n   * Get metrics for a specific time range\n   */\n  getMetricsForTimeRange(startTime: Date, endTime: Date): ValidationPerformanceMetrics {\n    const filteredValidations = this.recentValidations.filter(\n      v => v.timestamp >= startTime && v.timestamp <= endTime\n    );\n\n    const rangeMetrics = this.calculateMetricsForValidations(filteredValidations);\n    return rangeMetrics;\n  }\n\n  /**\n   * Get real-time dashboard data formatted for display\n   */\n  getDashboardData(): any {\n    const current = this.getMetrics();\n    \n    return {\n      summary: {\n        total: current.totalValidations,\n        successful: current.successfulValidations,\n        failed: current.failedValidations,\n        successRate: this.calculateSuccessRate(),\n        avgTime: current.averageValidationTime,\n        cacheHitRate: current.cacheHitRate\n      },\n      performance: {\n        currentRate: current.validationsPerSecond,\n        avgTime: current.averageValidationTime,\n        peakTime: current.peakValidationTime,\n        minTime: current.minValidationTime,\n        percentiles: current.percentiles\n      },\n      memory: current.memoryUsage,\n      validators: Array.from(current.validatorMetrics.values()),\n      timeSeries: current.timeSeries.slice(-20), // Last 20 data points\n      errors: this.getTopErrors(10)\n    };\n  }\n\n  /**\n   * Reset all metrics\n   */\n  reset(): void {\n    this.metrics = this.initializeMetrics();\n    this.validationTimes = [];\n    this.recentValidations = [];\n    this.memorySnapshots = [];\n    this.startTime = new Date();\n    \n    this.emit('metrics:reset');\n  }\n\n  /**\n   * Export metrics to JSON\n   */\n  exportMetrics(): string {\n    return JSON.stringify({\n      metrics: this.getMetrics(),\n      metadata: {\n        exportTime: new Date(),\n        uptime: Date.now() - this.startTime.getTime(),\n        config: this.config\n      }\n    }, null, 2);\n  }\n\n  /**\n   * Stop the dashboard and cleanup resources\n   */\n  stop(): void {\n    if (this.updateTimer) {\n      clearInterval(this.updateTimer);\n      this.updateTimer = undefined;\n    }\n    \n    this.removeAllListeners();\n  }\n\n  // ============================================================================\n  // Private Methods\n  // ============================================================================\n\n  private initializeMetrics(): ValidationPerformanceMetrics {\n    return {\n      totalValidations: 0,\n      successfulValidations: 0,\n      failedValidations: 0,\n      averageValidationTime: 0,\n      peakValidationTime: 0,\n      minValidationTime: Infinity,\n      validationsPerSecond: 0,\n      cacheHitRate: 0,\n      memoryUsage: {\n        current: 0,\n        peak: 0,\n        average: 0,\n        allocationRate: 0\n      },\n      errorDistribution: new Map(),\n      percentiles: {\n        p50: 0,\n        p75: 0,\n        p90: 0,\n        p95: 0,\n        p99: 0\n      },\n      validatorMetrics: new Map(),\n      timeSeries: []\n    };\n  }\n\n  private startRealTimeUpdates(): void {\n    this.updateTimer = setInterval(() => {\n      this.updateDerivedMetrics();\n      this.addTimeSeriesPoint();\n      this.emit('metrics:realtime', this.metrics);\n    }, this.config.updateInterval);\n  }\n\n  private updateTimingMetrics(duration: number): void {\n    this.metrics.peakValidationTime = Math.max(this.metrics.peakValidationTime, duration);\n    this.metrics.minValidationTime = Math.min(this.metrics.minValidationTime, duration);\n    \n    // Calculate rolling average\n    const sum = this.validationTimes.reduce((a, b) => a + b, 0);\n    this.metrics.averageValidationTime = sum / this.validationTimes.length;\n  }\n\n  private updateCacheMetrics(): void {\n    // Cache hit rate calculation would be based on cache-specific logic\n    // This is a simplified version\n    const totalWithCache = this.recentValidations.length;\n    const cacheHits = this.recentValidations.filter(v => \n      v.duration < this.metrics.averageValidationTime * 0.1\n    ).length;\n    \n    this.metrics.cacheHitRate = totalWithCache > 0 ? (cacheHits / totalWithCache) * 100 : 0;\n  }\n\n  private recordErrors(errors: ValidationError[]): void {\n    errors.forEach(error => {\n      const errorType = error.code || 'UNKNOWN_ERROR';\n      const current = this.metrics.errorDistribution.get(errorType) || 0;\n      this.metrics.errorDistribution.set(errorType, current + 1);\n    });\n  }\n\n  private updateValidatorMetrics(result: ValidationResult): void {\n    // This would be updated based on which validators were used\n    // For now, we'll create a generic entry\n    const validatorName = 'default-validator';\n    \n    let validatorMetrics = this.metrics.validatorMetrics.get(validatorName);\n    if (!validatorMetrics) {\n      validatorMetrics = {\n        name: validatorName,\n        executions: 0,\n        averageTime: 0,\n        successRate: 0,\n        errorCount: 0,\n        cacheHitRate: 0\n      };\n      this.metrics.validatorMetrics.set(validatorName, validatorMetrics);\n    }\n\n    validatorMetrics.executions++;\n    validatorMetrics.averageTime = \n      (validatorMetrics.averageTime * (validatorMetrics.executions - 1) + result.metrics.duration) / \n      validatorMetrics.executions;\n    \n    if (!result.isValid) {\n      validatorMetrics.errorCount++;\n    }\n    \n    validatorMetrics.successRate = \n      ((validatorMetrics.executions - validatorMetrics.errorCount) / validatorMetrics.executions) * 100;\n  }\n\n  private recordMemoryUsage(): void {\n    if (typeof process !== 'undefined' && process.memoryUsage) {\n      const memUsage = process.memoryUsage();\n      const currentMB = memUsage.heapUsed / 1024 / 1024;\n      \n      this.metrics.memoryUsage.current = currentMB;\n      this.metrics.memoryUsage.peak = Math.max(this.metrics.memoryUsage.peak, currentMB);\n      \n      this.memorySnapshots.push({ timestamp: new Date(), usage: currentMB });\n      \n      // Calculate average\n      const sum = this.memorySnapshots.reduce((a, b) => a + b.usage, 0);\n      this.metrics.memoryUsage.average = sum / this.memorySnapshots.length;\n    }\n  }\n\n  private updateDerivedMetrics(): void {\n    // Update validations per second\n    const oneSecondAgo = new Date(Date.now() - 1000);\n    const recentCount = this.recentValidations.filter(v => v.timestamp > oneSecondAgo).length;\n    this.metrics.validationsPerSecond = recentCount;\n\n    // Update percentiles if enabled\n    if (this.config.percentileTracking && this.validationTimes.length > 0) {\n      this.calculatePercentiles();\n    }\n  }\n\n  private calculatePercentiles(): void {\n    const sorted = [...this.validationTimes].sort((a, b) => a - b);\n    const len = sorted.length;\n\n    this.metrics.percentiles = {\n      p50: this.getPercentile(sorted, 0.5),\n      p75: this.getPercentile(sorted, 0.75),\n      p90: this.getPercentile(sorted, 0.9),\n      p95: this.getPercentile(sorted, 0.95),\n      p99: this.getPercentile(sorted, 0.99)\n    };\n  }\n\n  private getPercentile(sortedArray: number[], percentile: number): number {\n    const index = Math.ceil(sortedArray.length * percentile) - 1;\n    return sortedArray[Math.max(0, index)] || 0;\n  }\n\n  private addTimeSeriesPoint(): void {\n    const now = new Date();\n    const oneMinuteAgo = new Date(now.getTime() - 60000);\n    const recentValidations = this.recentValidations.filter(v => v.timestamp > oneMinuteAgo);\n    \n    const errorCount = recentValidations.filter(v => !v.success).length;\n    const errorRate = recentValidations.length > 0 ? (errorCount / recentValidations.length) * 100 : 0;\n\n    const point: TimeSeries = {\n      timestamp: now,\n      validationsPerSecond: this.metrics.validationsPerSecond,\n      averageResponseTime: this.metrics.averageValidationTime,\n      errorRate,\n      memoryUsage: this.metrics.memoryUsage.current\n    };\n\n    this.metrics.timeSeries.push(point);\n\n    // Keep only the last N points\n    if (this.metrics.timeSeries.length > this.config.maxTimeSeriesPoints) {\n      this.metrics.timeSeries = this.metrics.timeSeries.slice(-this.config.maxTimeSeriesPoints);\n    }\n  }\n\n  private cleanupOldData(): void {\n    const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n    \n    // Keep only recent validations (last 5 minutes)\n    this.recentValidations = this.recentValidations.filter(v => v.timestamp > fiveMinutesAgo);\n    \n    // Keep only recent memory snapshots\n    this.memorySnapshots = this.memorySnapshots.filter(s => s.timestamp > fiveMinutesAgo);\n    \n    // Keep only recent validation times (last 1000 entries)\n    if (this.validationTimes.length > 1000) {\n      this.validationTimes = this.validationTimes.slice(-1000);\n    }\n  }\n\n  private calculateSuccessRate(): number {\n    return this.metrics.totalValidations > 0 ? \n      (this.metrics.successfulValidations / this.metrics.totalValidations) * 100 : 0;\n  }\n\n  private getTopErrors(count: number): Array<{ type: string; count: number; percentage: number }> {\n    const totalErrors = Array.from(this.metrics.errorDistribution.values()).reduce((a, b) => a + b, 0);\n    \n    return Array.from(this.metrics.errorDistribution.entries())\n      .map(([type, count]) => ({\n        type,\n        count,\n        percentage: totalErrors > 0 ? (count / totalErrors) * 100 : 0\n      }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, count);\n  }\n\n  private calculateMetricsForValidations(validations: Array<{ timestamp: Date; duration: number; success: boolean }>): ValidationPerformanceMetrics {\n    // Implementation for calculating metrics for a specific set of validations\n    // This is a simplified version - full implementation would calculate all metrics\n    const total = validations.length;\n    const successful = validations.filter(v => v.success).length;\n    const failed = total - successful;\n    \n    const durations = validations.map(v => v.duration);\n    const avgTime = durations.length > 0 ? durations.reduce((a, b) => a + b, 0) / durations.length : 0;\n    \n    return {\n      ...this.initializeMetrics(),\n      totalValidations: total,\n      successfulValidations: successful,\n      failedValidations: failed,\n      averageValidationTime: avgTime,\n      peakValidationTime: Math.max(...durations, 0),\n      minValidationTime: Math.min(...durations, Infinity)\n    };\n  }\n}\n\n/**\n * Global metrics dashboard instance\n */\nexport const globalValidationDashboard = new ValidationMetricsDashboard();\n\n/**\n * Create a new metrics dashboard with custom configuration\n */\nexport function createValidationDashboard(config?: Partial<DashboardConfig>): ValidationMetricsDashboard {\n  return new ValidationMetricsDashboard(config);\n}\n\n/**\n * Utility function to format metrics for console display\n */\nexport function formatMetricsForConsole(metrics: ValidationPerformanceMetrics): string {\n  const lines = [\n    '=== Validation Metrics Dashboard ===',\n    `Total Validations: ${metrics.totalValidations}`,\n    `Success Rate: ${((metrics.successfulValidations / metrics.totalValidations) * 100).toFixed(2)}%`,\n    `Average Time: ${metrics.averageValidationTime.toFixed(2)}ms`,\n    `Peak Time: ${metrics.peakValidationTime.toFixed(2)}ms`,\n    `Validations/sec: ${metrics.validationsPerSecond}`,\n    `Cache Hit Rate: ${metrics.cacheHitRate.toFixed(2)}%`,\n    `Memory Usage: ${metrics.memoryUsage.current.toFixed(2)}MB`,\n    '================================='\n  ];\n  \n  return lines.join('\\n');\n}\n","/**\n * CREB Data Validation Module\n * \n * Provides comprehensive validation capabilities for chemistry data:\n * - Composable validator architecture\n * - Async validation support with dependency management\n * - Performance optimization with caching and parallelization\n * - Chemical-specific validation capabilities\n * \n * @version 1.0.0\n * @author CREB Team\n */\n\n// Core Pipeline and Types\nexport * from './types';\nexport { ValidationPipeline } from './ValidationPipeline';\n\n// Import types for use in factory functions\nimport { \n  ValidationResult,\n  ValidationError,\n  ValidationContext,\n  ChemicalFormulaConfig,\n  ThermodynamicProperties,\n  ValidationSeverity\n} from './types';\nimport { ValidationPipeline } from './ValidationPipeline';\nimport { ChemicalFormulaValidator } from './validators/ChemicalFormulaValidator';\nimport { ThermodynamicPropertiesValidator } from './validators/ThermodynamicPropertiesValidator';\n\n// Validators\nexport { \n  BaseValidator,\n  CompositeValidator,\n  FluentValidationBuilder,\n  ChemistryValidator,\n  AsyncValidator,\n  createValidator,\n  createCompositeValidator,\n  createChemistryValidator\n} from './validators/BaseValidator';\n\nexport { ChemicalFormulaValidator } from './validators/ChemicalFormulaValidator';\nexport { ThermodynamicPropertiesValidator } from './validators/ThermodynamicPropertiesValidator';\n\n// Rules\nexport {\n  BaseRule,\n  SyncRule,\n  AsyncRule,\n  CompositeRule,\n  ConditionalRule,\n  RangeRule,\n  PatternRule,\n  createRangeRule,\n  createPatternRule,\n  createAndRule,\n  createOrRule,\n  createConditionalRule\n} from './rules/BaseRule';\n\nexport {\n  ChemicalFormulaFormatRule,\n  ValidElementSymbolsRule,\n  MolecularWeightConsistencyRule,\n  GHSClassificationRule,\n  FlashPointValidationRule,\n  PhaseTransitionConsistencyRule,\n  CASNumberValidationRule,\n  createChemicalFormulaFormatRule,\n  createValidElementSymbolsRule,\n  createMolecularWeightConsistencyRule,\n  createGHSClassificationRule,\n  createFlashPointValidationRule,\n  createPhaseTransitionConsistencyRule,\n  createCASNumberValidationRule,\n  getChemicalFormulaRules,\n  getSafetyDataRules,\n  getCompoundValidationRules\n} from './rules/ChemistryRules';\n\n// Metrics and Dashboard\nexport {\n  ValidationMetricsDashboard,\n  createValidationDashboard,\n  globalValidationDashboard,\n  formatMetricsForConsole\n} from './metrics/ValidationMetricsDashboard';\n\n/**\n * Creates a new validation pipeline with common defaults\n */\nexport function createValidationPipeline(): ValidationPipeline {\n  return new ValidationPipeline({\n    timeout: 30000,\n    enableCaching: true,\n    cacheTTL: 300000,\n    maxCacheSize: 1000,\n    continueOnError: true,\n    parallel: {\n      enabled: true,\n      maxConcurrency: 10\n    },\n    monitoring: {\n      enabled: true,\n      sampleRate: 1.0\n    }\n  });\n}\n\n/**\n * Creates a performance-optimized validation pipeline\n */\nexport function createFastValidationPipeline(): ValidationPipeline {\n  return new ValidationPipeline({\n    timeout: 10000,\n    enableCaching: true,\n    cacheTTL: 600000,\n    maxCacheSize: 5000,\n    continueOnError: false,\n    parallel: {\n      enabled: true,\n      maxConcurrency: 20\n    },\n    monitoring: {\n      enabled: true,\n      sampleRate: 0.1\n    }\n  });\n}\n\n/**\n * Creates a thorough validation pipeline for comprehensive checks\n */\nexport function createThoroughValidationPipeline(): ValidationPipeline {\n  return new ValidationPipeline({\n    timeout: 120000,\n    enableCaching: false,\n    cacheTTL: 0,\n    maxCacheSize: 0,\n    continueOnError: true,\n    parallel: {\n      enabled: false,\n      maxConcurrency: 1\n    },\n    monitoring: {\n      enabled: true,\n      sampleRate: 1.0\n    }\n  });\n}\n\n/**\n * Quick validation for chemical formulas\n */\nexport async function validateChemicalFormula(\n  formula: string,\n  config?: Partial<ChemicalFormulaConfig>\n): Promise<ValidationResult> {\n  const validator = new ChemicalFormulaValidator(undefined, config);\n  const context: ValidationContext = {\n    path: ['formula'],\n    root: { formula },\n    config: {\n      enabled: true,\n      priority: 1,\n      cacheable: true\n    },\n    shared: new Map(),\n    metrics: {\n      duration: 0,\n      rulesExecuted: 0,\n      validatorsUsed: 1,\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0\n      }\n    }\n  };\n  \n  return validator.validate(formula, context);\n}\n\n/**\n * Quick validation for thermodynamic properties\n */\nexport async function validateThermodynamicProperties(\n  properties: ThermodynamicProperties\n): Promise<ValidationResult> {\n  const validator = new ThermodynamicPropertiesValidator();\n  const context: ValidationContext = {\n    path: ['thermodynamics'],\n    root: properties,\n    config: {\n      enabled: true,\n      priority: 1,\n      cacheable: true\n    },\n    shared: new Map(),\n    metrics: {\n      duration: 0,\n      rulesExecuted: 0,\n      validatorsUsed: 1,\n      cacheStats: {\n        hits: 0,\n        misses: 0,\n        hitRate: 0\n      }\n    }\n  };\n  \n  return validator.validate(properties, context);\n}\n\n/**\n * Formats validation errors for display\n */\nexport function formatValidationErrors(errors: ValidationError[]): string {\n  if (errors.length === 0) {\n    return 'No validation errors found.';\n  }\n  \n  return errors.map((error, index) => {\n    const prefix = `${index + 1}. `;\n    const location = error.path ? ` (at ${error.path.join('.')})` : '';\n    const code = error.code ? ` [${error.code}]` : '';\n    const suggestions = error.suggestions.length > 0 ? `\\n   Suggestions: ${error.suggestions.join(', ')}` : '';\n    \n    return `${prefix}${error.severity.toUpperCase()}: ${error.message}${location}${code}${suggestions}`;\n  }).join('\\n');\n}\n\n/**\n * Creates a summary of validation results\n */\nexport function summarizeValidationResult(result: ValidationResult): string {\n  const { isValid, errors, warnings } = result;\n  \n  const status = isValid ? 'PASSED' : 'FAILED';\n  const errorCount = errors.length;\n  const warningCount = warnings.length;\n  \n  let summary = `Validation ${status}\\n`;\n  \n  if (errorCount > 0) {\n    summary += `Errors: ${errorCount}\\n`;\n  }\n  \n  if (warningCount > 0) {\n    summary += `Warnings: ${warningCount}\\n`;\n  }\n  \n  if (errorCount === 0 && warningCount === 0) {\n    summary += 'No issues found.';\n  }\n  \n  return summary;\n}\n\n/**\n * Utility to check if a validation result has only warnings\n */\nexport function hasOnlyWarnings(result: ValidationResult): boolean {\n  return result.errors.length === 0 && result.warnings.length > 0;\n}\n\n/**\n * Utility to get the most severe error from a validation result\n */\nexport function getMostSevereError(result: ValidationResult): ValidationError | null {\n  if (result.errors.length === 0) {\n    return null;\n  }\n  \n  const errorsByPriority = result.errors.sort((a, b) => {\n    const priorities = { \n      [ValidationSeverity.CRITICAL]: 4,\n      [ValidationSeverity.ERROR]: 3, \n      [ValidationSeverity.WARNING]: 2, \n      [ValidationSeverity.INFO]: 1 \n    };\n    return priorities[b.severity] - priorities[a.severity];\n  });\n  \n  return errorsByPriority[0];\n}\n","/**\n * Enhanced Chemical Equation Balancer with PubChem integration\n * Provides compound validation, molecular weight verification, and enriched data\n */\n\nimport { ChemicalEquationBalancer } from './balancer';\nimport { BalancedEquation } from './types';\nimport { \n  ComputationError, \n  ValidationError, \n  ErrorCategory, \n  ErrorSeverity,\n  ErrorUtils \n} from './core/errors/CREBError';\nimport { Injectable } from './core/decorators/Injectable';\nimport { AdvancedCache } from './performance/cache/AdvancedCache';\nimport { validateChemicalFormula, ValidationResult } from './data/validation';\n\n// Import type definitions for PubChem integration\n// Note: In production, this would import from 'creb-pubchem-js'\ninterface PubChemCompound {\n  cid: number;\n  molecularWeight: number | null;\n  molecularFormula: string | null;\n  iupacName: string | null;\n  isomericSmiles?: string | null;\n}\n\nexport interface EnhancedBalancedEquation extends BalancedEquation {\n  compoundData?: Record<string, CompoundInfo>;\n  validation?: {\n    massBalanced: boolean;\n    chargeBalanced: boolean;\n    warnings: string[];\n    formulaValidation?: Record<string, ValidationResult>;\n  };\n  safetyWarnings?: SafetyWarning[];\n}\n\nexport interface SafetyWarning {\n  compound: string;\n  hazard: string;\n  severity: 'low' | 'medium' | 'high' | 'extreme';\n  ghsClassification?: string;\n  precautionaryStatements?: string[];\n}\n\nexport interface CompoundInfo {\n  name: string;\n  cid?: number;\n  molecularWeight?: number;\n  molecularFormula?: string;\n  iupacName?: string;\n  canonicalSmiles?: string;\n  isValid: boolean;\n  error?: string;\n  pubchemData?: PubChemCompound;\n  originalName?: string; // For name-based balancing\n  safetyInfo?: SafetyInfo;\n}\n\nexport interface SafetyInfo {\n  ghsClassifications: string[];\n  hazardStatements: string[];\n  precautionaryStatements: string[];\n  physicalHazards: string[];\n  healthHazards: string[];\n  environmentalHazards: string[];\n  signalWord?: 'Danger' | 'Warning';\n}\n\n@Injectable()\nexport class EnhancedChemicalEquationBalancer extends ChemicalEquationBalancer {\n  private compoundCache = new AdvancedCache<CompoundInfo>({\n    maxSize: 1000,\n    defaultTtl: 7200000, // 2 hours\n    evictionStrategy: 'lru'\n  });\n\n  /**\n   * Balance equation with safety and hazard information\n   */\n  async balanceWithSafety(equation: string): Promise<EnhancedBalancedEquation> {\n    // First get the enhanced balance with PubChem data\n    const enhanced = await this.balanceWithPubChemData(equation);\n    \n    // Add safety information for each compound\n    const safetyWarnings: SafetyWarning[] = [];\n    \n    if (enhanced.compoundData) {\n      for (const [species, compoundInfo] of Object.entries(enhanced.compoundData)) {\n        if (compoundInfo.isValid) {\n          try {\n            // Get safety information for the compound\n            const safetyInfo = await this.getSafetyInfo(compoundInfo);\n            compoundInfo.safetyInfo = safetyInfo;\n            \n            // Generate safety warnings\n            const warnings = this.generateSafetyWarnings(species, safetyInfo);\n            safetyWarnings.push(...warnings);\n          } catch (error) {\n            enhanced.validation?.warnings.push(`Could not retrieve safety data for ${species}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n          }\n        }\n      }\n    }\n    \n    // Add safety warnings to the result\n    enhanced.safetyWarnings = safetyWarnings;\n    \n    return enhanced;\n  }\n\n  /**\n   * Get safety information for a compound\n   */\n  private async getSafetyInfo(compoundInfo: CompoundInfo): Promise<SafetyInfo> {\n    // For now, use a knowledge base of common chemical hazards\n    // In a full implementation, this would query PubChem's safety data\n    const safetyKnowledgeBase = this.getKnownSafetyInfo();\n    \n    const formula = compoundInfo.molecularFormula;\n    const name = compoundInfo.iupacName?.toLowerCase() || compoundInfo.name.toLowerCase();\n    \n    // Check known safety data\n    let safetyInfo = safetyKnowledgeBase[formula || ''] || \n                     safetyKnowledgeBase[name] ||\n                     safetyKnowledgeBase[compoundInfo.name.toLowerCase()];\n    \n    if (!safetyInfo) {\n      // Try to infer basic safety information from chemical properties\n      safetyInfo = this.inferSafetyFromProperties(compoundInfo);\n    }\n    \n    return safetyInfo || {\n      ghsClassifications: [],\n      hazardStatements: [],\n      precautionaryStatements: [],\n      physicalHazards: [],\n      healthHazards: [],\n      environmentalHazards: []\n    };\n  }\n\n  /**\n   * Generate safety warnings from safety information\n   */\n  private generateSafetyWarnings(compound: string, safetyInfo: SafetyInfo): SafetyWarning[] {\n    const warnings: SafetyWarning[] = [];\n    \n    // Process health hazards\n    for (const hazard of safetyInfo.healthHazards) {\n      warnings.push({\n        compound,\n        hazard,\n        severity: this.determineSeverity(hazard),\n        ghsClassification: safetyInfo.ghsClassifications.join(', ') || undefined,\n        precautionaryStatements: safetyInfo.precautionaryStatements.length > 0 ? safetyInfo.precautionaryStatements : undefined\n      });\n    }\n    \n    // Process physical hazards\n    for (const hazard of safetyInfo.physicalHazards) {\n      warnings.push({\n        compound,\n        hazard,\n        severity: this.determineSeverity(hazard),\n        ghsClassification: safetyInfo.ghsClassifications.join(', ') || undefined\n      });\n    }\n    \n    // Process environmental hazards\n    for (const hazard of safetyInfo.environmentalHazards) {\n      warnings.push({\n        compound,\n        hazard,\n        severity: this.determineSeverity(hazard),\n        ghsClassification: safetyInfo.ghsClassifications.join(', ') || undefined\n      });\n    }\n    \n    return warnings;\n  }\n\n  /**\n   * Determine severity level from hazard description\n   */\n  private determineSeverity(hazard: string): 'low' | 'medium' | 'high' | 'extreme' {\n    const hazardLower = hazard.toLowerCase();\n    \n    if (hazardLower.includes('fatal') || hazardLower.includes('death') || hazardLower.includes('severe')) {\n      return 'extreme';\n    }\n    if (hazardLower.includes('serious') || hazardLower.includes('burn') || hazardLower.includes('corrosive')) {\n      return 'high';\n    }\n    if (hazardLower.includes('harmful') || hazardLower.includes('irritant') || hazardLower.includes('toxic')) {\n      return 'medium';\n    }\n    return 'low';\n  }\n\n  /**\n   * Knowledge base of known chemical safety information\n   */\n  private getKnownSafetyInfo(): Record<string, SafetyInfo> {\n    return {\n      'H2SO4': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'sulfuric acid': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'NaOH': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'sodium hydroxide': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'HCl': {\n        ghsClassifications: ['H314', 'H335'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Use only outdoors or in a well-ventilated area'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'hydrochloric acid': {\n        ghsClassifications: ['H314', 'H335'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Use only outdoors or in a well-ventilated area'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'NH3': {\n        ghsClassifications: ['H221', 'H314', 'H400'],\n        hazardStatements: ['Flammable gas', 'Causes severe skin burns and eye damage', 'Very toxic to aquatic life'],\n        precautionaryStatements: ['Keep away from heat/sparks/open flames/hot surfaces', 'Wear protective gloves/protective clothing/eye protection/face protection'],\n        physicalHazards: ['Flammable gas'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: ['Very toxic to aquatic life'],\n        signalWord: 'Danger'\n      },\n      'ammonia': {\n        ghsClassifications: ['H221', 'H314', 'H400'],\n        hazardStatements: ['Flammable gas', 'Causes severe skin burns and eye damage', 'Very toxic to aquatic life'],\n        precautionaryStatements: ['Keep away from heat/sparks/open flames/hot surfaces', 'Wear protective gloves/protective clothing/eye protection/face protection'],\n        physicalHazards: ['Flammable gas'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: ['Very toxic to aquatic life'],\n        signalWord: 'Danger'\n      },\n      'H2O': {\n        ghsClassifications: [],\n        hazardStatements: [],\n        precautionaryStatements: [],\n        physicalHazards: [],\n        healthHazards: [],\n        environmentalHazards: []\n      },\n      'water': {\n        ghsClassifications: [],\n        hazardStatements: [],\n        precautionaryStatements: [],\n        physicalHazards: [],\n        healthHazards: [],\n        environmentalHazards: []\n      }\n    };\n  }\n\n  /**\n   * Infer basic safety information from compound properties\n   */\n  private inferSafetyFromProperties(compoundInfo: CompoundInfo): SafetyInfo {\n    const safetyInfo: SafetyInfo = {\n      ghsClassifications: [],\n      hazardStatements: [],\n      precautionaryStatements: ['Handle with care', 'Use proper ventilation'],\n      physicalHazards: [],\n      healthHazards: [],\n      environmentalHazards: []\n    };\n    \n    const formula = compoundInfo.molecularFormula || '';\n    const name = compoundInfo.name.toLowerCase();\n    \n    // Infer based on common patterns\n    if (formula.includes('O') && formula.includes('H') && (name.includes('acid') || formula.match(/H\\d*[A-Z]/))) {\n      safetyInfo.healthHazards.push('May cause skin and eye irritation');\n      safetyInfo.precautionaryStatements.push('Avoid contact with skin and eyes');\n    }\n    \n    if (name.includes('chloride') || formula.includes('Cl')) {\n      safetyInfo.healthHazards.push('May be harmful if inhaled');\n      safetyInfo.precautionaryStatements.push('Use in well-ventilated area');\n    }\n    \n    if (name.includes('sulfate') || name.includes('nitrate')) {\n      safetyInfo.healthHazards.push('May cause irritation');\n    }\n    \n    // Default precautionary statement for unknown compounds\n    if (safetyInfo.healthHazards.length === 0 && formula !== 'H2O') {\n      safetyInfo.healthHazards.push('Safety data not available - handle with caution');\n    }\n    \n    return safetyInfo;\n  }\n\n  /**\n   * Balance equation using common chemical names\n   * Converts compound names to formulas using PubChem, then balances\n   */\n  async balanceByName(commonNameEquation: string): Promise<EnhancedBalancedEquation> {\n    try {\n      // Step 1: Parse equation to extract compound names\n      const { reactantNames, productNames } = this.parseEquationNames(commonNameEquation);\n      \n      // Step 2: Resolve each compound name to chemical formula\n      const nameToFormulaMap: Record<string, string> = {};\n      const compoundDataMap: Record<string, CompoundInfo> = {};\n      \n      const allNames = [...reactantNames, ...productNames];\n      \n      for (const name of allNames) {\n        const compoundInfo = await this.getCompoundInfo(name);\n        compoundDataMap[name] = compoundInfo;\n        \n        if (compoundInfo.isValid && compoundInfo.molecularFormula) {\n          nameToFormulaMap[name] = compoundInfo.molecularFormula;\n        } else {\n          // Try common name alternatives\n          const alternatives = this.getCommonNames(name);\n          let found = false;\n          \n          for (const alt of alternatives) {\n            const altInfo = await this.getCompoundInfo(alt);\n            if (altInfo.isValid && altInfo.molecularFormula) {\n              nameToFormulaMap[name] = altInfo.molecularFormula;\n              compoundDataMap[name] = altInfo;\n              found = true;\n              break;\n            }\n          }\n          \n          if (!found) {\n            throw new ComputationError(\n              `Could not resolve compound name: \"${name}\". Try using the chemical formula instead.`,\n              { compoundName: name, operation: 'compound_resolution' }\n            );\n          }\n        }\n      }\n      \n      // Step 3: Reconstruct equation with chemical formulas\n      const formulaEquation = this.reconstructEquationWithFormulas(\n        commonNameEquation, nameToFormulaMap\n      );\n      \n      // Step 4: Balance the reconstructed equation\n      const balanced = this.balanceDetailed(formulaEquation);\n      \n      // Step 5: Create enhanced result with both names and formulas\n      const enhanced: EnhancedBalancedEquation = {\n        ...balanced,\n        compoundData: {},\n        validation: {\n          massBalanced: true,\n          chargeBalanced: true,\n          warnings: []\n        }\n      };\n      \n      // Add compound data for both original names and formulas\n      for (const [name, info] of Object.entries(compoundDataMap)) {\n        if (info.molecularFormula && balanced.reactants.includes(info.molecularFormula)) {\n          enhanced.compoundData![info.molecularFormula] = {\n            ...info,\n            name: info.molecularFormula, // Use formula as key\n            originalName: name // Keep original name\n          };\n        }\n        if (info.molecularFormula && balanced.products.includes(info.molecularFormula)) {\n          enhanced.compoundData![info.molecularFormula] = {\n            ...info,\n            name: info.molecularFormula,\n            originalName: name\n          };\n        }\n      }\n      \n      // Validate mass balance using PubChem molecular weights\n      try {\n        const massValidation = this.validateMassBalance(balanced, enhanced.compoundData!);\n        enhanced.validation!.massBalanced = massValidation.balanced;\n        if (!massValidation.balanced) {\n          enhanced.validation!.warnings.push(`Mass balance discrepancy: ${massValidation.discrepancy.toFixed(4)} g/mol`);\n        }\n      } catch (error) {\n        enhanced.validation!.warnings.push(`Could not validate mass balance: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n      \n      return enhanced;\n      \n    } catch (error) {\n      throw new ComputationError(\n        `Failed to balance equation by name: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        { equation: commonNameEquation, operation: 'balance_by_name' }\n      );\n    }\n  }\n\n  /**\n   * Balance equation with PubChem data enrichment\n   */\n  async balanceWithPubChemData(equation: string): Promise<EnhancedBalancedEquation> {\n    // First balance the equation normally\n    const balanced = this.balanceDetailed(equation);\n    \n    // Enhance with PubChem data\n    const enhanced: EnhancedBalancedEquation = {\n      ...balanced,\n      compoundData: {},\n      validation: {\n        massBalanced: true,\n        chargeBalanced: true,\n        warnings: [],\n        formulaValidation: {}\n      }\n    };\n\n    // Get all unique species from the equation\n    const allSpecies = [...new Set([...balanced.reactants, ...balanced.products])];\n    \n    // Validate chemical formulas using the validation pipeline\n    for (const species of allSpecies) {\n      try {\n        const formulaValidation = await validateChemicalFormula(species);\n        enhanced.validation!.formulaValidation![species] = formulaValidation;\n        \n        if (!formulaValidation.isValid) {\n          enhanced.validation!.warnings.push(`Invalid formula ${species}: ${formulaValidation.errors.map(e => e.message).join(', ')}`);\n        }\n      } catch (error) {\n        enhanced.validation!.warnings.push(`Formula validation failed for ${species}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n    \n    // Fetch PubChem data for each compound\n    for (const species of allSpecies) {\n      try {\n        const compoundInfo = await this.getCompoundInfo(species);\n        enhanced.compoundData![species] = compoundInfo;\n        \n        if (!compoundInfo.isValid && compoundInfo.error) {\n          enhanced.validation!.warnings.push(`${species}: ${compoundInfo.error}`);\n        }\n      } catch (error) {\n        enhanced.validation!.warnings.push(`Failed to fetch data for ${species}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n\n    // Validate mass balance using PubChem molecular weights\n    try {\n      const massValidation = this.validateMassBalance(balanced, enhanced.compoundData!);\n      enhanced.validation!.massBalanced = massValidation.balanced;\n      if (!massValidation.balanced) {\n        enhanced.validation!.warnings.push(`Mass balance discrepancy: ${massValidation.discrepancy.toFixed(4)} g/mol`);\n      }\n    } catch (error) {\n      enhanced.validation!.warnings.push(`Could not validate mass balance: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n\n    return enhanced;\n  }\n\n  /**\n   * Get compound information from PubChem\n   */\n  async getCompoundInfo(compoundName: string): Promise<CompoundInfo> {\n    // Check cache first\n    const cached = await this.compoundCache.get(compoundName);\n    if (cached.hit && cached.value) {\n      return cached.value;\n    }\n\n    const result: CompoundInfo = {\n      name: compoundName,\n      isValid: false\n    };\n\n    try {\n      // Dynamic import of PubChem functionality\n      const pubchemModule = await this.loadPubChemModule();\n      if (!pubchemModule) {\n        result.error = 'PubChem module not available. Install creb-pubchem-js for enhanced functionality.';\n        await this.compoundCache.set(compoundName, result);\n        return result;\n      }\n\n      // Try to find compound by name\n      let compounds: PubChemCompound[] = [];\n      \n      // First try exact name match\n      try {\n        compounds = await pubchemModule.fromName(compoundName);\n      } catch (error) {\n        // If name search fails and it looks like a formula, try CID search\n        if (this.isLikelyFormula(compoundName)) {\n          try {\n            // For simple cases, try to find by common names\n            const commonNames = this.getCommonNames(compoundName);\n            for (const name of commonNames) {\n              try {\n                compounds = await pubchemModule.fromName(name);\n                if (compounds.length > 0) break;\n              } catch {\n                // Continue to next name\n              }\n            }\n          } catch (formulaError) {\n            result.error = `Not found by name or common formula names: ${error instanceof Error ? error.message : 'Unknown error'}`;\n          }\n        } else {\n          result.error = `Not found by name: ${error instanceof Error ? error.message : 'Unknown error'}`;\n        }\n      }\n\n      if (compounds.length > 0) {\n        const compound = compounds[0]; // Use first match\n        \n        result.cid = compound.cid;\n        result.molecularWeight = compound.molecularWeight || undefined;\n        result.molecularFormula = compound.molecularFormula || undefined;\n        result.iupacName = compound.iupacName || undefined;\n        result.canonicalSmiles = compound.isomericSmiles || undefined;\n        result.isValid = true;\n        result.pubchemData = compound;\n      } else if (!result.error) {\n        result.error = 'No compounds found';\n      }\n    } catch (error) {\n      result.error = `Search failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n    }\n\n    // Cache the result\n    await this.compoundCache.set(compoundName, result);\n    return result;\n  }\n\n  /**\n   * Dynamically load PubChem module if available\n   */\n  private async loadPubChemModule(): Promise<any> {\n    try {\n      // Try to import the PubChem module\n      // In browser environment, check for global PubChemJS\n      if (typeof globalThis !== 'undefined' && (globalThis as any).PubChemJS) {\n        return (globalThis as any).PubChemJS.Compound;\n      }\n      \n      // Also check window for browser compatibility\n      if (typeof globalThis !== 'undefined' && typeof (globalThis as any).window !== 'undefined' && (globalThis as any).window.PubChemJS) {\n        return (globalThis as any).window.PubChemJS.Compound;\n      }\n      \n      // Legacy check for CREBPubChem (for backwards compatibility)\n      if (typeof globalThis !== 'undefined' && (globalThis as any).CREBPubChem) {\n        return (globalThis as any).CREBPubChem.Compound;\n      }\n      \n      // In Node.js environment, try dynamic import with error handling\n      try {\n        // Use eval to avoid TypeScript compile-time module resolution\n        const importFn = new Function('specifier', 'return import(specifier)');\n        const pubchemModule = await importFn('creb-pubchem-js');\n        return pubchemModule.Compound;\n      } catch (importError) {\n        // Module not available\n        return null;\n      }\n    } catch (error) {\n      // PubChem module not available\n      return null;\n    }\n  }\n\n  /**\n   * Parse equation with compound names to extract reactant and product names\n   */\n  private parseEquationNames(equation: string): { reactantNames: string[], productNames: string[] } {\n    // Clean up the equation\n    const cleanEquation = equation.trim().replace(/\\s+/g, ' ');\n    \n    // Split by = or -> or →\n    const parts = cleanEquation.split(/\\s*(?:=|->|→)\\s*/);\n    if (parts.length !== 2) {\n      throw new ValidationError(\n        'Invalid equation format. Expected format: \"reactants = products\"',\n        { equation: cleanEquation, operation: 'parse_equation' }\n      );\n    }\n    \n    const [reactantsPart, productsPart] = parts;\n    \n    // Parse reactants and products (split by + and clean up)\n    const reactantNames = reactantsPart.split(/\\s*\\+\\s*/)\n      .map(name => name.trim())\n      .filter(name => name.length > 0)\n      .map(name => this.cleanCompoundName(name));\n    \n    const productNames = productsPart.split(/\\s*\\+\\s*/)\n      .map(name => name.trim())\n      .filter(name => name.length > 0)\n      .map(name => this.cleanCompoundName(name));\n    \n    if (reactantNames.length === 0 || productNames.length === 0) {\n      throw new ValidationError(\n        'Invalid equation: must have at least one reactant and one product',\n        { reactantCount: reactantNames.length, productCount: productNames.length, operation: 'parse_equation' }\n      );\n    }\n    \n    return { reactantNames, productNames };\n  }\n\n  /**\n   * Clean compound name by removing coefficients and standardizing format\n   */\n  private cleanCompoundName(name: string): string {\n    // Remove leading numbers (coefficients)\n    let cleaned = name.replace(/^\\d+\\s*/, '').trim();\n    \n    // Handle common variations\n    cleaned = cleaned.toLowerCase().trim();\n    \n    // Standardize common names\n    const standardNames: Record<string, string> = {\n      'water': 'water',\n      'h2o': 'water',\n      'sulfuric acid': 'sulfuric acid',\n      'sulphuric acid': 'sulfuric acid',\n      'sodium hydroxide': 'sodium hydroxide',\n      'caustic soda': 'sodium hydroxide',\n      'sodium sulfate': 'sodium sulfate',\n      'sodium sulphate': 'sodium sulfate',\n      'hydrochloric acid': 'hydrochloric acid',\n      'muriatic acid': 'hydrochloric acid',\n      'ammonia': 'ammonia',\n      'carbon dioxide': 'carbon dioxide',\n      'glucose': 'glucose',\n      'ethanol': 'ethanol',\n      'ethyl alcohol': 'ethanol',\n      'methane': 'methane',\n      'oxygen': 'oxygen',\n      'hydrogen': 'hydrogen',\n      'nitrogen': 'nitrogen'\n    };\n    \n    return standardNames[cleaned] || cleaned;\n  }\n\n  /**\n   * Reconstruct equation using chemical formulas instead of names\n   */\n  private reconstructEquationWithFormulas(\n    originalEquation: string, \n    nameToFormulaMap: Record<string, string>\n  ): string {\n    let formulaEquation = originalEquation;\n    \n    // Replace each compound name with its formula\n    for (const [name, formula] of Object.entries(nameToFormulaMap)) {\n      // Create regex to match the compound name (case insensitive, word boundaries)\n      const nameRegex = new RegExp(`\\\\b${name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\b`, 'gi');\n      formulaEquation = formulaEquation.replace(nameRegex, formula);\n    }\n    \n    return formulaEquation;\n  }\n\n  /**\n   * Get common names for simple chemical formulas or alternative names for compounds\n   */\n  private getCommonNames(input: string): string[] {\n    const commonNames: Record<string, string[]> = {\n      'H2O': ['water'],\n      'water': ['H2O', 'dihydrogen monoxide'],\n      'CO2': ['carbon dioxide'],\n      'carbon dioxide': ['CO2'],\n      'NaCl': ['sodium chloride', 'salt'],\n      'sodium chloride': ['NaCl', 'salt'],\n      'salt': ['NaCl', 'sodium chloride'],\n      'H2SO4': ['sulfuric acid', 'sulphuric acid'],\n      'sulfuric acid': ['H2SO4', 'sulphuric acid'],\n      'sulphuric acid': ['H2SO4', 'sulfuric acid'],\n      'HCl': ['hydrochloric acid', 'muriatic acid'],\n      'hydrochloric acid': ['HCl', 'muriatic acid'],\n      'muriatic acid': ['HCl', 'hydrochloric acid'],\n      'NH3': ['ammonia'],\n      'ammonia': ['NH3'],\n      'CH4': ['methane'],\n      'methane': ['CH4'],\n      'C2H5OH': ['ethanol', 'ethyl alcohol'],\n      'ethanol': ['C2H5OH', 'ethyl alcohol'],\n      'ethyl alcohol': ['C2H5OH', 'ethanol'],\n      'C6H12O6': ['glucose', 'dextrose'],\n      'glucose': ['C6H12O6', 'dextrose'],\n      'dextrose': ['C6H12O6', 'glucose'],\n      'CaCO3': ['calcium carbonate'],\n      'calcium carbonate': ['CaCO3'],\n      'NaOH': ['sodium hydroxide', 'caustic soda'],\n      'sodium hydroxide': ['NaOH', 'caustic soda'],\n      'caustic soda': ['NaOH', 'sodium hydroxide'],\n      'KOH': ['potassium hydroxide'],\n      'potassium hydroxide': ['KOH'],\n      'Na2SO4': ['sodium sulfate', 'sodium sulphate'],\n      'sodium sulfate': ['Na2SO4', 'sodium sulphate'],\n      'sodium sulphate': ['Na2SO4', 'sodium sulfate'],\n      'Mg': ['magnesium'],\n      'magnesium': ['Mg'],\n      'Al': ['aluminum', 'aluminium'],\n      'aluminum': ['Al'],\n      'aluminium': ['Al'],\n      'Fe': ['iron'],\n      'iron': ['Fe'],\n      'Cu': ['copper'],\n      'copper': ['Cu'],\n      'Zn': ['zinc'],\n      'zinc': ['Zn'],\n      'O2': ['oxygen'],\n      'oxygen': ['O2'],\n      'N2': ['nitrogen'],\n      'nitrogen': ['N2'],\n      'H2': ['hydrogen'],\n      'hydrogen': ['H2']\n    };\n\n    return commonNames[input] || commonNames[input.toLowerCase()] || [];\n  }\n\n  /**\n   * Check if a string looks like a chemical formula\n   */\n  private isLikelyFormula(str: string): boolean {\n    // Simple heuristic: contains only letters, numbers, parentheses, and common symbols\n    return /^[A-Za-z0-9()[\\]+-]+$/.test(str) && /[A-Z]/.test(str);\n  }\n\n  /**\n   * Validate mass balance using PubChem molecular weights\n   */\n  private validateMassBalance(\n    balanced: BalancedEquation, \n    compoundData: Record<string, CompoundInfo>\n  ): { balanced: boolean; discrepancy: number } {\n    let reactantMass = 0;\n    let productMass = 0;\n\n    // Calculate reactant mass\n    for (let i = 0; i < balanced.reactants.length; i++) {\n      const species = balanced.reactants[i];\n      const coefficient = balanced.coefficients[i];\n      const compound = compoundData[species];\n      \n      if (compound?.molecularWeight) {\n        reactantMass += coefficient * compound.molecularWeight;\n      } else {\n        throw new ComputationError(\n          `Missing molecular weight for reactant: ${species}`,\n          { species, coefficient, operation: 'mass_balance_validation' }\n        );\n      }\n    }\n\n    // Calculate product mass\n    for (let i = 0; i < balanced.products.length; i++) {\n      const species = balanced.products[i];\n      const coefficient = balanced.coefficients[balanced.reactants.length + i];\n      const compound = compoundData[species];\n      \n      if (compound?.molecularWeight) {\n        productMass += coefficient * compound.molecularWeight;\n      } else {\n        throw new ComputationError(\n          `Missing molecular weight for product: ${species}`,\n          { species, coefficient, operation: 'mass_balance_validation' }\n        );\n      }\n    }\n\n    const discrepancy = Math.abs(reactantMass - productMass);\n    const tolerance = 0.01; // 0.01 g/mol tolerance\n    \n    return {\n      balanced: discrepancy <= tolerance,\n      discrepancy\n    };\n  }\n\n  /**\n   * Suggest alternative compound names or formulas\n   */\n  async suggestAlternatives(compoundName: string): Promise<string[]> {\n    const suggestions: string[] = [];\n    \n    try {\n      const pubchemModule = await this.loadPubChemModule();\n      if (!pubchemModule) {\n        return suggestions;\n      }\n\n      // Try various search strategies\n      const searchTerms = [\n        compoundName.toLowerCase(),\n        compoundName.toUpperCase(),\n        compoundName.replace(/\\s+/g, ''),\n        compoundName.replace(/\\s+/g, '-'),\n        compoundName.replace(/-/g, ' '),\n      ];\n\n      for (const term of searchTerms) {\n        if (term !== compoundName) {\n          try {\n            const compounds = await pubchemModule.fromName(term);\n            if (compounds.length > 0) {\n              suggestions.push(term);\n            }\n          } catch {\n            // Ignore errors for suggestions\n          }\n        }\n      }\n    } catch (error) {\n      // Return empty suggestions if search fails\n    }\n\n    return [...new Set(suggestions)]; // Remove duplicates\n  }\n\n  /**\n   * Clear the compound cache\n   */\n  async clearCache(): Promise<void> {\n    await this.compoundCache.clear();\n  }\n\n  /**\n   * Get cached compound info without making new requests\n   */\n  async getCachedCompoundInfo(compoundName: string): Promise<CompoundInfo | undefined> {\n    const result = await this.compoundCache.get(compoundName);\n    return result.hit ? result.value : undefined;\n  }\n}\n","/**\n * Advanced 2D Molecular Structure Generator\n * Generates chemically accurate 2D coordinates for molecular visualization\n */\n\nexport interface Atom3D {\n  element: string;\n  x: number;\n  y: number;\n  z: number;\n  hybridization?: 'sp' | 'sp2' | 'sp3';\n  aromatic?: boolean;\n}\n\nexport interface Bond3D {\n  atom1: number;\n  atom2: number;\n  order: 1 | 2 | 3;\n  type: 'single' | 'double' | 'triple' | 'aromatic';\n  stereo?: 'up' | 'down' | 'either';\n}\n\nexport interface Ring {\n  atoms: number[];\n  aromatic: boolean;\n  size: number;\n}\n\n/**\n * Professional 2D molecular coordinate generator\n * Following standard chemical drawing conventions\n */\nexport class Molecular2DGenerator {\n  private static readonly BOND_LENGTH = 40; // Standard bond length in pixels\n  private static readonly AROMATIC_RING_RADIUS = 25;\n  private static readonly ANGLE_120 = (2 * Math.PI) / 3; // 120° for aromatic\n  private static readonly ANGLE_109 = 1.9106; // 109.5° tetrahedral angle\n\n  /**\n   * Generate caffeine structure with proper coordinates\n   */\n  static generateCaffeine(): { atoms: Atom3D[]; bonds: Bond3D[]; rings: Ring[] } {\n    const bondLength = this.BOND_LENGTH;\n    \n    // Caffeine: C8H10N4O2 - purine ring system with methyl substituents\n    const atoms: Atom3D[] = [\n      // Purine ring system (6-membered ring fused with 5-membered ring)\n      // 6-membered ring\n      { element: 'N', x: 200, y: 150, z: 0, hybridization: 'sp2', aromatic: true }, // 0\n      { element: 'C', x: 240, y: 130, z: 0, hybridization: 'sp2', aromatic: true }, // 1\n      { element: 'N', x: 280, y: 150, z: 0, hybridization: 'sp2', aromatic: true }, // 2\n      { element: 'C', x: 280, y: 190, z: 0, hybridization: 'sp2', aromatic: true }, // 3\n      { element: 'C', x: 240, y: 210, z: 0, hybridization: 'sp2', aromatic: true }, // 4\n      { element: 'C', x: 200, y: 190, z: 0, hybridization: 'sp2', aromatic: true }, // 5\n      \n      // 5-membered ring (fused)\n      { element: 'N', x: 160, y: 170, z: 0, hybridization: 'sp2', aromatic: true }, // 6\n      { element: 'C', x: 160, y: 210, z: 0, hybridization: 'sp2', aromatic: true }, // 7\n      { element: 'N', x: 200, y: 230, z: 0, hybridization: 'sp2', aromatic: true }, // 8\n      \n      // Carbonyl oxygens\n      { element: 'O', x: 240, y: 100, z: 0, hybridization: 'sp2' }, // 9 (C=O at position 2)\n      { element: 'O', x: 320, y: 200, z: 0, hybridization: 'sp2' }, // 10 (C=O at position 6)\n      \n      // Methyl groups\n      { element: 'C', x: 120, y: 150, z: 0, hybridization: 'sp3' }, // 11 (N1-methyl)\n      { element: 'C', x: 320, y: 130, z: 0, hybridization: 'sp3' }, // 12 (N3-methyl)\n      { element: 'C', x: 240, y: 270, z: 0, hybridization: 'sp3' }, // 13 (N7-methyl)\n      \n      // Hydrogens (implicit in most chemical drawings, but included for completeness)\n      { element: 'H', x: 100, y: 140, z: 0 }, // 14\n      { element: 'H', x: 100, y: 160, z: 0 }, // 15\n      { element: 'H', x: 110, y: 170, z: 0 }, // 16\n      { element: 'H', x: 340, y: 120, z: 0 }, // 17\n      { element: 'H', x: 340, y: 140, z: 0 }, // 18\n      { element: 'H', x: 330, y: 110, z: 0 }, // 19\n      { element: 'H', x: 260, y: 280, z: 0 }, // 20\n      { element: 'H', x: 220, y: 280, z: 0 }, // 21\n      { element: 'H', x: 230, y: 290, z: 0 }, // 22\n      { element: 'H', x: 130, y: 210, z: 0 }  // 23 (H on C8)\n    ];\n\n    const bonds: Bond3D[] = [\n      // 6-membered ring bonds\n      { atom1: 0, atom2: 1, order: 1, type: 'aromatic' },\n      { atom1: 1, atom2: 2, order: 1, type: 'aromatic' },\n      { atom1: 2, atom2: 3, order: 1, type: 'aromatic' },\n      { atom1: 3, atom2: 4, order: 1, type: 'aromatic' },\n      { atom1: 4, atom2: 5, order: 1, type: 'aromatic' },\n      { atom1: 5, atom2: 0, order: 1, type: 'aromatic' },\n      \n      // 5-membered ring bonds\n      { atom1: 5, atom2: 6, order: 1, type: 'aromatic' },\n      { atom1: 6, atom2: 7, order: 1, type: 'aromatic' },\n      { atom1: 7, atom2: 8, order: 1, type: 'aromatic' },\n      { atom1: 8, atom2: 4, order: 1, type: 'aromatic' },\n      \n      // Carbonyl bonds\n      { atom1: 1, atom2: 9, order: 2, type: 'double' }, // C=O\n      { atom1: 3, atom2: 10, order: 2, type: 'double' }, // C=O\n      \n      // Methyl attachments\n      { atom1: 0, atom2: 11, order: 1, type: 'single' }, // N1-methyl\n      { atom1: 2, atom2: 12, order: 1, type: 'single' }, // N3-methyl\n      { atom1: 8, atom2: 13, order: 1, type: 'single' }, // N7-methyl\n      \n      // Hydrogen bonds\n      { atom1: 11, atom2: 14, order: 1, type: 'single' },\n      { atom1: 11, atom2: 15, order: 1, type: 'single' },\n      { atom1: 11, atom2: 16, order: 1, type: 'single' },\n      { atom1: 12, atom2: 17, order: 1, type: 'single' },\n      { atom1: 12, atom2: 18, order: 1, type: 'single' },\n      { atom1: 12, atom2: 19, order: 1, type: 'single' },\n      { atom1: 13, atom2: 20, order: 1, type: 'single' },\n      { atom1: 13, atom2: 21, order: 1, type: 'single' },\n      { atom1: 13, atom2: 22, order: 1, type: 'single' },\n      { atom1: 7, atom2: 23, order: 1, type: 'single' }\n    ];\n\n    const rings: Ring[] = [\n      { atoms: [0, 1, 2, 3, 4, 5], aromatic: true, size: 6 },\n      { atoms: [5, 6, 7, 8, 4], aromatic: true, size: 5 }\n    ];\n\n    return { atoms, bonds, rings };\n  }\n\n  /**\n   * Generate benzene with proper hexagonal geometry\n   */\n  static generateBenzene(): { atoms: Atom3D[]; bonds: Bond3D[]; rings: Ring[] } {\n    const centerX = 200;\n    const centerY = 180;\n    const radius = this.AROMATIC_RING_RADIUS;\n    \n    const atoms: Atom3D[] = [];\n    const bonds: Bond3D[] = [];\n    \n    // Generate hexagonal ring\n    for (let i = 0; i < 6; i++) {\n      const angle = (i * Math.PI) / 3; // 60° intervals\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      \n      atoms.push({\n        element: 'C',\n        x: x,\n        y: y,\n        z: 0,\n        hybridization: 'sp2',\n        aromatic: true\n      });\n      \n      // Add bond to next atom (with wraparound)\n      const nextIndex = (i + 1) % 6;\n      bonds.push({\n        atom1: i,\n        atom2: nextIndex,\n        order: 1,\n        type: 'aromatic'\n      });\n    }\n\n    // Add hydrogens\n    for (let i = 0; i < 6; i++) {\n      const angle = (i * Math.PI) / 3;\n      const hRadius = radius + 15; // Hydrogen further out\n      const x = centerX + hRadius * Math.cos(angle);\n      const y = centerY + hRadius * Math.sin(angle);\n      \n      atoms.push({\n        element: 'H',\n        x: x,\n        y: y,\n        z: 0\n      });\n      \n      bonds.push({\n        atom1: i,\n        atom2: 6 + i, // Hydrogen index\n        order: 1,\n        type: 'single'\n      });\n    }\n\n    const rings: Ring[] = [\n      { atoms: [0, 1, 2, 3, 4, 5], aromatic: true, size: 6 }\n    ];\n\n    return { atoms, bonds, rings };\n  }\n\n  /**\n   * Generate water with proper bent geometry\n   */\n  static generateWater(): { atoms: Atom3D[]; bonds: Bond3D[] } {\n    const bondLength = this.BOND_LENGTH;\n    const angle = 1.8326; // 104.5° H-O-H angle\n    \n    const atoms: Atom3D[] = [\n      { element: 'O', x: 200, y: 180, z: 0, hybridization: 'sp3' },\n      { \n        element: 'H', \n        x: 200 - bondLength * Math.cos(angle / 2), \n        y: 180 + bondLength * Math.sin(angle / 2), \n        z: 0 \n      },\n      { \n        element: 'H', \n        x: 200 + bondLength * Math.cos(angle / 2), \n        y: 180 + bondLength * Math.sin(angle / 2), \n        z: 0 \n      }\n    ];\n\n    const bonds: Bond3D[] = [\n      { atom1: 0, atom2: 1, order: 1, type: 'single' },\n      { atom1: 0, atom2: 2, order: 1, type: 'single' }\n    ];\n\n    return { atoms, bonds };\n  }\n\n  /**\n   * Generate methane with tetrahedral geometry\n   */\n  static generateMethane(): { atoms: Atom3D[]; bonds: Bond3D[] } {\n    const bondLength = this.BOND_LENGTH;\n    const centerX = 200;\n    const centerY = 180;\n    \n    // Tetrahedral angles for 2D projection\n    const atoms: Atom3D[] = [\n      { element: 'C', x: centerX, y: centerY, z: 0, hybridization: 'sp3' },\n      { element: 'H', x: centerX - bondLength * 0.6, y: centerY - bondLength * 0.6, z: 0 },\n      { element: 'H', x: centerX + bondLength * 0.6, y: centerY - bondLength * 0.6, z: 0 },\n      { element: 'H', x: centerX - bondLength * 0.6, y: centerY + bondLength * 0.6, z: 0 },\n      { element: 'H', x: centerX + bondLength * 0.6, y: centerY + bondLength * 0.6, z: 0 }\n    ];\n\n    const bonds: Bond3D[] = [\n      { atom1: 0, atom2: 1, order: 1, type: 'single' },\n      { atom1: 0, atom2: 2, order: 1, type: 'single' },\n      { atom1: 0, atom2: 3, order: 1, type: 'single' },\n      { atom1: 0, atom2: 4, order: 1, type: 'single' }\n    ];\n\n    return { atoms, bonds };\n  }\n\n  /**\n   * Generate ethylene with proper double bond geometry\n   */\n  static generateEthylene(): { atoms: Atom3D[]; bonds: Bond3D[] } {\n    const bondLength = this.BOND_LENGTH;\n    const centerX = 200;\n    const centerY = 180;\n    \n    const atoms: Atom3D[] = [\n      // C=C double bond\n      { element: 'C', x: centerX - bondLength/2, y: centerY, z: 0, hybridization: 'sp2' },\n      { element: 'C', x: centerX + bondLength/2, y: centerY, z: 0, hybridization: 'sp2' },\n      \n      // Hydrogens in planar arrangement\n      { element: 'H', x: centerX - bondLength/2 - bondLength * 0.7, y: centerY - bondLength * 0.5, z: 0 },\n      { element: 'H', x: centerX - bondLength/2 - bondLength * 0.7, y: centerY + bondLength * 0.5, z: 0 },\n      { element: 'H', x: centerX + bondLength/2 + bondLength * 0.7, y: centerY - bondLength * 0.5, z: 0 },\n      { element: 'H', x: centerX + bondLength/2 + bondLength * 0.7, y: centerY + bondLength * 0.5, z: 0 }\n    ];\n\n    const bonds: Bond3D[] = [\n      { atom1: 0, atom2: 1, order: 2, type: 'double' },\n      { atom1: 0, atom2: 2, order: 1, type: 'single' },\n      { atom1: 0, atom2: 3, order: 1, type: 'single' },\n      { atom1: 1, atom2: 4, order: 1, type: 'single' },\n      { atom1: 1, atom2: 5, order: 1, type: 'single' }\n    ];\n\n    return { atoms, bonds };\n  }\n\n  /**\n   * Convert molecular structure to Canvas2D format\n   */\n  static toCanvas2DFormat(structure: { atoms: Atom3D[]; bonds: Bond3D[] }): {\n    atoms: Array<{ element: string; position: { x: number; y: number }; bonds: number[] }>;\n    bonds: Array<{ atom1: number; atom2: number; order: number; type: string }>;\n  } {\n    return {\n      atoms: structure.atoms.map((atom, index) => ({\n        element: atom.element,\n        position: { x: atom.x, y: atom.y },\n        bonds: structure.bonds\n          .map((bond, bondIndex) => bond.atom1 === index || bond.atom2 === index ? bondIndex : -1)\n          .filter(bondIndex => bondIndex !== -1)\n      })),\n      bonds: structure.bonds\n    };\n  }\n\n  /**\n   * Enhanced SMILES to 2D converter with proper geometry\n   */\n  static advancedSMILESTo2D(smiles: string): {\n    atoms: Array<{ element: string; position: { x: number; y: number }; bonds: number[] }>;\n    bonds: Array<{ atom1: number; atom2: number; order: number; type: string }>;\n  } {\n    // Handle specific known molecules\n    switch (smiles.toLowerCase()) {\n      case 'o':\n      case 'h2o':\n        return this.toCanvas2DFormat(this.generateWater());\n      \n      case 'c':\n      case 'ch4':\n        return this.toCanvas2DFormat(this.generateMethane());\n      \n      case 'c=c':\n      case 'c2h4':\n        return this.toCanvas2DFormat(this.generateEthylene());\n      \n      case 'c1=cc=cc=c1':\n      case 'c6h6':\n      case 'benzene':\n        return this.toCanvas2DFormat(this.generateBenzene());\n      \n      case 'caffeine':\n      case 'cn1c=nc2c1c(=o)n(c(=o)n2c)c':\n        return this.toCanvas2DFormat(this.generateCaffeine());\n      \n      default:\n        // Fallback to simple structure\n        return this.toCanvas2DFormat(this.generateMethane());\n    }\n  }\n}\n\nexport default Molecular2DGenerator;\n","/**\n * 2D Molecular Structure Renderer\n * Canvas-based 2D molecular structure drawing with proper chemical geometry\n */\n\nimport { Molecular2DGenerator } from './Molecular2DGenerator';\n\nexport interface Canvas2DConfig {\n  width: number;\n  height: number;\n  backgroundColor: string;\n  bondColor: string;\n  atomColors: Record<string, string>;\n  bondWidth: number;\n  atomRadius: number;\n  fontSize: number;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Atom2D {\n  element: string;\n  position: Point2D;\n  bonds: number[];\n  charge?: number;\n}\n\nexport interface Bond2D {\n  atom1: number;\n  atom2: number;\n  order: number;\n  type: 'single' | 'double' | 'triple' | 'aromatic';\n}\n\nexport interface Molecule2D {\n  atoms: Atom2D[];\n  bonds: Bond2D[];\n  name?: string;\n}\n\nexport class Canvas2DRenderer {\n  private canvas: any; // HTMLCanvasElement - using any for Node.js compatibility\n  private ctx: any; // CanvasRenderingContext2D - using any for Node.js compatibility\n  private config: Canvas2DConfig;\n  private molecule: Molecule2D | null = null;\n  private scale = 1;\n  private offset = { x: 0, y: 0 };\n\n  constructor(canvas: any, config: Partial<Canvas2DConfig> = {}) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    \n    this.config = {\n      width: 600,\n      height: 400,\n      backgroundColor: '#ffffff',\n      bondColor: '#333333',\n      atomColors: {\n        'C': '#000000',\n        'H': '#ffffff',\n        'O': '#ff0000',\n        'N': '#0000ff',\n        'S': '#ffff00',\n        'P': '#ffa500',\n        'Cl': '#00ff00',\n        'Br': '#a52a2a',\n        'I': '#9400d3'\n      },\n      bondWidth: 2,\n      atomRadius: 15,\n      fontSize: 12,\n      ...config\n    };\n\n    this.setupCanvas();\n    this.bindEvents();\n  }\n\n  private setupCanvas(): void {\n    this.canvas.width = this.config.width;\n    this.canvas.height = this.config.height;\n    \n    // Only set styles if we're in browser environment\n    try {\n      if (this.canvas.style) {\n        this.canvas.style.border = '1px solid #ccc';\n        this.canvas.style.borderRadius = '4px';\n      }\n    } catch {\n      // Ignore style errors in non-browser environments\n    }\n  }\n\n  private bindEvents(): void {\n    // Only bind events if we're in browser environment\n    try {\n      if (!this.canvas.addEventListener) {\n        return;\n      }\n    } catch {\n      return;\n    }\n\n    let isMouseDown = false;\n    let lastMousePos = { x: 0, y: 0 };\n\n    this.canvas.addEventListener('mousedown', (e: any) => {\n      isMouseDown = true;\n      lastMousePos = { x: e.clientX, y: e.clientY };\n    });\n\n    this.canvas.addEventListener('mousemove', (e: any) => {\n      if (isMouseDown) {\n        const deltaX = e.clientX - lastMousePos.x;\n        const deltaY = e.clientY - lastMousePos.y;\n        \n        this.offset.x += deltaX;\n        this.offset.y += deltaY;\n        \n        lastMousePos = { x: e.clientX, y: e.clientY };\n        this.render();\n      }\n    });\n\n    this.canvas.addEventListener('mouseup', () => {\n      isMouseDown = false;\n    });\n\n    this.canvas.addEventListener('wheel', (e: any) => {\n      e.preventDefault();\n      const scaleFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      this.scale *= scaleFactor;\n      this.render();\n    });\n  }\n\n  /**\n   * Load and render a molecule\n   */\n  loadMolecule(molecule: Molecule2D): void {\n    this.molecule = molecule;\n    this.centerMolecule();\n    this.render();\n  }\n\n  /**\n   * Center the molecule in the canvas\n   */\n  private centerMolecule(): void {\n    if (!this.molecule || this.molecule.atoms.length === 0) return;\n\n    // Calculate bounding box\n    let minX = Infinity, maxX = -Infinity;\n    let minY = Infinity, maxY = -Infinity;\n\n    this.molecule.atoms.forEach(atom => {\n      minX = Math.min(minX, atom.position.x);\n      maxX = Math.max(maxX, atom.position.x);\n      minY = Math.min(minY, atom.position.y);\n      maxY = Math.max(maxY, atom.position.y);\n    });\n\n    // Calculate center offset\n    const molWidth = maxX - minX;\n    const molHeight = maxY - minY;\n    const molCenterX = (minX + maxX) / 2;\n    const molCenterY = (minY + maxY) / 2;\n\n    // Calculate scale to fit molecule\n    const scaleX = (this.config.width * 0.8) / molWidth;\n    const scaleY = (this.config.height * 0.8) / molHeight;\n    this.scale = Math.min(scaleX, scaleY, 1);\n\n    // Center the molecule\n    this.offset.x = this.config.width / 2 - molCenterX * this.scale;\n    this.offset.y = this.config.height / 2 - molCenterY * this.scale;\n  }\n\n  /**\n   * Render the current molecule\n   */\n  render(): void {\n    this.clear();\n    \n    if (!this.molecule) {\n      this.renderPlaceholder();\n      return;\n    }\n\n    this.renderBonds();\n    this.renderAtoms();\n    this.renderLabels();\n  }\n\n  /**\n   * Clear the canvas\n   */\n  private clear(): void {\n    this.ctx.fillStyle = this.config.backgroundColor;\n    this.ctx.fillRect(0, 0, this.config.width, this.config.height);\n  }\n\n  /**\n   * Render placeholder when no molecule is loaded\n   */\n  private renderPlaceholder(): void {\n    this.ctx.fillStyle = '#f0f0f0';\n    this.ctx.fillRect(0, 0, this.config.width, this.config.height);\n\n    this.ctx.fillStyle = '#999999';\n    this.ctx.font = '24px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(\n      '2D Molecular Structure',\n      this.config.width / 2,\n      this.config.height / 2 - 20\n    );\n\n    this.ctx.font = '14px Arial';\n    this.ctx.fillText(\n      'Load a molecule to visualize',\n      this.config.width / 2,\n      this.config.height / 2 + 20\n    );\n  }\n\n  /**\n   * Render molecular bonds\n   */\n  private renderBonds(): void {\n    if (!this.molecule) return;\n\n    this.ctx.strokeStyle = this.config.bondColor;\n    this.ctx.lineWidth = this.config.bondWidth;\n    this.ctx.lineCap = 'round';\n\n    this.molecule.bonds.forEach(bond => {\n      const atom1 = this.molecule!.atoms[bond.atom1];\n      const atom2 = this.molecule!.atoms[bond.atom2];\n\n      const pos1 = this.transformPoint(atom1.position);\n      const pos2 = this.transformPoint(atom2.position);\n\n      this.drawBond(pos1, pos2, bond);\n    });\n  }\n\n  /**\n   * Draw a single bond\n   */\n  private drawBond(pos1: Point2D, pos2: Point2D, bond: Bond2D): void {\n    const dx = pos2.x - pos1.x;\n    const dy = pos2.y - pos1.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const unitX = dx / length;\n    const unitY = dy / length;\n\n    // Offset for multiple bonds\n    const perpX = -unitY * 3;\n    const perpY = unitX * 3;\n\n    switch (bond.order) {\n      case 1:\n        this.drawSingleBond(pos1, pos2);\n        break;\n      case 2:\n        this.drawSingleBond(\n          { x: pos1.x + perpX, y: pos1.y + perpY },\n          { x: pos2.x + perpX, y: pos2.y + perpY }\n        );\n        this.drawSingleBond(\n          { x: pos1.x - perpX, y: pos1.y - perpY },\n          { x: pos2.x - perpX, y: pos2.y - perpY }\n        );\n        break;\n      case 3:\n        this.drawSingleBond(pos1, pos2);\n        this.drawSingleBond(\n          { x: pos1.x + perpX, y: pos1.y + perpY },\n          { x: pos2.x + perpX, y: pos2.y + perpY }\n        );\n        this.drawSingleBond(\n          { x: pos1.x - perpX, y: pos1.y - perpY },\n          { x: pos2.x - perpX, y: pos2.y - perpY }\n        );\n        break;\n    }\n\n    if (bond.type === 'aromatic') {\n      // For aromatic bonds, draw a dashed inner line to indicate aromaticity\n      this.drawAromaticIndicator(pos1, pos2);\n    }\n  }\n\n  /**\n   * Draw a single bond line\n   */\n  private drawSingleBond(pos1: Point2D, pos2: Point2D): void {\n    this.ctx.beginPath();\n    this.ctx.moveTo(pos1.x, pos1.y);\n    this.ctx.lineTo(pos2.x, pos2.y);\n    this.ctx.stroke();\n  }\n\n  /**\n   * Draw aromatic bond indicator (dashed inner line)\n   */\n  private drawAromaticIndicator(pos1: Point2D, pos2: Point2D): void {\n    // Draw a shorter dashed line slightly inside the ring\n    const dx = pos2.x - pos1.x;\n    const dy = pos2.y - pos1.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    \n    // Create inner line (80% of original length, centered)\n    const innerStart = {\n      x: pos1.x + dx * 0.1,\n      y: pos1.y + dy * 0.1\n    };\n    const innerEnd = {\n      x: pos1.x + dx * 0.9,\n      y: pos1.y + dy * 0.9\n    };\n    \n    this.ctx.setLineDash([3, 3]);\n    this.ctx.strokeStyle = this.config.bondColor;\n    this.ctx.lineWidth = this.config.bondWidth * 0.7;\n    this.drawSingleBond(innerStart, innerEnd);\n    this.ctx.setLineDash([]);\n    this.ctx.lineWidth = this.config.bondWidth;\n  }\n\n  /**\n   * Draw aromatic bond (dashed) - legacy method\n   */\n  private drawAromaticBond(pos1: Point2D, pos2: Point2D): void {\n    this.ctx.setLineDash([5, 5]);\n    this.drawSingleBond(pos1, pos2);\n    this.ctx.setLineDash([]);\n  }\n\n  /**\n   * Render atoms\n   */\n  private renderAtoms(): void {\n    if (!this.molecule) return;\n\n    this.molecule.atoms.forEach((atom, index) => {\n      const pos = this.transformPoint(atom.position);\n      this.drawAtom(atom, pos, index);\n    });\n  }\n\n  /**\n   * Draw a single atom\n   */\n  private drawAtom(atom: Atom2D, pos: Point2D, index: number): void {\n    const color = this.config.atomColors[atom.element] || '#999999';\n    const radius = this.config.atomRadius * this.scale;\n\n    // Draw atom circle\n    this.ctx.fillStyle = color;\n    this.ctx.beginPath();\n    this.ctx.arc(pos.x, pos.y, radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n\n    // Draw border\n    this.ctx.strokeStyle = '#333333';\n    this.ctx.lineWidth = 1;\n    this.ctx.stroke();\n\n    // Draw element symbol\n    this.ctx.fillStyle = atom.element === 'H' ? '#000000' : '#ffffff';\n    this.ctx.font = `${this.config.fontSize * this.scale}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(atom.element, pos.x, pos.y);\n  }\n\n  /**\n   * Render atom labels and charges\n   */\n  private renderLabels(): void {\n    if (!this.molecule) return;\n\n    this.ctx.fillStyle = '#333333';\n    this.ctx.font = `${10 * this.scale}px Arial`;\n\n    this.molecule.atoms.forEach((atom, index) => {\n      if (atom.charge && atom.charge !== 0) {\n        const pos = this.transformPoint(atom.position);\n        const chargeText = atom.charge > 0 ? `+${atom.charge}` : `${atom.charge}`;\n        \n        this.ctx.textAlign = 'left';\n        this.ctx.textBaseline = 'top';\n        this.ctx.fillText(\n          chargeText,\n          pos.x + this.config.atomRadius * this.scale,\n          pos.y - this.config.atomRadius * this.scale\n        );\n      }\n    });\n  }\n\n  /**\n   * Transform point from molecule coordinates to canvas coordinates\n   */\n  private transformPoint(point: Point2D): Point2D {\n    return {\n      x: point.x * this.scale + this.offset.x,\n      y: point.y * this.scale + this.offset.y\n    };\n  }\n\n  /**\n   * Convert SMILES to 2D coordinates with proper chemical geometry\n   */\n  static smilesToMolecule2D(smiles: string): Molecule2D {\n    // Use the advanced molecular geometry generator for proper chemical structures\n    const advanced = Molecular2DGenerator.advancedSMILESTo2D(smiles);\n    \n    return {\n      atoms: advanced.atoms,\n      bonds: advanced.bonds.map(bond => ({\n        atom1: bond.atom1,\n        atom2: bond.atom2,\n        order: bond.order,\n        type: bond.type as 'single' | 'double' | 'triple' | 'aromatic'\n      })),\n      name: `SMILES: ${smiles}`\n    };\n  }\n\n  /**\n   * Export canvas as image\n   */\n  exportImage(format: 'png' | 'jpg' | 'svg' = 'png'): string {\n    if (format === 'svg') {\n      return this.exportSVG();\n    }\n    return this.canvas.toDataURL(`image/${format}`);\n  }\n\n  /**\n   * Export current molecule as SVG\n   */\n  exportSVG(options: {\n    interactive?: boolean;\n    animations?: boolean;\n    includeMetadata?: boolean;\n    optimizeSize?: boolean;\n  } = {}): string {\n    if (!this.molecule) {\n      return this.generateEmptySVG();\n    }\n\n    const svgElements: string[] = [];\n    const { width, height } = this.config;\n    \n    // SVG header\n    svgElements.push(`<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">`);\n    \n    if (options.includeMetadata) {\n      svgElements.push(`<title>Molecular Structure - ${this.molecule.atoms.length} atoms</title>`);\n      svgElements.push(`<desc>Generated by CREB-JS Canvas2DRenderer</desc>`);\n    }\n    \n    // Styles\n    svgElements.push('<defs><style type=\"text/css\">');\n    svgElements.push('.atom-circle { stroke: #000; stroke-width: 1; }');\n    svgElements.push('.atom-label { font-family: Arial, sans-serif; font-size: 14px; text-anchor: middle; dominant-baseline: central; }');\n    svgElements.push(`.bond-line { stroke: ${this.config.bondColor}; stroke-width: ${this.config.bondWidth}; stroke-linecap: round; }`);\n    \n    if (options.interactive) {\n      svgElements.push('.atom-group:hover .atom-circle { stroke-width: 2; stroke: #ff6b35; }');\n      svgElements.push('.atom-group { cursor: pointer; }');\n    }\n    \n    svgElements.push('</style></defs>');\n    \n    // Background\n    svgElements.push(`<rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>`);\n    \n    // Bonds\n    svgElements.push('<g id=\"bonds\">');\n    this.molecule.bonds.forEach(bond => {\n      const atom1 = this.molecule!.atoms[bond.atom1];\n      const atom2 = this.molecule!.atoms[bond.atom2];\n      const pos1 = this.transformPoint(atom1.position);\n      const pos2 = this.transformPoint(atom2.position);\n      \n      svgElements.push(`<line x1=\"${pos1.x}\" y1=\"${pos1.y}\" x2=\"${pos2.x}\" y2=\"${pos2.y}\" class=\"bond-line\"/>`);\n    });\n    svgElements.push('</g>');\n    \n    // Atoms\n    svgElements.push('<g id=\"atoms\">');\n    this.molecule.atoms.forEach((atom, index) => {\n      const pos = this.transformPoint(atom.position);\n      const color = this.config.atomColors[atom.element] || '#999999';\n      const radius = this.config.atomRadius * this.scale;\n      \n      svgElements.push('<g class=\"atom-group\">');\n      svgElements.push(`<circle cx=\"${pos.x}\" cy=\"${pos.y}\" r=\"${radius}\" fill=\"${color}\" class=\"atom-circle\"/>`);\n      \n      const textColor = this.getContrastingColor(color);\n      svgElements.push(`<text x=\"${pos.x}\" y=\"${pos.y}\" fill=\"${textColor}\" class=\"atom-label\">${atom.element}</text>`);\n      svgElements.push('</g>');\n    });\n    svgElements.push('</g>');\n    \n    // Metadata\n    if (options.includeMetadata) {\n      svgElements.push('<metadata>');\n      svgElements.push(`<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">`);\n      svgElements.push(`<rdf:Description rdf:about=\"\">`);\n      svgElements.push(`<atomCount>${this.molecule.atoms.length}</atomCount>`);\n      svgElements.push(`<bondCount>${this.molecule.bonds.length}</bondCount>`);\n      svgElements.push(`<generator>CREB-JS Canvas2DRenderer</generator>`);\n      svgElements.push(`<timestamp>${new Date().toISOString()}</timestamp>`);\n      svgElements.push(`</rdf:Description>`);\n      svgElements.push(`</rdf:RDF>`);\n      svgElements.push('</metadata>');\n    }\n    \n    svgElements.push('</svg>');\n    \n    return svgElements.join('\\n');\n  }\n\n  /**\n   * Generate empty SVG placeholder\n   */\n  private generateEmptySVG(): string {\n    const { width, height } = this.config;\n    return `<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>\n      <text x=\"${width/2}\" y=\"${height/2 - 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"24\" fill=\"#999\">2D Molecular Structure</text>\n      <text x=\"${width/2}\" y=\"${height/2 + 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"14\" fill=\"#999\">Load a molecule to visualize</text>\n    </svg>`;\n  }\n\n  /**\n   * Get contrasting color for text readability\n   */\n  private getContrastingColor(backgroundColor: string): string {\n    const hex = backgroundColor.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    return brightness > 128 ? '#000000' : '#ffffff';\n  }\n\n  /**\n   * Download SVG as file\n   */\n  downloadSVG(filename: string = 'molecule.svg', options = {}): void {\n    const svgContent = this.exportSVG(options);\n    \n    if (typeof document !== 'undefined') {\n      const blob = new Blob([svgContent], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      link.click();\n      URL.revokeObjectURL(url);\n    }\n  }\n\n  /**\n   * Reset view to default\n   */\n  resetView(): void {\n    this.scale = 1;\n    this.offset = { x: 0, y: 0 };\n    this.centerMolecule();\n    this.render();\n  }\n\n  /**\n   * Set molecule scale\n   */\n  setScale(scale: number): void {\n    this.scale = Math.max(0.1, Math.min(5, scale));\n    this.render();\n  }\n\n  /**\n   * Get current molecule data\n   */\n  getMolecule(): Molecule2D | null {\n    return this.molecule;\n  }\n}\n\nexport default Canvas2DRenderer;\n","/**\n * SVG Molecular Structure Renderer\n * Vector-based 2D molecular structure export\n */\n\nimport { Point2D, Atom2D, Bond2D, Molecule2D } from './Canvas2DRenderer';\n\nexport interface SVGConfig {\n  width: number;\n  height: number;\n  backgroundColor: string;\n  atomColors: Record<string, string>;\n  bondColor: string;\n  bondWidth: number;\n  fontSize: number;\n  atomRadius: number;\n  includeStyles: boolean;\n  includeInteractivity: boolean;\n}\n\nexport interface SVGExportOptions {\n  format: 'svg' | 'svg-inline' | 'svg-download';\n  filename?: string;\n  includeMetadata?: boolean;\n  optimizeSize?: boolean;\n  interactive?: boolean;\n  animations?: boolean;\n}\n\n/**\n * SVG-based molecular structure renderer\n */\nexport class SVGRenderer {\n  private config: SVGConfig;\n  private molecule: Molecule2D | null = null;\n  private scale = 1;\n  private offset = { x: 0, y: 0 };\n\n  constructor(config: Partial<SVGConfig> = {}) {\n    this.config = {\n      width: 600,\n      height: 400,\n      backgroundColor: '#ffffff',\n      atomColors: {\n        'H': '#ffffff',\n        'C': '#303030',\n        'N': '#3050f8',\n        'O': '#ff0d0d',\n        'F': '#90e050',\n        'P': '#ff8000',\n        'S': '#ffff30',\n        'Cl': '#1ff01f',\n        'Br': '#a62929',\n        'I': '#940094'\n      },\n      bondColor: '#000000',\n      bondWidth: 2,\n      fontSize: 14,\n      atomRadius: 20,\n      includeStyles: true,\n      includeInteractivity: false,\n      ...config\n    };\n  }\n\n  /**\n   * Load a molecule for rendering\n   */\n  loadMolecule(molecule: Molecule2D): void {\n    this.molecule = molecule;\n    this.centerMolecule();\n  }\n\n  /**\n   * Center the molecule in the SVG viewport\n   */\n  private centerMolecule(): void {\n    if (!this.molecule || this.molecule.atoms.length === 0) return;\n\n    // Calculate bounding box\n    let minX = Infinity, maxX = -Infinity;\n    let minY = Infinity, maxY = -Infinity;\n\n    this.molecule.atoms.forEach(atom => {\n      minX = Math.min(minX, atom.position.x);\n      maxX = Math.max(maxX, atom.position.x);\n      minY = Math.min(minY, atom.position.y);\n      maxY = Math.max(maxY, atom.position.y);\n    });\n\n    // Calculate center offset\n    const molWidth = maxX - minX;\n    const molHeight = maxY - minY;\n    const molCenterX = (minX + maxX) / 2;\n    const molCenterY = (minY + maxY) / 2;\n\n    // Calculate scale to fit molecule\n    const scaleX = (this.config.width * 0.8) / molWidth;\n    const scaleY = (this.config.height * 0.8) / molHeight;\n    this.scale = Math.min(scaleX, scaleY, 1);\n\n    // Center the molecule\n    this.offset.x = this.config.width / 2 - molCenterX * this.scale;\n    this.offset.y = this.config.height / 2 - molCenterY * this.scale;\n  }\n\n  /**\n   * Transform point from molecule coordinates to SVG coordinates\n   */\n  private transformPoint(point: Point2D): Point2D {\n    return {\n      x: point.x * this.scale + this.offset.x,\n      y: point.y * this.scale + this.offset.y\n    };\n  }\n\n  /**\n   * Generate SVG string for the current molecule\n   */\n  exportSVG(options: Partial<SVGExportOptions> = {}): string {\n    const opts: SVGExportOptions = {\n      format: 'svg',\n      includeMetadata: true,\n      optimizeSize: false,\n      interactive: this.config.includeInteractivity,\n      animations: false,\n      ...options\n    };\n\n    if (!this.molecule) {\n      return this.generateEmptySVG(opts);\n    }\n\n    const svgElements: string[] = [];\n    \n    // SVG header\n    svgElements.push(this.generateSVGHeader(opts));\n    \n    // Styles\n    if (this.config.includeStyles) {\n      svgElements.push(this.generateStyles(opts));\n    }\n    \n    // Background\n    svgElements.push(this.generateBackground());\n    \n    // Molecular structure\n    svgElements.push(this.generateBonds(opts));\n    svgElements.push(this.generateAtoms(opts));\n    \n    // Metadata\n    if (opts.includeMetadata) {\n      svgElements.push(this.generateMetadata());\n    }\n    \n    // SVG footer\n    svgElements.push('</svg>');\n    \n    return svgElements.join('\\n');\n  }\n\n  /**\n   * Generate SVG header with viewBox and namespaces\n   */\n  private generateSVGHeader(options: SVGExportOptions): string {\n    const { width, height } = this.config;\n    \n    let header = `<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\"`;\n    header += ` xmlns=\"http://www.w3.org/2000/svg\"`;\n    \n    if (options.interactive) {\n      header += ` xmlns:xlink=\"http://www.w3.org/1999/xlink\"`;\n    }\n    \n    header += `>`;\n    \n    if (options.includeMetadata) {\n      header += `\\n<title>Molecular Structure - ${this.molecule?.atoms.length || 0} atoms</title>`;\n      header += `\\n<desc>Generated by CREB-JS Molecular Visualization System</desc>`;\n    }\n    \n    return header;\n  }\n\n  /**\n   * Generate CSS styles for the SVG\n   */\n  private generateStyles(options: SVGExportOptions): string {\n    let styles = '<defs><style type=\"text/css\">\\n';\n    \n    // Base styles\n    styles += `  .atom-circle { stroke: #000; stroke-width: 1; }\\n`;\n    styles += `  .atom-label { font-family: Arial, sans-serif; font-size: ${this.config.fontSize}px; text-anchor: middle; dominant-baseline: central; }\\n`;\n    styles += `  .bond-line { stroke: ${this.config.bondColor}; stroke-width: ${this.config.bondWidth}; stroke-linecap: round; }\\n`;\n    styles += `  .bond-double { stroke-dasharray: none; }\\n`;\n    styles += `  .bond-triple { stroke-width: ${this.config.bondWidth + 1}; }\\n`;\n    \n    // Interactive styles\n    if (options.interactive) {\n      styles += `  .atom-group:hover .atom-circle { stroke-width: 2; stroke: #ff6b35; }\\n`;\n      styles += `  .atom-group:hover .atom-label { font-weight: bold; }\\n`;\n      styles += `  .bond-line:hover { stroke: #ff6b35; stroke-width: ${this.config.bondWidth + 1}; }\\n`;\n      styles += `  .atom-group { cursor: pointer; }\\n`;\n    }\n    \n    // Animation styles\n    if (options.animations) {\n      styles += `  @keyframes atomPulse { 0%, 100% { r: ${this.config.atomRadius}; } 50% { r: ${this.config.atomRadius + 3}; } }\\n`;\n      styles += `  .atom-circle:hover { animation: atomPulse 1s infinite; }\\n`;\n    }\n    \n    styles += '</style></defs>\\n';\n    return styles;\n  }\n\n  /**\n   * Generate background rectangle\n   */\n  private generateBackground(): string {\n    return `<rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>`;\n  }\n\n  /**\n   * Generate SVG elements for bonds\n   */\n  private generateBonds(options: SVGExportOptions): string {\n    if (!this.molecule) return '';\n    \n    const bonds: string[] = [];\n    bonds.push('<g id=\"bonds\">');\n    \n    this.molecule.bonds.forEach((bond, index) => {\n      const atom1 = this.molecule!.atoms[bond.atom1];\n      const atom2 = this.molecule!.atoms[bond.atom2];\n      \n      const pos1 = this.transformPoint(atom1.position);\n      const pos2 = this.transformPoint(atom2.position);\n      \n      bonds.push(this.generateBondSVG(pos1, pos2, bond, index, options));\n    });\n    \n    bonds.push('</g>');\n    return bonds.join('\\n');\n  }\n\n  /**\n   * Generate SVG for a single bond\n   */\n  private generateBondSVG(pos1: Point2D, pos2: Point2D, bond: Bond2D, index: number, options: SVGExportOptions): string {\n    const bondClass = `bond-${bond.type || 'single'}`;\n    let bondElement = '';\n    \n    if (bond.order === 1 || !bond.order) {\n      // Single bond\n      bondElement = `<line x1=\"${pos1.x.toFixed(2)}\" y1=\"${pos1.y.toFixed(2)}\" x2=\"${pos2.x.toFixed(2)}\" y2=\"${pos2.y.toFixed(2)}\" class=\"bond-line ${bondClass}\"`;\n    } else if (bond.order === 2) {\n      // Double bond - two parallel lines\n      const dx = pos2.x - pos1.x;\n      const dy = pos2.y - pos1.y;\n      const length = Math.sqrt(dx * dx + dy * dy);\n      const offsetX = (-dy / length) * 3;\n      const offsetY = (dx / length) * 3;\n      \n      bondElement = `<g class=\"bond-double\">\n        <line x1=\"${(pos1.x + offsetX).toFixed(2)}\" y1=\"${(pos1.y + offsetY).toFixed(2)}\" x2=\"${(pos2.x + offsetX).toFixed(2)}\" y2=\"${(pos2.y + offsetY).toFixed(2)}\" class=\"bond-line\"/>\n        <line x1=\"${(pos1.x - offsetX).toFixed(2)}\" y1=\"${(pos1.y - offsetY).toFixed(2)}\" x2=\"${(pos2.x - offsetX).toFixed(2)}\" y2=\"${(pos2.y - offsetY).toFixed(2)}\" class=\"bond-line\"/>\n      </g>`;\n    } else if (bond.order === 3) {\n      // Triple bond - three parallel lines\n      const dx = pos2.x - pos1.x;\n      const dy = pos2.y - pos1.y;\n      const length = Math.sqrt(dx * dx + dy * dy);\n      const offsetX = (-dy / length) * 3;\n      const offsetY = (dx / length) * 3;\n      \n      bondElement = `<g class=\"bond-triple\">\n        <line x1=\"${pos1.x.toFixed(2)}\" y1=\"${pos1.y.toFixed(2)}\" x2=\"${pos2.x.toFixed(2)}\" y2=\"${pos2.y.toFixed(2)}\" class=\"bond-line\"/>\n        <line x1=\"${(pos1.x + offsetX).toFixed(2)}\" y1=\"${(pos1.y + offsetY).toFixed(2)}\" x2=\"${(pos2.x + offsetX).toFixed(2)}\" y2=\"${(pos2.y + offsetY).toFixed(2)}\" class=\"bond-line\"/>\n        <line x1=\"${(pos1.x - offsetX).toFixed(2)}\" y1=\"${(pos1.y - offsetY).toFixed(2)}\" x2=\"${(pos2.x - offsetX).toFixed(2)}\" y2=\"${(pos2.y - offsetY).toFixed(2)}\" class=\"bond-line\"/>\n      </g>`;\n    }\n    \n    if (options.interactive) {\n      bondElement += ` data-bond-id=\"${index}\" data-atoms=\"${bond.atom1},${bond.atom2}\"`;\n    }\n    \n    if (bondElement.includes('<g')) {\n      return bondElement;\n    } else {\n      return bondElement + '/>';\n    }\n  }\n\n  /**\n   * Generate SVG elements for atoms\n   */\n  private generateAtoms(options: SVGExportOptions): string {\n    if (!this.molecule) return '';\n    \n    const atoms: string[] = [];\n    atoms.push('<g id=\"atoms\">');\n    \n    this.molecule.atoms.forEach((atom, index) => {\n      atoms.push(this.generateAtomSVG(atom, index, options));\n    });\n    \n    atoms.push('</g>');\n    return atoms.join('\\n');\n  }\n\n  /**\n   * Generate SVG for a single atom\n   */\n  private generateAtomSVG(atom: Atom2D, index: number, options: SVGExportOptions): string {\n    const pos = this.transformPoint(atom.position);\n    const color = this.config.atomColors[atom.element] || '#cccccc';\n    const radius = this.config.atomRadius * this.scale;\n    \n    let atomGroup = `<g class=\"atom-group\" data-element=\"${atom.element}\" data-atom-id=\"${index}\">`;\n    \n    // Atom circle\n    atomGroup += `<circle cx=\"${pos.x.toFixed(2)}\" cy=\"${pos.y.toFixed(2)}\" r=\"${radius.toFixed(2)}\" fill=\"${color}\" class=\"atom-circle\"/>`;\n    \n    // Atom label\n    const textColor = this.getContrastingColor(color);\n    atomGroup += `<text x=\"${pos.x.toFixed(2)}\" y=\"${pos.y.toFixed(2)}\" fill=\"${textColor}\" class=\"atom-label\">${atom.element}</text>`;\n    \n    // Interactive elements\n    if (options.interactive) {\n      atomGroup += `<title>${atom.element} - Atom ${index + 1}</title>`;\n    }\n    \n    atomGroup += '</g>';\n    \n    return atomGroup;\n  }\n\n  /**\n   * Generate metadata section\n   */\n  private generateMetadata(): string {\n    if (!this.molecule) return '';\n    \n    const metadata = [\n      '<metadata>',\n      `  <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:creb=\"https://creb.dev/ns#\">`,\n      `    <rdf:Description rdf:about=\"\">`,\n      `      <creb:atomCount>${this.molecule.atoms.length}</creb:atomCount>`,\n      `      <creb:bondCount>${this.molecule.bonds.length}</creb:bondCount>`,\n      `      <creb:generator>CREB-JS v${process.env.npm_package_version || '1.6.0'}</creb:generator>`,\n      `      <creb:timestamp>${new Date().toISOString()}</creb:timestamp>`,\n      `    </rdf:Description>`,\n      `  </rdf:RDF>`,\n      '</metadata>'\n    ];\n    \n    return metadata.join('\\n');\n  }\n\n  /**\n   * Generate empty SVG for when no molecule is loaded\n   */\n  private generateEmptySVG(options: SVGExportOptions): string {\n    const { width, height } = this.config;\n    \n    let svg = `<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">`;\n    svg += `<rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>`;\n    svg += `<text x=\"${width/2}\" y=\"${height/2 - 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"24\" fill=\"#999\">2D Molecular Structure</text>`;\n    svg += `<text x=\"${width/2}\" y=\"${height/2 + 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"14\" fill=\"#999\">Load a molecule to visualize</text>`;\n    svg += '</svg>';\n    \n    return svg;\n  }\n\n  /**\n   * Get contrasting color for text\n   */\n  private getContrastingColor(backgroundColor: string): string {\n    // Simple contrast calculation\n    const hex = backgroundColor.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    \n    return brightness > 128 ? '#000000' : '#ffffff';\n  }\n\n  /**\n   * Export as downloadable SVG file\n   */\n  exportAsFile(filename: string = 'molecule.svg', options: Partial<SVGExportOptions> = {}): void {\n    const svgContent = this.exportSVG({ ...options, format: 'svg-download' });\n    \n    // Create download link (browser only)\n    if (typeof document !== 'undefined') {\n      const blob = new Blob([svgContent], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      link.click();\n      URL.revokeObjectURL(url);\n    } else {\n      // Node.js environment - would need fs module\n      console.log('SVG content:', svgContent);\n    }\n  }\n\n  /**\n   * Get current molecule data\n   */\n  getMolecule(): Molecule2D | null {\n    return this.molecule;\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Partial<SVGConfig>): void {\n    this.config = { ...this.config, ...config };\n    this.centerMolecule();\n  }\n}\n\nexport default SVGRenderer;\n","/**\n * Simplified Molecular Visualization System\n * Node.js and browser compatible implementation\n */\n\nimport { Canvas2DRenderer, type Molecule2D } from './Canvas2DRenderer';\n\nexport interface MolecularVisualizationConfig {\n  container: any; // HTMLElement or string\n  width?: number;\n  height?: number;\n  mode?: '2d' | '3d' | 'both';\n  backgroundColor?: string;\n  interactive?: boolean;\n}\n\nexport interface MolecularStyleOptions {\n  style?: 'stick' | 'sphere' | 'wireframe';\n  colorScheme?: 'element' | 'rainbow' | 'jmol';\n  showLabels?: boolean;\n  atomScale?: number;\n  bondWidth?: number;\n}\n\nexport interface MoleculeVisualizationData {\n  pdb?: string;\n  sdf?: string;\n  smiles?: string;\n  atoms?: Array<{\n    element: string;\n    x: number;\n    y: number;\n    z: number;\n  }>;\n  bonds?: Array<{\n    atom1: number;\n    atom2: number;\n    order: number;\n  }>;\n}\n\n/**\n * Main Molecular Visualization Engine\n */\nexport class MolecularVisualization {\n  private container: any;\n  private config: MolecularVisualizationConfig;\n  private canvas2d?: Canvas2DRenderer;\n  private viewer3d?: any;\n  private currentMolecule?: MoleculeVisualizationData;\n  private styleOptions: MolecularStyleOptions;\n\n  constructor(config: MolecularVisualizationConfig) {\n    this.config = {\n      width: 600,\n      height: 400,\n      mode: 'both',\n      backgroundColor: '#ffffff',\n      interactive: true,\n      ...config\n    };\n\n    this.styleOptions = {\n      style: 'stick',\n      colorScheme: 'element',\n      showLabels: false,\n      atomScale: 1.0,\n      bondWidth: 2\n    };\n\n    this.initializeContainer();\n    this.setupVisualization();\n  }\n\n  /**\n   * Initialize the visualization container\n   */\n  private initializeContainer(): void {\n    // Handle both string selector and direct element\n    if (typeof this.config.container === 'string') {\n      // In browser environment, try to find element\n      try {\n        const element = (globalThis as any)?.document?.getElementById?.(this.config.container);\n        this.container = element || this.createFallbackContainer();\n      } catch {\n        this.container = this.createFallbackContainer();\n      }\n    } else {\n      this.container = this.config.container || this.createFallbackContainer();\n    }\n  }\n\n  /**\n   * Create a fallback container for non-browser environments\n   */\n  private createFallbackContainer(): any {\n    return {\n      width: this.config.width || 600,\n      height: this.config.height || 400,\n      appendChild: () => {},\n      innerHTML: '',\n      style: {}\n    };\n  }\n\n  /**\n   * Setup the visualization components\n   */\n  private setupVisualization(): void {\n    if (this.config.mode === '2d' || this.config.mode === 'both') {\n      this.setup2DVisualization();\n    }\n\n    if (this.config.mode === '3d' || this.config.mode === 'both') {\n      this.setup3DVisualization();\n    }\n  }\n\n  /**\n   * Setup 2D canvas visualization\n   */\n  private setup2DVisualization(): void {\n    try {\n      // Try to create canvas element\n      let canvas: any;\n      \n      if ((globalThis as any)?.document?.createElement) {\n        canvas = (globalThis as any).document.createElement('canvas');\n        canvas.width = this.config.width || 600;\n        canvas.height = this.config.height || 400;\n        \n        if (this.container.appendChild) {\n          this.container.appendChild(canvas);\n        }\n      } else {\n        // Fallback for non-browser environments\n        canvas = {\n          width: this.config.width || 600,\n          height: this.config.height || 400,\n          getContext: () => ({\n            fillStyle: '',\n            strokeStyle: '',\n            lineWidth: 1,\n            lineCap: 'round',\n            font: '12px Arial',\n            textAlign: 'center',\n            textBaseline: 'middle',\n            fillRect: () => {},\n            fillText: () => {},\n            beginPath: () => {},\n            moveTo: () => {},\n            lineTo: () => {},\n            arc: () => {},\n            fill: () => {},\n            stroke: () => {},\n            setLineDash: () => {}\n          }),\n          toDataURL: () => 'data:image/png;base64,',\n          style: {}\n        };\n      }\n\n      this.canvas2d = new Canvas2DRenderer(canvas);\n    } catch (error) {\n      console.warn('Could not initialize 2D visualization:', error);\n    }\n  }\n\n  /**\n   * Setup 3D visualization\n   */\n  private setup3DVisualization(): void {\n    try {\n      // Check if 3Dmol.js is available\n      if ((globalThis as any)?.$3Dmol) {\n        this.initialize3DViewer();\n      } else {\n        this.initializeFallback3D();\n      }\n    } catch (error) {\n      console.warn('Could not initialize 3D visualization:', error);\n      this.initializeFallback3D();\n    }\n  }\n\n  /**\n   * Initialize 3Dmol.js viewer\n   */\n  private initialize3DViewer(): void {\n    try {\n      const $3Dmol = (globalThis as any).$3Dmol;\n      this.viewer3d = $3Dmol.createViewer(this.container, {\n        defaultcolors: $3Dmol.elementColors.defaultColors\n      });\n    } catch (error) {\n      console.warn('Failed to create 3Dmol viewer:', error);\n      this.initializeFallback3D();\n    }\n  }\n\n  /**\n   * Initialize fallback 3D visualization\n   */\n  private initializeFallback3D(): void {\n    this.viewer3d = {\n      addModel: () => ({ setStyle: () => {}, show: () => {} }),\n      setStyle: () => {},\n      zoomTo: () => {},\n      render: () => {},\n      clear: () => {},\n      resize: () => {}\n    };\n  }\n\n  /**\n   * Load and display a molecule\n   */\n  loadMolecule(data: MoleculeVisualizationData): void {\n    this.currentMolecule = data;\n\n    if (this.config.mode === '2d' || this.config.mode === 'both') {\n      this.render2D(data);\n    }\n\n    if (this.config.mode === '3d' || this.config.mode === 'both') {\n      this.render3D(data);\n    }\n  }\n\n  /**\n   * Render molecule in 2D\n   */\n  private render2D(data: MoleculeVisualizationData): void {\n    if (!this.canvas2d) return;\n\n    try {\n      let molecule2d: Molecule2D;\n\n      if (data.smiles) {\n        molecule2d = Canvas2DRenderer.smilesToMolecule2D(data.smiles);\n      } else if (data.atoms && data.bonds) {\n        molecule2d = {\n          atoms: data.atoms.map((atom, i) => ({\n            element: atom.element,\n            position: { x: atom.x * 50 + 100, y: atom.y * 50 + 100 },\n            bonds: data.bonds!\n              .filter(bond => bond.atom1 === i || bond.atom2 === i)\n              .map((_, j) => j)\n          })),\n          bonds: data.bonds.map(bond => ({\n            atom1: bond.atom1,\n            atom2: bond.atom2,\n            order: bond.order,\n            type: bond.order === 1 ? 'single' : bond.order === 2 ? 'double' : 'triple'\n          }))\n        };\n      } else {\n        // Default fallback molecule\n        molecule2d = Canvas2DRenderer.smilesToMolecule2D('C');\n      }\n\n      this.canvas2d.loadMolecule(molecule2d);\n    } catch (error) {\n      console.warn('Error rendering 2D molecule:', error);\n    }\n  }\n\n  /**\n   * Render molecule in 3D\n   */\n  private render3D(data: MoleculeVisualizationData): void {\n    if (!this.viewer3d) return;\n\n    try {\n      this.viewer3d.clear();\n\n      if (data.pdb) {\n        const model = this.viewer3d.addModel(data.pdb, 'pdb');\n        model.setStyle({}, { [this.styleOptions.style || 'stick']: {} });\n        model.show();\n      } else if (data.sdf) {\n        const model = this.viewer3d.addModel(data.sdf, 'sdf');\n        model.setStyle({}, { [this.styleOptions.style || 'stick']: {} });\n        model.show();\n      }\n\n      this.viewer3d.zoomTo();\n      this.viewer3d.render();\n    } catch (error) {\n      console.warn('Error rendering 3D molecule:', error);\n    }\n  }\n\n  /**\n   * Update visualization style\n   */\n  updateStyle(options: Partial<MolecularStyleOptions>): void {\n    this.styleOptions = { ...this.styleOptions, ...options };\n\n    if (this.currentMolecule) {\n      this.loadMolecule(this.currentMolecule);\n    }\n  }\n\n  /**\n   * Export current visualization as image\n   */\n  exportImage(format: 'png' | 'jpg' = 'png'): string {\n    if (this.canvas2d && (this.config.mode === '2d' || this.config.mode === 'both')) {\n      return this.canvas2d.exportImage(format);\n    }\n    return '';\n  }\n\n  /**\n   * Reset visualization to default view\n   */\n  resetView(): void {\n    if (this.canvas2d) {\n      this.canvas2d.resetView();\n    }\n\n    if (this.viewer3d && this.viewer3d.zoomTo) {\n      this.viewer3d.zoomTo();\n      this.viewer3d.render();\n    }\n  }\n\n  /**\n   * Resize the visualization\n   */\n  resize(width: number, height: number): void {\n    this.config.width = width;\n    this.config.height = height;\n\n    if (this.viewer3d && this.viewer3d.resize) {\n      this.viewer3d.resize();\n    }\n\n    // For 2D, would need to recreate canvas\n    if (this.canvas2d) {\n      this.setup2DVisualization();\n      if (this.currentMolecule) {\n        this.render2D(this.currentMolecule);\n      }\n    }\n  }\n\n  /**\n   * Get current molecule data\n   */\n  getMolecule(): MoleculeVisualizationData | undefined {\n    return this.currentMolecule;\n  }\n\n  /**\n   * Clean up resources\n   */\n  destroy(): void {\n    if (this.viewer3d && this.viewer3d.clear) {\n      this.viewer3d.clear();\n    }\n    \n    this.canvas2d = undefined;\n    this.viewer3d = undefined;\n    this.currentMolecule = undefined;\n  }\n}\n\n/**\n * Utility functions for molecular data conversion\n */\nexport class MolecularDataUtils {\n  /**\n   * Convert PDB string to basic atom/bond data\n   */\n  static parsePDB(pdbString: string): MoleculeVisualizationData {\n    const atoms: Array<{ element: string; x: number; y: number; z: number }> = [];\n    const bonds: Array<{ atom1: number; atom2: number; order: number }> = [];\n\n    const lines = pdbString.split('\\n');\n    \n    for (const line of lines) {\n      if (line.startsWith('ATOM') || line.startsWith('HETATM')) {\n        const element = line.substring(76, 78).trim() || line.substring(12, 16).trim().charAt(0);\n        const x = parseFloat(line.substring(30, 38));\n        const y = parseFloat(line.substring(38, 46));\n        const z = parseFloat(line.substring(46, 54));\n        \n        if (!isNaN(x) && !isNaN(y) && !isNaN(z)) {\n          atoms.push({ element, x, y, z });\n        }\n      }\n    }\n\n    // Simple bond detection based on distance\n    for (let i = 0; i < atoms.length; i++) {\n      for (let j = i + 1; j < atoms.length; j++) {\n        const dx = atoms[i].x - atoms[j].x;\n        const dy = atoms[i].y - atoms[j].y;\n        const dz = atoms[i].z - atoms[j].z;\n        const distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n        \n        // Typical bond distance thresholds\n        if (distance < 2.0) {\n          bonds.push({ atom1: i, atom2: j, order: 1 });\n        }\n      }\n    }\n\n    return { pdb: pdbString, atoms, bonds };\n  }\n\n  /**\n   * Generate sample molecules for testing\n   */\n  static generateSampleMolecule(type: 'water' | 'methane' | 'benzene' = 'water'): MoleculeVisualizationData {\n    switch (type) {\n      case 'water':\n        return {\n          smiles: 'O',\n          atoms: [\n            { element: 'O', x: 0, y: 0, z: 0 },\n            { element: 'H', x: 0.757, y: 0.587, z: 0 },\n            { element: 'H', x: -0.757, y: 0.587, z: 0 }\n          ],\n          bonds: [\n            { atom1: 0, atom2: 1, order: 1 },\n            { atom1: 0, atom2: 2, order: 1 }\n          ]\n        };\n\n      case 'methane':\n        return {\n          smiles: 'C',\n          atoms: [\n            { element: 'C', x: 0, y: 0, z: 0 },\n            { element: 'H', x: 1.089, y: 0, z: 0 },\n            { element: 'H', x: -0.363, y: 1.027, z: 0 },\n            { element: 'H', x: -0.363, y: -0.513, z: 0.889 },\n            { element: 'H', x: -0.363, y: -0.513, z: -0.889 }\n          ],\n          bonds: [\n            { atom1: 0, atom2: 1, order: 1 },\n            { atom1: 0, atom2: 2, order: 1 },\n            { atom1: 0, atom2: 3, order: 1 },\n            { atom1: 0, atom2: 4, order: 1 }\n          ]\n        };\n\n      case 'benzene':\n        return {\n          smiles: 'c1ccccc1',\n          atoms: [\n            { element: 'C', x: 1.4, y: 0, z: 0 },\n            { element: 'C', x: 0.7, y: 1.2, z: 0 },\n            { element: 'C', x: -0.7, y: 1.2, z: 0 },\n            { element: 'C', x: -1.4, y: 0, z: 0 },\n            { element: 'C', x: -0.7, y: -1.2, z: 0 },\n            { element: 'C', x: 0.7, y: -1.2, z: 0 }\n          ],\n          bonds: [\n            { atom1: 0, atom2: 1, order: 1 },\n            { atom1: 1, atom2: 2, order: 2 },\n            { atom1: 2, atom2: 3, order: 1 },\n            { atom1: 3, atom2: 4, order: 2 },\n            { atom1: 4, atom2: 5, order: 1 },\n            { atom1: 5, atom2: 0, order: 2 }\n          ]\n        };\n\n      default:\n        return this.generateSampleMolecule('water');\n    }\n  }\n}\n\nexport default MolecularVisualization;\n","/**\n * Browser-compatible CREB-JS entry point\n * This file excludes Node.js-specific functionality to ensure browser compatibility\n */\n\n// Core chemistry functionality (browser-compatible)\nexport { ChemicalEquationBalancer } from './balancer';\nexport { Stoichiometry } from './stoichiometry';\nexport { ElementCounter, EquationParser, calculateMolarWeight } from './utils';\nexport * from './types';\nexport * from './constants';\n\n// Enhanced TypeScript Support (browser-compatible)\nexport {\n  // Branded Types\n  type ChemicalFormula,\n  type ElementSymbol,\n  type BalancedEquationString,\n  type SMILESNotation,\n  type InChINotation,\n  type CASNumber,\n  \n  // Advanced Types\n  type ValidElement,\n  type TypedElementCount,\n  type TypedCompound,\n  type TypedReaction,\n  type ReactionType,\n  type PhaseState,\n  \n  // Type Guards\n  isChemicalFormula,\n  isElementSymbol,\n  isBalancedEquation,\n  \n  // Utility Functions\n  parseFormula,\n  createChemicalFormula,\n  createElementSymbol,\n  \n  // Error Types\n  ChemicalFormulaError,\n  EquationBalancingError\n} from './advancedTypes';\n\nexport { EnhancedBalancer } from './enhancedBalancerSimple';\n\n// Enhanced PubChem-integrated classes (browser-compatible version)\nexport { \n  EnhancedChemicalEquationBalancer,\n  type EnhancedBalancedEquation,\n  type CompoundInfo \n} from './enhancedBalancer';\n\n// Browser-compatible visualization - import specific components\nexport { Canvas2DRenderer } from './visualization/Canvas2DRenderer';\nexport { SVGRenderer } from './visualization/SVGRenderer';\nexport { \n  MolecularVisualization,\n  type MolecularVisualizationConfig,\n  type MolecularStyleOptions,\n  type MoleculeVisualizationData\n} from './visualization/SimplifiedMolecularVisualization';\n\n// Import the class for use in factory function\nimport { MolecularVisualization as MolViz } from './visualization/SimplifiedMolecularVisualization';\n\n// Re-export specific visualization types and functions\nexport type MoleculeForVisualization = {\n  elements: string[];\n  formula?: string;\n};\n\nexport function convertMoleculeToVisualization(molecule: MoleculeForVisualization) {\n  const atoms = molecule.elements.map((element: string, index: number) => ({\n    element,\n    x: Math.random() * 4 - 2,\n    y: Math.random() * 4 - 2,\n    z: Math.random() * 4 - 2\n  }));\n\n  const bonds = [];\n  for (let i = 0; i < atoms.length - 1; i++) {\n    bonds.push({\n      atom1: i,\n      atom2: i + 1,\n      order: 1\n    });\n  }\n\n  return {\n    atoms,\n    bonds,\n    smiles: molecule.formula || `${molecule.elements.join('')}`\n  };\n}\n\n// Simple factory function that can be tree-shaken if not used\nexport function createMolecularVisualization(container: any, options: any = {}) {\n  return new MolViz({ container, ...options });\n}\n\n// Browser polyfill for EventEmitter\nexport class EventEmitter {\n  private events: { [key: string]: Function[] } = {};\n\n  on(event: string, listener: Function): this {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n    return this;\n  }\n\n  emit(event: string, ...args: any[]): boolean {\n    if (this.events[event]) {\n      this.events[event].forEach(listener => listener(...args));\n      return true;\n    }\n    return false;\n  }\n\n  removeListener(event: string, listener: Function): this {\n    if (this.events[event]) {\n      this.events[event] = this.events[event].filter(l => l !== listener);\n    }\n    return this;\n  }\n\n  removeAllListeners(event?: string): this {\n    if (event) {\n      delete this.events[event];\n    } else {\n      this.events = {};\n    }\n    return this;\n  }\n}\n"],"names":["global","ChemicalEquationBalancer","Stoichiometry","CREBValidationError","EventEmitter","EnhancedChemicalEquationBalancer","MolViz"],"mappings":"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A,IAAI,EAAE,IAAI;IACV,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,GAAG,EAAE,KAAK;IACV,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,GAAG,EAAE,MAAM;IACX,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,MAAM;IACZ,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,KAAK;IACX,IAAA,IAAI,EAAE,MAAM;IACZ,IAA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","x_google_ignoreList":[3]}