{"version":3,"file":"index.browser.js","sources":["../src/visualization/RDKitWrapper.ts","../src/visualization/Mol3DWrapper.ts","../src/visualization/PubChemIntegration.ts","../src/visualization/ReactionAnimation.ts","../src/ai/SimplifiedReactionClassifier.ts","../src/physics/SimplifiedPhysicsEngine.ts","../src/caching/SimplifiedCacheManager.ts","../src/animation/ReactionAnimationEngine.ts","../src/enhancements/EnhancedAnimationController.ts","../src/enhancements/EnhancedMolecularRenderer.ts","../src/enhancements/EnhancedUI.ts","../src/enhancements/BrowserCompatibilityManager.ts","../src/enhancements/EnhancedFeaturesSystem.ts","../src/enhancements/index.ts","../src/constants.ts","../src/core/errors/CREBError.ts","../src/utils.ts","../node_modules/reflect-metadata/Reflect.js","../src/core/decorators/Injectable.ts","../src/balancer.ts","../src/stoichiometry.ts","../src/advancedTypes.ts","../src/enhancedBalancerSimple.ts","../src/performance/cache/EvictionPolicies.ts","../src/performance/cache/CacheMetrics.ts","../src/performance/cache/AdvancedCache.ts","../src/validation/browserValidation.ts","../src/enhancedBalancer.ts","../src/visualization/Molecular2DGenerator.ts","../src/visualization/Canvas2DRenderer.ts","../src/visualization/SVGRenderer.ts","../src/visualization/SimplifiedMolecularVisualization.ts","../src/index.browser.ts"],"sourcesContent":["/**\n * RDKit.js Wrapper for CREB Molecular Visualization\n * Provides unified API for advanced molecular structure processing and generation\n * \n * Features:\n * - SMILES/SMARTS parsing and validation\n * - 2D coordinate generation with RDKit algorithms\n * - Molecular descriptors and properties calculation\n * - Substructure searching and matching\n * - Chemical transformation operations\n * - SVG generation with RDKit's advanced rendering\n */\n\nexport interface RDKitMolecule {\n  smiles: string;\n  molblock?: string;\n  atoms: RDKitAtom[];\n  bonds: RDKitBond[];\n  properties: MolecularProperties;\n}\n\nexport interface RDKitAtom {\n  atomicNum: number;\n  symbol: string;\n  x: number;\n  y: number;\n  z?: number;\n  charge: number;\n  hybridization: string;\n  aromantic: boolean;\n  inRing: boolean;\n}\n\nexport interface RDKitBond {\n  beginAtomIdx: number;\n  endAtomIdx: number;\n  bondType: 'SINGLE' | 'DOUBLE' | 'TRIPLE' | 'AROMATIC';\n  isInRing: boolean;\n  isConjugated: boolean;\n}\n\nexport interface MolecularProperties {\n  molecularWeight: number;\n  logP: number;\n  tpsa: number; // Topological Polar Surface Area\n  hbd: number;  // Hydrogen Bond Donors\n  hba: number;  // Hydrogen Bond Acceptors\n  rotatableBonds: number;\n  aromaticRings: number;\n  aliphaticRings: number;\n  formula: string;\n  inchi: string;\n  inchiKey: string;\n}\n\nexport interface RDKitConfig {\n  kekulize: boolean;\n  addCoords: boolean;\n  removeHs: boolean;\n  sanitize: boolean;\n  useCoordGen: boolean;\n  width: number;\n  height: number;\n  offsetx: number;\n  offsety: number;\n}\n\nexport interface SubstructureMatch {\n  atomIds: number[];\n  bondIds: number[];\n  matched: boolean;\n}\n\nexport interface ChemicalTransformation {\n  reactant: string;\n  product: string;\n  reactionSmarts: string;\n}\n\n/**\n * RDKit.js Wrapper Class\n * Provides simplified access to RDKit functionality within CREB\n */\nexport class RDKitWrapper {\n  private rdkit: any = null;\n  private initialized = false;\n  private config: RDKitConfig;\n\n  constructor(config: Partial<RDKitConfig> = {}) {\n    this.config = {\n      kekulize: true,\n      addCoords: true,\n      removeHs: true,\n      sanitize: true,\n      useCoordGen: true,\n      width: 600,\n      height: 400,\n      offsetx: 0,\n      offsety: 0,\n      ...config\n    };\n  }\n\n  /**\n   * Initialize RDKit.js library using the official pattern\n   */\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      // Browser environment - use official initRDKitModule\n      if (typeof window !== 'undefined') {\n        // Check if initRDKitModule is available globally (official method)\n        if (typeof (window as any).initRDKitModule === 'function') {\n          console.log('Initializing RDKit using official initRDKitModule...');\n          this.rdkit = await (window as any).initRDKitModule();\n          this.initialized = true;\n          console.log('RDKit initialized successfully, version:', this.rdkit.version());\n          return;\n        }\n\n        // Fallback: check if RDKit is already available globally\n        if ((window as any).RDKit) {\n          console.log('Using pre-loaded RDKit instance...');\n          this.rdkit = (window as any).RDKit;\n          this.initialized = true;\n          return;\n        }\n\n        // Try dynamic import as last resort\n        try {\n          // Use string-based import to avoid build-time type checking\n          const rdkitModule = await import('@' + 'rdkit' + '/' + 'rdkit');\n          this.rdkit = await (rdkitModule as any).initRDKitModule();\n          this.initialized = true;\n          return;\n        } catch (importError) {\n          console.warn('Dynamic import failed:', importError);\n        }\n\n        throw new Error('RDKit.js not available - please ensure RDKit.js is loaded via script tag');\n      } else {\n        // Node.js environment\n        console.warn('RDKit.js not available in Node.js environment. Using fallback implementations.');\n        this.rdkit = this.createFallbackRDKit();\n        this.initialized = true;\n      }\n      \n      this.initialized = true;\n    } catch (error) {\n      console.warn('RDKit.js initialization failed:', error);\n      this.rdkit = this.createFallbackRDKit();\n      this.initialized = true;\n    }\n  }\n\n  /**\n   * Parse SMILES string and generate molecule object\n   */\n  async parseSMILES(smiles: string): Promise<RDKitMolecule | null> {\n    await this.initialize();\n\n    try {\n      if (!this.rdkit.get_mol) {\n        return this.fallbackParseSMILES(smiles);\n      }\n\n      const mol = this.rdkit.get_mol(smiles);\n      if (!mol || !mol.is_valid()) {\n        throw new Error(`Invalid SMILES: ${smiles}`);\n      }\n\n      // Generate 2D coordinates\n      if (this.config.addCoords) {\n        mol.generate_2d_coords();\n      }\n\n      // Extract molecule data\n      const molData = this.extractMoleculeData(mol);\n      \n      // Cleanup RDKit object\n      mol.delete();\n\n      return molData;\n    } catch (error) {\n      console.error('SMILES parsing failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Generate SVG representation of molecule\n   */\n  async generateSVG(smiles: string, options: Partial<RDKitConfig> = {}): Promise<string> {\n    await this.initialize();\n\n    const config = { ...this.config, ...options };\n\n    try {\n      if (!this.rdkit.get_mol) {\n        return this.fallbackGenerateSVG(smiles, config);\n      }\n\n      const mol = this.rdkit.get_mol(smiles);\n      if (!mol || !mol.is_valid()) {\n        throw new Error(`Invalid SMILES: ${smiles}`);\n      }\n\n      // Generate SVG\n      const svg = mol.get_svg_with_highlights(\n        JSON.stringify({\n          width: config.width,\n          height: config.height,\n          offsetx: config.offsetx,\n          offsety: config.offsety\n        })\n      );\n\n      mol.delete();\n      return svg;\n    } catch (error) {\n      console.error('SVG generation failed:', error);\n      return this.fallbackGenerateSVG(smiles, config);\n    }\n  }\n\n  /**\n   * Calculate molecular descriptors\n   */\n  async calculateDescriptors(smiles: string): Promise<MolecularProperties> {\n    await this.initialize();\n\n    try {\n      if (!this.rdkit.get_mol) {\n        return this.fallbackCalculateDescriptors(smiles);\n      }\n\n      const mol = this.rdkit.get_mol(smiles);\n      if (!mol || !mol.is_valid()) {\n        throw new Error(`Invalid SMILES: ${smiles}`);\n      }\n\n      const descriptors = JSON.parse(mol.get_descriptors());\n      const properties: MolecularProperties = {\n        molecularWeight: descriptors.amw || 0,\n        logP: descriptors.clogp || 0,\n        tpsa: descriptors.tpsa || 0,\n        hbd: descriptors.lipinskiHBD || 0,\n        hba: descriptors.lipinskiHBA || 0,\n        rotatableBonds: descriptors.NumRotatableBonds || 0,\n        aromaticRings: descriptors.NumAromaticRings || 0,\n        aliphaticRings: descriptors.NumAliphaticRings || 0,\n        formula: mol.get_molformula() || '',\n        inchi: mol.get_inchi() || '',\n        inchiKey: mol.get_inchi_key() || ''\n      };\n\n      mol.delete();\n      return properties;\n    } catch (error) {\n      console.error('Descriptor calculation failed:', error);\n      return this.fallbackCalculateDescriptors(smiles);\n    }\n  }\n\n  /**\n   * Perform substructure search\n   */\n  async findSubstructure(moleculeSmiles: string, querySmarts: string): Promise<SubstructureMatch[]> {\n    await this.initialize();\n\n    try {\n      if (!this.rdkit.get_mol) {\n        return this.fallbackFindSubstructure(moleculeSmiles, querySmarts);\n      }\n\n      const mol = this.rdkit.get_mol(moleculeSmiles);\n      const query = this.rdkit.get_qmol(querySmarts);\n\n      if (!mol || !mol.is_valid() || !query || !query.is_valid()) {\n        throw new Error('Invalid molecule or query structure');\n      }\n\n      const matches = JSON.parse(mol.get_substruct_matches(query));\n      \n      mol.delete();\n      query.delete();\n\n      return matches.map((match: any) => ({\n        atomIds: match.atoms || [],\n        bondIds: match.bonds || [],\n        matched: true\n      }));\n    } catch (error) {\n      console.error('Substructure search failed:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Apply chemical transformation\n   */\n  async applyTransformation(smiles: string, reactionSmarts: string): Promise<string[]> {\n    await this.initialize();\n\n    try {\n      if (!this.rdkit.get_mol) {\n        return this.fallbackApplyTransformation(smiles, reactionSmarts);\n      }\n\n      const mol = this.rdkit.get_mol(smiles);\n      const rxn = this.rdkit.get_rxn(reactionSmarts);\n\n      if (!mol || !mol.is_valid() || !rxn || !rxn.is_valid()) {\n        throw new Error('Invalid molecule or reaction');\n      }\n\n      const products = JSON.parse(rxn.run_reactants([mol]));\n      \n      mol.delete();\n      rxn.delete();\n\n      return products.map((product: any) => product.smiles || '');\n    } catch (error) {\n      console.error('Chemical transformation failed:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Validate SMILES string\n   */\n  async validateSMILES(smiles: string): Promise<boolean> {\n    await this.initialize();\n\n    try {\n      if (!this.rdkit.get_mol) {\n        return this.fallbackValidateSMILES(smiles);\n      }\n\n      const mol = this.rdkit.get_mol(smiles);\n      const isValid = mol && mol.is_valid();\n      \n      if (mol) mol.delete();\n      return isValid;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Extract detailed molecule data from RDKit molecule object\n   */\n  private extractMoleculeData(mol: any): RDKitMolecule {\n    const molblock = mol.get_molblock();\n    const smiles = mol.get_smiles();\n    \n    // Get atom and bond information\n    const atoms: RDKitAtom[] = [];\n    const bonds: RDKitBond[] = [];\n\n    try {\n      const molData = JSON.parse(mol.get_json());\n      \n      // Extract atoms\n      if (molData.atoms) {\n        molData.atoms.forEach((atom: any, index: number) => {\n          atoms.push({\n            atomicNum: atom.z || 0,\n            symbol: atom.l || 'C',\n            x: atom.x || 0,\n            y: atom.y || 0,\n            z: atom.z || 0,\n            charge: atom.c || 0,\n            hybridization: atom.h || 'sp3',\n            aromantic: atom.a || false,\n            inRing: atom.r || false\n          });\n        });\n      }\n\n      // Extract bonds\n      if (molData.bonds) {\n        molData.bonds.forEach((bond: any) => {\n          bonds.push({\n            beginAtomIdx: bond.b || 0,\n            endAtomIdx: bond.e || 0,\n            bondType: this.mapBondType(bond.o || 1),\n            isInRing: bond.r || false,\n            isConjugated: bond.c || false\n          });\n        });\n      }\n    } catch (error) {\n      console.warn('Failed to extract detailed molecule data:', error);\n    }\n\n    return {\n      smiles,\n      molblock,\n      atoms,\n      bonds,\n      properties: {\n        molecularWeight: 0,\n        logP: 0,\n        tpsa: 0,\n        hbd: 0,\n        hba: 0,\n        rotatableBonds: 0,\n        aromaticRings: 0,\n        aliphaticRings: 0,\n        formula: mol.get_molformula() || '',\n        inchi: mol.get_inchi() || '',\n        inchiKey: mol.get_inchi_key() || ''\n      }\n    };\n  }\n\n  /**\n   * Map RDKit bond order to bond type\n   */\n  private mapBondType(order: number): 'SINGLE' | 'DOUBLE' | 'TRIPLE' | 'AROMATIC' {\n    switch (order) {\n      case 1: return 'SINGLE';\n      case 2: return 'DOUBLE';\n      case 3: return 'TRIPLE';\n      case 12: return 'AROMATIC';\n      default: return 'SINGLE';\n    }\n  }\n\n  /**\n   * Create fallback RDKit implementation for environments where RDKit.js is not available\n   */\n  private createFallbackRDKit(): any {\n    return {\n      get_mol: null,\n      get_qmol: null,\n      get_rxn: null\n    };\n  }\n\n  /**\n   * Fallback implementations for when RDKit.js is not available\n   */\n  private fallbackParseSMILES(smiles: string): RDKitMolecule {\n    // Simple SMILES parsing fallback\n    const atomCount = smiles.length; // Simplified\n    return {\n      smiles,\n      atoms: [],\n      bonds: [],\n      properties: {\n        molecularWeight: atomCount * 12, // Rough estimate\n        logP: 0,\n        tpsa: 0,\n        hbd: 0,\n        hba: 0,\n        rotatableBonds: 0,\n        aromaticRings: 0,\n        aliphaticRings: 0,\n        formula: smiles,\n        inchi: '',\n        inchiKey: ''\n      }\n    };\n  }\n\n  private fallbackGenerateSVG(smiles: string, config: RDKitConfig): string {\n    return `<svg width=\"${config.width}\" height=\"${config.height}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n      <text x=\"${config.width/2}\" y=\"${config.height/2}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"16\">\n        ${smiles}\n      </text>\n      <text x=\"${config.width/2}\" y=\"${config.height/2 + 25}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"12\" fill=\"#666\">\n        (RDKit.js not available - showing SMILES)\n      </text>\n    </svg>`;\n  }\n\n  private fallbackCalculateDescriptors(smiles: string): MolecularProperties {\n    return {\n      molecularWeight: smiles.length * 12, // Very rough estimate\n      logP: 0,\n      tpsa: 0,\n      hbd: 0,\n      hba: 0,\n      rotatableBonds: 0,\n      aromaticRings: 0,\n      aliphaticRings: 0,\n      formula: smiles,\n      inchi: '',\n      inchiKey: ''\n    };\n  }\n\n  private fallbackFindSubstructure(moleculeSmiles: string, querySmarts: string): SubstructureMatch[] {\n    // Simple substring search as fallback\n    const matched = moleculeSmiles.includes(querySmarts);\n    return matched ? [{ atomIds: [], bondIds: [], matched: true }] : [];\n  }\n\n  private fallbackApplyTransformation(smiles: string, reactionSmarts: string): string[] {\n    // No transformation capability in fallback\n    return [smiles];\n  }\n\n  private fallbackValidateSMILES(smiles: string): boolean {\n    // Basic validation - check for common SMILES characters\n    const smilesPattern = /^[A-Za-z0-9@+\\-\\[\\]()=#:/\\\\%*.]+$/;\n    return smilesPattern.test(smiles) && smiles.length > 0;\n  }\n\n  /**\n   * Cleanup resources\n   */\n  dispose(): void {\n    // RDKit.js cleanup if needed\n    this.initialized = false;\n  }\n}\n\n/**\n * Static utility methods for RDKit operations\n */\nexport class RDKitUtils {\n  /**\n   * Convert CREB molecule format to RDKit-compatible format\n   */\n  static crebToRDKit(crebMolecule: any): RDKitMolecule {\n    // Implementation for converting CREB format to RDKit format\n    return {\n      smiles: crebMolecule.formula || '',\n      atoms: [],\n      bonds: [],\n      properties: {\n        molecularWeight: 0,\n        logP: 0,\n        tpsa: 0,\n        hbd: 0,\n        hba: 0,\n        rotatableBonds: 0,\n        aromaticRings: 0,\n        aliphaticRings: 0,\n        formula: crebMolecule.formula || '',\n        inchi: '',\n        inchiKey: ''\n      }\n    };\n  }\n\n  /**\n   * Convert RDKit molecule to CREB format\n   */\n  static rdkitToCreb(rdkitMolecule: RDKitMolecule): any {\n    return {\n      formula: rdkitMolecule.properties.formula,\n      elements: rdkitMolecule.atoms.map(atom => atom.symbol),\n      smiles: rdkitMolecule.smiles,\n      molecularWeight: rdkitMolecule.properties.molecularWeight\n    };\n  }\n\n  /**\n   * Generate common chemical patterns for substructure searching\n   */\n  static getCommonPatterns(): Record<string, string> {\n    return {\n      benzene: 'c1ccccc1',\n      alcohol: '[OH]',\n      carbonyl: 'C=O',\n      carboxyl: 'C(=O)O',\n      amine: 'N',\n      ester: 'C(=O)O',\n      ether: 'COC',\n      alkene: 'C=C',\n      alkyne: 'C#C',\n      phenol: 'c1ccc(O)cc1'\n    };\n  }\n}\n\nexport default RDKitWrapper;\n","/**\n * 3Dmol.js Wrapper for CREB Molecular Visualization\n * Provides unified API for advanced 3D molecular structure visualization\n * \n * Features:\n * - Interactive 3D molecular visualization with WebGL\n * - Multiple rendering styles (ball-and-stick, space-filling, cartoon, etc.)\n * - Animation and transition effects\n * - Chemical property visualization (electrostatic, hydrophobic surfaces)\n * - Multi-molecule scene management\n * - Export capabilities (PNG, WebM, molecular formats)\n * - Event handling for molecular interactions\n */\n\nexport interface Mol3DConfig {\n  backgroundColor: string;\n  width: number;\n  height: number;\n  antialias: boolean;\n  alpha: boolean;\n  preserveDrawingBuffer: boolean;\n  premultipliedAlpha: boolean;\n  camera: CameraConfig;\n  lighting: LightingConfig;\n  fog: FogConfig;\n}\n\nexport interface CameraConfig {\n  fov: number;\n  near: number;\n  far: number;\n  position: { x: number; y: number; z: number };\n  target: { x: number; y: number; z: number };\n  up: { x: number; y: number; z: number };\n}\n\nexport interface LightingConfig {\n  ambient: string;\n  directional: Array<{\n    color: string;\n    intensity: number;\n    position: { x: number; y: number; z: number };\n  }>;\n}\n\nexport interface FogConfig {\n  enabled: boolean;\n  color: string;\n  near: number;\n  far: number;\n}\n\nexport interface Mol3DStyle {\n  stick?: StickStyle;\n  sphere?: SphereStyle;\n  cartoon?: CartoonStyle;\n  surface?: SurfaceStyle;\n  line?: LineStyle;\n  cross?: CrossStyle;\n}\n\nexport interface StickStyle {\n  radius?: number;\n  colorscheme?: string;\n  colors?: Record<string, string>;\n  hidden?: boolean;\n  opacity?: number;\n}\n\nexport interface SphereStyle {\n  radius?: number;\n  scale?: number;\n  colorscheme?: string;\n  colors?: Record<string, string>;\n  hidden?: boolean;\n  opacity?: number;\n}\n\nexport interface CartoonStyle {\n  color?: string;\n  style?: 'trace' | 'oval' | 'tube' | 'ribbon' | 'arrow';\n  ribbon?: boolean;\n  arrows?: boolean;\n  tubes?: boolean;\n  opacity?: number;\n  thickness?: number;\n}\n\nexport interface SurfaceStyle {\n  opacity?: number;\n  colorscheme?: string;\n  map?: any;\n  material?: 'basic' | 'lambert' | 'phong';\n  wireframe?: boolean;\n  linewidth?: number;\n  smooth?: number;\n}\n\nexport interface LineStyle {\n  linewidth?: number;\n  colorscheme?: string;\n  colors?: Record<string, string>;\n  hidden?: boolean;\n}\n\nexport interface CrossStyle {\n  radius?: number;\n  scale?: number;\n  colorscheme?: string;\n  colors?: Record<string, string>;\n  hidden?: boolean;\n}\n\nexport interface Mol3DAtom {\n  elem: string;\n  x: number;\n  y: number;\n  z: number;\n  serial?: number;\n  atom?: string;\n  resn?: string;\n  chain?: string;\n  resi?: number;\n  b?: number;\n  pdbline?: string;\n  bonds?: number[];\n  bondOrder?: number[];\n  properties?: Record<string, any>;\n}\n\nexport interface Mol3DMolecule {\n  atoms: Mol3DAtom[];\n  title?: string;\n  format?: 'pdb' | 'sdf' | 'mol2' | 'xyz' | 'cml';\n  data?: string;\n}\n\nexport interface AnimationOptions {\n  duration: number;\n  easing?: 'linear' | 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out';\n  loop?: boolean;\n  autoplay?: boolean;\n  direction?: 'forward' | 'reverse' | 'alternate';\n}\n\nexport interface ExportOptions {\n  format: 'png' | 'webm' | 'pdb' | 'sdf' | 'mol2';\n  width?: number;\n  height?: number;\n  quality?: number;\n  fps?: number; // For WebM export\n  duration?: number; // For WebM export\n}\n\nexport interface InteractionEvent {\n  type: 'click' | 'hover' | 'select' | 'drag';\n  atom?: Mol3DAtom;\n  atoms?: Mol3DAtom[];\n  position: { x: number; y: number; z: number };\n  screenPosition: { x: number; y: number };\n}\n\n/**\n * 3Dmol.js Wrapper Class\n * Provides simplified access to 3Dmol.js functionality within CREB\n */\nexport class Mol3DWrapper {\n  private viewer: any = null;\n  private container: HTMLElement | null = null;\n  private initialized = false;\n  private config: Mol3DConfig;\n  private molecules: Map<string, Mol3DMolecule> = new Map();\n  private eventHandlers: Map<string, Function[]> = new Map();\n\n  constructor(container: HTMLElement | string, config: Partial<Mol3DConfig> = {}) {\n    this.container = typeof container === 'string' \n      ? document.getElementById(container) \n      : container;\n      \n    this.config = {\n      backgroundColor: '#ffffff',\n      width: 600,\n      height: 400,\n      antialias: true,\n      alpha: false,\n      preserveDrawingBuffer: true,\n      premultipliedAlpha: false,\n      camera: {\n        fov: 45,\n        near: 0.1,\n        far: 1000,\n        position: { x: 0, y: 0, z: 50 },\n        target: { x: 0, y: 0, z: 0 },\n        up: { x: 0, y: 1, z: 0 }\n      },\n      lighting: {\n        ambient: '#404040',\n        directional: [\n          {\n            color: '#ffffff',\n            intensity: 1.0,\n            position: { x: 1, y: 1, z: 1 }\n          }\n        ]\n      },\n      fog: {\n        enabled: false,\n        color: '#ffffff',\n        near: 50,\n        far: 100\n      },\n      ...config\n    };\n  }\n\n  /**\n   * Initialize 3Dmol.js viewer\n   */\n  async initialize(): Promise<void> {\n    if (this.initialized || !this.container) return;\n\n    try {\n      // Dynamic import for 3Dmol.js\n      let $3Dmol: any;\n      \n      if (typeof window !== 'undefined') {\n        // Browser environment - try different import methods\n        try {\n          // Use string-based import to avoid build-time type checking\n          $3Dmol = await import('3' + 'dmol');\n        } catch {\n          // Fallback to global $3Dmol if module import fails\n          $3Dmol = (window as any).$3Dmol;\n        }\n      }\n\n      if (!$3Dmol) {\n        console.warn('3Dmol.js not available. Using fallback implementation.');\n        this.viewer = this.createFallbackViewer();\n      } else {\n        // Create 3Dmol viewer\n        this.viewer = $3Dmol.createViewer(this.container, {\n          backgroundColor: this.config.backgroundColor,\n          antialias: this.config.antialias,\n          alpha: this.config.alpha,\n          preserveDrawingBuffer: this.config.preserveDrawingBuffer,\n          premultipliedAlpha: this.config.premultipliedAlpha\n        });\n\n        // Configure camera\n        this.viewer.setCameraParameters({\n          fov: this.config.camera.fov,\n          near: this.config.camera.near,\n          far: this.config.camera.far\n        });\n\n        // Set initial camera position\n        this.viewer.setViewStyle({\n          style: 'outline',\n          color: 'black',\n          width: 0.1\n        });\n      }\n\n      this.initialized = true;\n      this.setupEventHandlers();\n    } catch (error) {\n      console.warn('3Dmol.js initialization failed:', error);\n      this.viewer = this.createFallbackViewer();\n      this.initialized = true;\n    }\n  }\n\n  /**\n   * Get the 3Dmol viewer instance\n   */\n  getViewer(): any {\n    return this.viewer;\n  }\n\n  /**\n   * Add molecule to the scene\n   */\n  async addMolecule(\n    id: string, \n    moleculeData: string | Mol3DMolecule, \n    format: 'pdb' | 'sdf' | 'mol2' | 'xyz' | 'cml' = 'pdb'\n  ): Promise<void> {\n    await this.initialize();\n\n    try {\n      let molecule: Mol3DMolecule;\n\n      if (typeof moleculeData === 'string') {\n        // Parse molecule data\n        molecule = this.parseMoleculeData(moleculeData, format);\n        if (this.viewer.addModel) {\n          this.viewer.addModel(moleculeData, format);\n        }\n      } else {\n        molecule = moleculeData;\n        if (this.viewer.addModel && molecule.data) {\n          this.viewer.addModel(molecule.data, molecule.format || format);\n        }\n      }\n\n      this.molecules.set(id, molecule);\n      this.render();\n    } catch (error) {\n      console.error('Failed to add molecule:', error);\n    }\n  }\n\n  /**\n   * Remove molecule from the scene\n   */\n  removeMolecule(id: string): void {\n    if (this.molecules.has(id)) {\n      this.molecules.delete(id);\n      // Remove from 3Dmol viewer\n      if (this.viewer.removeAllModels) {\n        this.viewer.removeAllModels();\n        // Re-add remaining molecules\n        this.molecules.forEach((molecule, moleculeId) => {\n          if (molecule.data && moleculeId !== id) {\n            this.viewer.addModel(molecule.data, molecule.format || 'pdb');\n          }\n        });\n      }\n      this.render();\n    }\n  }\n\n  /**\n   * Set visualization style for molecules\n   */\n  setStyle(style: Mol3DStyle, selector?: any): void {\n    if (!this.viewer.setStyle) {\n      console.warn('Style setting not available in fallback mode');\n      return;\n    }\n\n    try {\n      this.viewer.setStyle(selector || {}, style);\n      this.render();\n    } catch (error) {\n      console.error('Failed to set style:', error);\n    }\n  }\n\n  /**\n   * Add surface to molecule\n   */\n  addSurface(\n    surfaceType: 'VDW' | 'SAS' | 'MS' | 'SES' = 'VDW',\n    style: SurfaceStyle = {},\n    selector?: any\n  ): void {\n    if (!this.viewer.addSurface) {\n      console.warn('Surface rendering not available in fallback mode');\n      return;\n    }\n\n    try {\n      this.viewer.addSurface(surfaceType, style, selector);\n      this.render();\n    } catch (error) {\n      console.error('Failed to add surface:', error);\n    }\n  }\n\n  /**\n   * Animate camera movement\n   */\n  animateCamera(\n    targetPosition: { x: number; y: number; z: number },\n    options: AnimationOptions = { duration: 1000 }\n  ): Promise<void> {\n    return new Promise((resolve) => {\n      if (!this.viewer.animate) {\n        console.warn('Animation not available in fallback mode');\n        resolve();\n        return;\n      }\n\n      try {\n        this.viewer.animate({\n          camera: targetPosition,\n          duration: options.duration,\n          easing: options.easing || 'ease'\n        });\n\n        setTimeout(resolve, options.duration);\n      } catch (error) {\n        console.error('Camera animation failed:', error);\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Animate molecular properties\n   */\n  animateMolecule(\n    properties: Record<string, any>,\n    options: AnimationOptions = { duration: 1000 }\n  ): Promise<void> {\n    return new Promise((resolve) => {\n      if (!this.viewer.animate) {\n        console.warn('Animation not available in fallback mode');\n        resolve();\n        return;\n      }\n\n      try {\n        this.viewer.animate({\n          ...properties,\n          duration: options.duration,\n          easing: options.easing || 'ease'\n        });\n\n        setTimeout(resolve, options.duration);\n      } catch (error) {\n        console.error('Molecule animation failed:', error);\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Export scene as image or animation\n   */\n  async exportScene(options: ExportOptions): Promise<string | Blob> {\n    if (!this.viewer) {\n      throw new Error('Viewer not initialized');\n    }\n\n    switch (options.format) {\n      case 'png':\n        return this.exportPNG(options);\n      case 'webm':\n        return this.exportWebM(options);\n      case 'pdb':\n      case 'sdf':\n      case 'mol2':\n        return this.exportMoleculeData(options.format);\n      default:\n        throw new Error(`Unsupported export format: ${options.format}`);\n    }\n  }\n\n  /**\n   * Add event listener for molecular interactions\n   */\n  addEventListener(event: string, handler: (event: InteractionEvent) => void): void {\n    if (!this.eventHandlers.has(event)) {\n      this.eventHandlers.set(event, []);\n    }\n    this.eventHandlers.get(event)!.push(handler);\n  }\n\n  /**\n   * Remove event listener\n   */\n  removeEventListener(event: string, handler: (event: InteractionEvent) => void): void {\n    const handlers = this.eventHandlers.get(event);\n    if (handlers) {\n      const index = handlers.indexOf(handler);\n      if (index > -1) {\n        handlers.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Center and fit all molecules in view\n   */\n  zoomToFit(): void {\n    if (this.viewer.zoomTo) {\n      this.viewer.zoomTo();\n      this.render();\n    }\n  }\n\n  /**\n   * Set camera position\n   */\n  setCameraPosition(position: { x: number; y: number; z: number }): void {\n    if (this.viewer.setCameraPosition) {\n      this.viewer.setCameraPosition(position);\n      this.render();\n    }\n  }\n\n  /**\n   * Get current camera position\n   */\n  getCameraPosition(): { x: number; y: number; z: number } {\n    if (this.viewer.getCameraPosition) {\n      return this.viewer.getCameraPosition();\n    }\n    return { x: 0, y: 0, z: 50 };\n  }\n\n  /**\n   * Clear all molecules from scene\n   */\n  clear(): void {\n    this.molecules.clear();\n    if (this.viewer.removeAllModels) {\n      this.viewer.removeAllModels();\n      this.render();\n    }\n  }\n\n  /**\n   * Render the scene\n   */\n  render(): void {\n    if (this.viewer.render) {\n      this.viewer.render();\n    }\n  }\n\n  /**\n   * Resize viewer\n   */\n  resize(width?: number, height?: number): void {\n    if (width) this.config.width = width;\n    if (height) this.config.height = height;\n\n    if (this.viewer.resize) {\n      this.viewer.resize();\n    }\n  }\n\n  /**\n   * Parse molecule data string into structured format\n   */\n  private parseMoleculeData(data: string, format: string): Mol3DMolecule {\n    const atoms: Mol3DAtom[] = [];\n    \n    try {\n      switch (format.toLowerCase()) {\n        case 'pdb':\n          return this.parsePDB(data);\n        case 'sdf':\n        case 'mol':\n          return this.parseSDF(data);\n        case 'xyz':\n          return this.parseXYZ(data);\n        default:\n          console.warn(`Unsupported format: ${format}`);\n          break;\n      }\n    } catch (error) {\n      console.error('Failed to parse molecule data:', error);\n    }\n\n    return {\n      atoms,\n      format: format as any,\n      data\n    };\n  }\n\n  /**\n   * Parse PDB format\n   */\n  private parsePDB(data: string): Mol3DMolecule {\n    const atoms: Mol3DAtom[] = [];\n    const lines = data.split('\\n');\n\n    for (const line of lines) {\n      if (line.startsWith('ATOM') || line.startsWith('HETATM')) {\n        const atom: Mol3DAtom = {\n          elem: line.substring(76, 78).trim() || line.substring(12, 16).trim().charAt(0),\n          x: parseFloat(line.substring(30, 38)),\n          y: parseFloat(line.substring(38, 46)),\n          z: parseFloat(line.substring(46, 54)),\n          serial: parseInt(line.substring(6, 11)),\n          atom: line.substring(12, 16).trim(),\n          resn: line.substring(17, 20).trim(),\n          chain: line.substring(21, 22),\n          resi: parseInt(line.substring(22, 26)),\n          b: parseFloat(line.substring(60, 66)),\n          pdbline: line\n        };\n        atoms.push(atom);\n      }\n    }\n\n    return {\n      atoms,\n      format: 'pdb',\n      data\n    };\n  }\n\n  /**\n   * Parse SDF format\n   */\n  private parseSDF(data: string): Mol3DMolecule {\n    const atoms: Mol3DAtom[] = [];\n    const lines = data.split('\\n');\n    \n    // Find the counts line (typically line 3)\n    const countsLine = lines[3];\n    if (countsLine) {\n      const atomCount = parseInt(countsLine.substring(0, 3));\n      \n      // Parse atom block (starts at line 4)\n      for (let i = 4; i < 4 + atomCount && i < lines.length; i++) {\n        const line = lines[i];\n        const parts = line.trim().split(/\\s+/);\n        \n        if (parts.length >= 4) {\n          atoms.push({\n            elem: parts[3],\n            x: parseFloat(parts[0]),\n            y: parseFloat(parts[1]),\n            z: parseFloat(parts[2])\n          });\n        }\n      }\n    }\n\n    return {\n      atoms,\n      format: 'sdf',\n      data\n    };\n  }\n\n  /**\n   * Parse XYZ format\n   */\n  private parseXYZ(data: string): Mol3DMolecule {\n    const atoms: Mol3DAtom[] = [];\n    const lines = data.split('\\n');\n    \n    if (lines.length < 2) return { atoms, format: 'xyz', data };\n    \n    const atomCount = parseInt(lines[0]);\n    \n    // Parse atoms (start from line 2)\n    for (let i = 2; i < 2 + atomCount && i < lines.length; i++) {\n      const parts = lines[i].trim().split(/\\s+/);\n      \n      if (parts.length >= 4) {\n        atoms.push({\n          elem: parts[0],\n          x: parseFloat(parts[1]),\n          y: parseFloat(parts[2]),\n          z: parseFloat(parts[3])\n        });\n      }\n    }\n\n    return {\n      atoms,\n      format: 'xyz',\n      data\n    };\n  }\n\n  /**\n   * Setup event handlers for viewer interactions\n   */\n  private setupEventHandlers(): void {\n    if (!this.viewer.setClickCallback) return;\n\n    // Click events\n    this.viewer.setClickCallback((event: any) => {\n      const handlers = this.eventHandlers.get('click');\n      if (handlers) {\n        const interactionEvent: InteractionEvent = {\n          type: 'click',\n          atom: event.atom,\n          position: event.position || { x: 0, y: 0, z: 0 },\n          screenPosition: event.screenPosition || { x: 0, y: 0 }\n        };\n        handlers.forEach(handler => handler(interactionEvent));\n      }\n    });\n\n    // Hover events\n    this.viewer.setHoverCallback((event: any) => {\n      const handlers = this.eventHandlers.get('hover');\n      if (handlers) {\n        const interactionEvent: InteractionEvent = {\n          type: 'hover',\n          atom: event.atom,\n          position: event.position || { x: 0, y: 0, z: 0 },\n          screenPosition: event.screenPosition || { x: 0, y: 0 }\n        };\n        handlers.forEach(handler => handler(interactionEvent));\n      }\n    });\n  }\n\n  /**\n   * Export as PNG image\n   */\n  private exportPNG(options: ExportOptions): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (!this.viewer.pngURI) {\n        reject(new Error('PNG export not available in fallback mode'));\n        return;\n      }\n\n      try {\n        const uri = this.viewer.pngURI({\n          width: options.width || this.config.width,\n          height: options.height || this.config.height\n        });\n        resolve(uri);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Export as WebM animation\n   */\n  private exportWebM(options: ExportOptions): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n      // WebM export would require additional implementation\n      reject(new Error('WebM export not yet implemented'));\n    });\n  }\n\n  /**\n   * Export molecule data in specified format\n   */\n  private exportMoleculeData(format: string): string {\n    const molecules = Array.from(this.molecules.values());\n    if (molecules.length === 0) {\n      return '';\n    }\n\n    // Return the first molecule's data or convert to requested format\n    const molecule = molecules[0];\n    return molecule.data || this.convertMoleculeFormat(molecule, format);\n  }\n\n  /**\n   * Convert molecule to different format\n   */\n  private convertMoleculeFormat(molecule: Mol3DMolecule, targetFormat: string): string {\n    // Basic format conversion (would need more sophisticated implementation)\n    switch (targetFormat.toLowerCase()) {\n      case 'xyz':\n        return this.moleculeToXYZ(molecule);\n      case 'pdb':\n        return this.moleculeToPDB(molecule);\n      default:\n        return molecule.data || '';\n    }\n  }\n\n  /**\n   * Convert molecule to XYZ format\n   */\n  private moleculeToXYZ(molecule: Mol3DMolecule): string {\n    const lines = [\n      molecule.atoms.length.toString(),\n      molecule.title || 'Generated by CREB'\n    ];\n\n    molecule.atoms.forEach(atom => {\n      lines.push(`${atom.elem} ${atom.x.toFixed(6)} ${atom.y.toFixed(6)} ${atom.z.toFixed(6)}`);\n    });\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Convert molecule to PDB format\n   */\n  private moleculeToPDB(molecule: Mol3DMolecule): string {\n    const lines: string[] = [];\n\n    molecule.atoms.forEach((atom, index) => {\n      const line = [\n        'ATOM  ',\n        (index + 1).toString().padStart(5),\n        '  ',\n        atom.atom?.padEnd(4) || atom.elem.padEnd(4),\n        ' ',\n        'UNK',\n        ' ',\n        'A',\n        '   1    ',\n        atom.x.toFixed(3).padStart(8),\n        atom.y.toFixed(3).padStart(8),\n        atom.z.toFixed(3).padStart(8),\n        '  1.00',\n        '  0.00',\n        '          ',\n        atom.elem.padStart(2)\n      ].join('');\n      \n      lines.push(line);\n    });\n\n    lines.push('END');\n    return lines.join('\\n');\n  }\n\n  /**\n   * Create fallback viewer for environments where 3Dmol.js is not available\n   */\n  private createFallbackViewer(): any {\n    return {\n      addModel: () => console.warn('3Dmol.js not available - addModel disabled'),\n      removeAllModels: () => console.warn('3Dmol.js not available - removeAllModels disabled'),\n      setStyle: () => console.warn('3Dmol.js not available - setStyle disabled'),\n      addSurface: () => console.warn('3Dmol.js not available - addSurface disabled'),\n      render: () => console.warn('3Dmol.js not available - render disabled'),\n      zoomTo: () => console.warn('3Dmol.js not available - zoomTo disabled'),\n      resize: () => console.warn('3Dmol.js not available - resize disabled'),\n      animate: () => console.warn('3Dmol.js not available - animate disabled'),\n      pngURI: () => { throw new Error('PNG export not available without 3Dmol.js'); }\n    };\n  }\n\n  /**\n   * Cleanup resources\n   */\n  dispose(): void {\n    this.clear();\n    this.eventHandlers.clear();\n    \n    if (this.viewer && this.viewer.removeAllModels) {\n      this.viewer.removeAllModels();\n    }\n    \n    this.initialized = false;\n  }\n}\n\n/**\n * Static utility methods for 3Dmol operations\n */\nexport class Mol3DUtils {\n  /**\n   * Convert CREB molecule format to 3Dmol-compatible format\n   */\n  static crebToMol3D(crebMolecule: any): Mol3DMolecule {\n    const atoms: Mol3DAtom[] = [];\n\n    if (crebMolecule.atoms) {\n      crebMolecule.atoms.forEach((atom: any, index: number) => {\n        atoms.push({\n          elem: atom.element || atom.symbol || 'C',\n          x: atom.x || atom.position?.x || 0,\n          y: atom.y || atom.position?.y || 0,\n          z: atom.z || atom.position?.z || 0,\n          serial: index + 1\n        });\n      });\n    } else if (crebMolecule.elements) {\n      // Generate 3D coordinates for elements-only molecules\n      crebMolecule.elements.forEach((element: string, index: number) => {\n        atoms.push({\n          elem: element,\n          x: Math.random() * 10 - 5,\n          y: Math.random() * 10 - 5,\n          z: Math.random() * 10 - 5,\n          serial: index + 1\n        });\n      });\n    }\n\n    return {\n      atoms,\n      title: crebMolecule.name || crebMolecule.formula || 'Unknown'\n    };\n  }\n\n  /**\n   * Get predefined molecular styles\n   */\n  static getPresetStyles(): Record<string, Mol3DStyle> {\n    return {\n      'ball-and-stick': {\n        stick: { radius: 0.2 },\n        sphere: { scale: 0.3 }\n      },\n      'space-filling': {\n        sphere: { scale: 1.0 }\n      },\n      'wireframe': {\n        line: { linewidth: 2 }\n      },\n      'cartoon': {\n        cartoon: { style: 'trace' }\n      },\n      'surface': {\n        surface: { opacity: 0.8 }\n      }\n    };\n  }\n\n  /**\n   * Generate molecular surfaces\n   */\n  static getSurfaceTypes(): Record<string, string> {\n    return {\n      'van-der-waals': 'VDW',\n      'solvent-accessible': 'SAS',\n      'molecular': 'MS',\n      'solvent-excluded': 'SES'\n    };\n  }\n\n  /**\n   * Get common color schemes\n   */\n  static getColorSchemes(): Record<string, string> {\n    return {\n      'element': 'default',\n      'amino': 'amino',\n      'secondary': 'ss',\n      'residue': 'residue',\n      'chain': 'chain',\n      'temperature': 'b',\n      'hydrophobic': 'hydrophobic'\n    };\n  }\n}\n\nexport default Mol3DWrapper;\n","/**\n * PubChem Integration Module for CREB Molecular Visualization\n * Connects PubChem database with RDKit.js and 3Dmol.js visualization pipeline\n */\n\nimport { Compound } from '../../packages/pubchem-js/src/core/Compound';\n\nexport interface PubChemCompound {\n  cid: number;\n  name: string;\n  molecularFormula: string;\n  molecularWeight: number;\n  smiles?: string;\n  inchi?: string;\n  inchiKey?: string;\n  synonyms?: string[];\n  properties?: Record<string, any>;\n}\n\nexport interface CompoundSearchOptions {\n  searchType: 'name' | 'cid' | 'smiles' | 'formula' | 'inchi';\n  limit?: number;\n  maxResults?: number; // Alias for limit\n  includeProperties?: boolean;\n  includeSynonyms?: boolean;\n  include3D?: boolean;\n}\n\nexport interface PubChemSearchResult {\n  success: boolean;\n  compounds: PubChemCompound[];\n  totalFound: number;\n  source: 'pubchem';\n  timestamp: Date;\n  error?: string;\n}\n\nexport interface PubChemMolecularData {\n  compound: PubChemCompound;\n  structure2D?: string; // SDF format\n  structure3D?: string; // SDF format with 3D coordinates\n  conformers?: Array<{\n    id: number;\n    energy: number;\n    coordinates: Array<{ x: number; y: number; z: number }>;\n  }>;\n}\n\n/**\n * PubChem Integration Class\n * Provides unified access to PubChem database for molecular visualization\n */\nexport class PubChemIntegration {\n  private baseUrl = 'https://pubchem.ncbi.nlm.nih.gov/rest/pug';\n  private requestDelay = 200; // Rate limiting: 5 requests per second\n  private lastRequestTime = 0;\n\n  constructor() {\n    // Initialize with default settings\n  }\n\n  /**\n   * Search for compounds by various criteria\n   */\n  async searchCompounds(\n    query: string, \n    options: CompoundSearchOptions = { searchType: 'name' }\n  ): Promise<PubChemSearchResult> {\n    try {\n      await this.enforceRateLimit();\n\n      let searchUrl = '';\n      const limit = options.limit || options.maxResults || 10;\n\n      switch (options.searchType) {\n        case 'name':\n          searchUrl = `${this.baseUrl}/compound/name/${encodeURIComponent(query)}/cids/JSON?cids_type=flat`;\n          break;\n        case 'cid':\n          searchUrl = `${this.baseUrl}/compound/cid/${query}/cids/JSON`;\n          break;\n        case 'smiles':\n          searchUrl = `${this.baseUrl}/compound/smiles/${encodeURIComponent(query)}/cids/JSON`;\n          break;\n        case 'formula':\n          searchUrl = `${this.baseUrl}/compound/formula/${encodeURIComponent(query)}/cids/JSON`;\n          break;\n        case 'inchi':\n          searchUrl = `${this.baseUrl}/compound/inchi/${encodeURIComponent(query)}/cids/JSON`;\n          break;\n      }\n\n      const response = await fetch(searchUrl);\n      if (!response.ok) {\n        throw new Error(`PubChem search failed: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const cids = data.IdentifierList?.CID || [];\n      \n      if (cids.length === 0) {\n        return {\n          success: true,\n          compounds: [],\n          totalFound: 0,\n          source: 'pubchem',\n          timestamp: new Date()\n        };\n      }\n\n      // Get detailed compound information for found CIDs\n      const limitedCids = cids.slice(0, limit);\n      const compounds = await this.getCompoundDetails(limitedCids, options);\n\n      return {\n        success: true,\n        compounds,\n        totalFound: cids.length,\n        source: 'pubchem',\n        timestamp: new Date()\n      };\n\n    } catch (error) {\n      return {\n        success: false,\n        compounds: [],\n        totalFound: 0,\n        source: 'pubchem',\n        timestamp: new Date(),\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  /**\n   * Get detailed compound information by CID\n   */\n  async getCompoundByCid(cid: number, options: CompoundSearchOptions = { searchType: 'cid' }): Promise<PubChemCompound | null> {\n    try {\n      await this.enforceRateLimit();\n\n      const propertiesUrl = `${this.baseUrl}/compound/cid/${cid}/property/MolecularFormula,MolecularWeight,CanonicalSMILES,InChI,InChIKey/JSON`;\n      \n      const response = await fetch(propertiesUrl);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch compound ${cid}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const properties = data.PropertyTable?.Properties?.[0];\n\n      if (!properties) {\n        return null;\n      }\n\n      const compound: PubChemCompound = {\n        cid,\n        name: `CID ${cid}`, // Will be updated if synonyms are requested\n        molecularFormula: properties.MolecularFormula || '',\n        molecularWeight: properties.MolecularWeight || 0,\n        smiles: properties.CanonicalSMILES || '',\n        inchi: properties.InChI || '',\n        inchiKey: properties.InChIKey || '',\n        properties: properties\n      };\n\n      // Get synonyms if requested\n      if (options.includeSynonyms) {\n        const synonyms = await this.getCompoundSynonyms(cid);\n        if (synonyms.length > 0) {\n          compound.name = synonyms[0]; // Use first synonym as primary name\n          compound.synonyms = synonyms;\n        }\n      }\n\n      return compound;\n\n    } catch (error) {\n      console.error(`Error fetching compound ${cid}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Get molecular structure data (2D/3D SDF)\n   */\n  async getMolecularData(cid: number, include3D = false): Promise<PubChemMolecularData | null> {\n    try {\n      const compound = await this.getCompoundByCid(cid, { searchType: 'cid', includeSynonyms: true });\n      if (!compound) {\n        return null;\n      }\n\n      await this.enforceRateLimit();\n\n      // Get 2D SDF structure\n      const sdf2DUrl = `${this.baseUrl}/compound/cid/${cid}/SDF`;\n      const sdf2DResponse = await fetch(sdf2DUrl);\n      const structure2D = sdf2DResponse.ok ? await sdf2DResponse.text() : undefined;\n\n      let structure3D: string | undefined;\n      let conformers: Array<{ id: number; energy: number; coordinates: Array<{ x: number; y: number; z: number }> }> | undefined;\n\n      if (include3D) {\n        await this.enforceRateLimit();\n        \n        // Get 3D SDF structure\n        const sdf3DUrl = `${this.baseUrl}/compound/cid/${cid}/SDF?record_type=3d`;\n        const sdf3DResponse = await fetch(sdf3DUrl);\n        structure3D = sdf3DResponse.ok ? await sdf3DResponse.text() : undefined;\n\n        // Get conformer data if available\n        await this.enforceRateLimit();\n        try {\n          const conformerUrl = `${this.baseUrl}/compound/cid/${cid}/conformers/JSON`;\n          const conformerResponse = await fetch(conformerUrl);\n          if (conformerResponse.ok) {\n            const conformerData = await conformerResponse.json();\n            conformers = this.parseConformerData(conformerData);\n          }\n        } catch (error) {\n          // Conformer data not available for all compounds\n          console.warn(`Conformer data not available for CID ${cid}`);\n        }\n      }\n\n      return {\n        compound,\n        structure2D,\n        structure3D,\n        conformers\n      };\n\n    } catch (error) {\n      console.error(`Error fetching molecular data for CID ${cid}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Search and get the best matching compound with full molecular data\n   */\n  async searchAndGetMolecularData(\n    query: string, \n    options: CompoundSearchOptions = { searchType: 'name' }\n  ): Promise<PubChemMolecularData | null> {\n    const searchResult = await this.searchCompounds(query, { ...options, limit: 1 });\n    \n    if (!searchResult.success || searchResult.compounds.length === 0) {\n      return null;\n    }\n\n    const compound = searchResult.compounds[0];\n    return this.getMolecularData(compound.cid, options.include3D);\n  }\n\n  /**\n   * Get compound synonyms\n   */\n  private async getCompoundSynonyms(cid: number): Promise<string[]> {\n    try {\n      await this.enforceRateLimit();\n\n      const synonymsUrl = `${this.baseUrl}/compound/cid/${cid}/synonyms/JSON`;\n      const response = await fetch(synonymsUrl);\n      \n      if (!response.ok) {\n        return [];\n      }\n\n      const data = await response.json();\n      return data.InformationList?.Information?.[0]?.Synonym || [];\n\n    } catch (error) {\n      return [];\n    }\n  }\n\n  /**\n   * Get detailed compound information for multiple CIDs\n   */\n  private async getCompoundDetails(\n    cids: number[], \n    options: CompoundSearchOptions\n  ): Promise<PubChemCompound[]> {\n    const compounds: PubChemCompound[] = [];\n    \n    // Process in batches to respect rate limits\n    const batchSize = 5;\n    for (let i = 0; i < cids.length; i += batchSize) {\n      const batch = cids.slice(i, i + batchSize);\n      const batchPromises = batch.map(cid => this.getCompoundByCid(cid, options));\n      \n      const batchResults = await Promise.all(batchPromises);\n      compounds.push(...batchResults.filter(compound => compound !== null) as PubChemCompound[]);\n      \n      // Add delay between batches\n      if (i + batchSize < cids.length) {\n        await new Promise(resolve => setTimeout(resolve, this.requestDelay * batch.length));\n      }\n    }\n\n    return compounds;\n  }\n\n  /**\n   * Parse conformer data from PubChem response\n   */\n  private parseConformerData(conformerData: any): Array<{ id: number; energy: number; coordinates: Array<{ x: number; y: number; z: number }> }> {\n    // Implementation would parse the conformer JSON structure\n    // This is a simplified version\n    return [];\n  }\n\n  /**\n   * Enforce rate limiting for PubChem API\n   */\n  private async enforceRateLimit(): Promise<void> {\n    const now = Date.now();\n    const timeSinceLastRequest = now - this.lastRequestTime;\n    \n    if (timeSinceLastRequest < this.requestDelay) {\n      const waitTime = this.requestDelay - timeSinceLastRequest;\n      await new Promise(resolve => setTimeout(resolve, waitTime));\n    }\n    \n    this.lastRequestTime = Date.now();\n  }\n\n  /**\n   * Convert PubChem compound to SMILES for RDKit processing\n   */\n  getCompoundSMILES(compound: PubChemCompound): string | null {\n    return compound.smiles || null;\n  }\n\n  /**\n   * Get compound 3D structure in SDF format for 3Dmol.js\n   */\n  async getCompound3DSDF(cid: number): Promise<string | null> {\n    const molecularData = await this.getMolecularData(cid, true);\n    return molecularData?.structure3D || molecularData?.structure2D || null;\n  }\n\n  /**\n   * Validate if PubChem API is accessible\n   */\n  async validateConnection(): Promise<boolean> {\n    try {\n      await this.enforceRateLimit();\n      \n      const testUrl = `${this.baseUrl}/compound/cid/2244/property/MolecularFormula/JSON`; // Aspirin\n      const response = await fetch(testUrl);\n      return response.ok;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n\nexport default PubChemIntegration;\n","/**\n * Reaction Animation System\n * Implements animated bond formation/breaking visualization for chemical reactions\n * Part of CREB-JS v1.7.0 - Complete Reaction Animation Feature\n * \n * Integrates with:\n * - RDKit.js for molecular structure processing and SMILES parsing\n * - 3Dmol.js for advanced 3D visualization and animation\n * - PubChem API for compound data retrieval\n */\n\nimport { EnergyProfile, EnergyProfilePoint, BondChange, TransitionState } from '../thermodynamics/types';\nimport { BalancedEquation } from '../types';\nimport { RDKitWrapper, RDKitMolecule } from './RDKitWrapper';\nimport { Mol3DWrapper } from './Mol3DWrapper';\nimport { PubChemIntegration } from './PubChemIntegration';\n\nexport interface AnimationFrame {\n  /** Frame number in animation sequence */\n  frameNumber: number;\n  /** Time in animation (0-1, where 0 = start, 1 = end) */\n  time: number;\n  /** Molecular structure at this frame */\n  structure: MolecularFrame;\n  /** Energy at this frame */\n  energy: number;\n  /** Bond states at this frame */\n  bonds: AnimatedBond[];\n  /** Atoms positions at this frame */\n  atoms: AnimatedAtom[];\n}\n\nexport interface MolecularFrame {\n  /** Atoms in the molecular system */\n  atoms: Array<{\n    element: string;\n    position: { x: number; y: number; z: number };\n    charge?: number;\n    radius?: number;\n  }>;\n  /** Bonds between atoms */\n  bonds: Array<{\n    atom1: number;\n    atom2: number;\n    order: number;\n    length: number;\n    isForming?: boolean;\n    isBreaking?: boolean;\n  }>;\n  /** Overall molecular properties */\n  properties: {\n    totalEnergy: number;\n    dipoleMoment?: number;\n    charge: number;\n  };\n}\n\nexport interface AnimatedBond {\n  /** Indices of connected atoms */\n  atom1: number;\n  atom2: number;\n  /** Current bond order (can be fractional during animation) */\n  order: number;\n  /** Target bond order */\n  targetOrder: number;\n  /** Animation state */\n  state: 'forming' | 'breaking' | 'stable' | 'transitioning';\n  /** Visual properties */\n  color: string;\n  opacity: number;\n  dashPattern?: number[];\n}\n\nexport interface AnimatedAtom {\n  /** Atomic element */\n  element: string;\n  /** Current position */\n  position: { x: number; y: number; z: number };\n  /** Target position */\n  targetPosition: { x: number; y: number; z: number };\n  /** Animation state */\n  state: 'moving' | 'stationary' | 'vibrating';\n  /** Visual properties */\n  color: string;\n  radius: number;\n  opacity: number;\n}\n\nexport interface ReactionAnimationConfig {\n  /** Total animation duration in milliseconds */\n  duration: number;\n  /** Frames per second */\n  fps: number;\n  /** Animation easing function */\n  easing: 'linear' | 'ease-in' | 'ease-out' | 'ease-in-out';\n  /** Show energy profile alongside animation */\n  showEnergyProfile: boolean;\n  /** Show bond order changes */\n  showBondOrders: boolean;\n  /** Show atomic charges */\n  showCharges: boolean;\n  /** Animation style */\n  style: 'smooth' | 'stepped' | 'spring';\n  /** Color scheme for bonds */\n  bondColorScheme: 'default' | 'energy-based' | 'order-based';\n}\n\nexport interface ReactionStep {\n  /** Step number in reaction sequence */\n  stepNumber: number;\n  /** Description of what happens in this step */\n  description: string;\n  /** Energy change in this step */\n  energyChange: number;\n  /** Bond changes occurring */\n  bondChanges: BondChange[];\n  /** Duration of this step (fraction of total animation) */\n  duration: number;\n  /** Intermediate structures */\n  intermediates?: MolecularFrame[];\n}\n\n/**\n * Main class for creating and managing reaction animations\n * Integrates RDKit.js for molecular processing and 3Dmol.js for 3D visualization\n */\nexport class ReactionAnimator {\n  private config: ReactionAnimationConfig;\n  private currentAnimation: AnimationFrame[] = [];\n  private isPlaying: boolean = false;\n  private currentFrame: number = 0;\n  private animationId: NodeJS.Timeout | null = null;\n  private canvas: HTMLCanvasElement | null = null;\n  private context: CanvasRenderingContext2D | null = null;\n  private energyProfile: EnergyProfile | null = null;\n  \n  // Integration with CREB molecular visualization libraries\n  private rdkitWrapper: RDKitWrapper;\n  private mol3dWrapper: Mol3DWrapper | null = null;\n  private viewer3D: any = null; // 3Dmol viewer instance\n  private moleculeCache: Map<string, RDKitMolecule> = new Map();\n\n  constructor(config: Partial<ReactionAnimationConfig> = {}) {\n    this.config = {\n      duration: 5000,\n      fps: 30,\n      easing: 'ease-in-out',\n      showEnergyProfile: true,\n      showBondOrders: true,\n      showCharges: false,\n      style: 'smooth',\n      bondColorScheme: 'energy-based',\n      ...config\n    };\n\n    // Initialize RDKit wrapper for molecular processing\n    this.rdkitWrapper = new RDKitWrapper({\n      addCoords: true,\n      sanitize: true,\n      useCoordGen: true,\n      width: 400,\n      height: 300\n    });\n  }\n\n  /**\n   * Initialize 3D visualization system\n   */\n  async initialize3DViewer(container: HTMLElement): Promise<void> {\n    try {\n      this.mol3dWrapper = new Mol3DWrapper(container, {\n        backgroundColor: 'white',\n        width: container.clientWidth || 600,\n        height: container.clientHeight || 400,\n        antialias: true,\n        alpha: true,\n        preserveDrawingBuffer: false,\n        premultipliedAlpha: false,\n        camera: {\n          fov: 45,\n          near: 0.1,\n          far: 1000,\n          position: { x: 0, y: 0, z: 10 },\n          target: { x: 0, y: 0, z: 0 },\n          up: { x: 0, y: 1, z: 0 }\n        },\n        lighting: {\n          ambient: '#404040',\n          directional: [{\n            color: '#ffffff',\n            intensity: 1.0,\n            position: { x: 1, y: 1, z: 1 }\n          }]\n        },\n        fog: {\n          enabled: false,\n          color: '#ffffff',\n          near: 10,\n          far: 100\n        }\n      });\n\n      await this.mol3dWrapper.initialize();\n      this.viewer3D = this.mol3dWrapper.getViewer();\n      console.log('✅ 3D viewer initialized for reaction animation');\n    } catch (error) {\n      console.error('❌ Failed to initialize 3D viewer:', error);\n      throw new Error(`3D viewer initialization failed: ${error}`);\n    }\n  }\n\n  /**\n   * Parse molecule from SMILES using RDKit\n   */\n  async parseSMILES(smiles: string): Promise<any> {\n    if (!this.rdkitWrapper) {\n      throw new Error('RDKit wrapper not initialized. Call initializeRDKit() first.');\n    }\n\n    try {\n      const mol = await this.rdkitWrapper.parseSMILES(smiles);\n      if (!mol) {\n        throw new Error(`Failed to parse SMILES: ${smiles}`);\n      }\n      return mol;\n    } catch (error) {\n      console.error('❌ SMILES parsing failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Generate 3D coordinates for a molecule using PubChem SDF data\n   */\n  async generate3DCoordinates(molecule: any): Promise<any> {\n    if (!this.rdkitWrapper) {\n      throw new Error('RDKit wrapper not initialized');\n    }\n\n    try {\n      // If molecule has a CID, get real 3D structure from PubChem\n      if (molecule.cid) {\n        console.log(`🔬 Fetching real 3D structure from PubChem for CID: ${molecule.cid}`);\n        const pubchem = new PubChemIntegration();\n        const sdf3D = await pubchem.getCompound3DSDF(molecule.cid);\n        \n        if (sdf3D) {\n          console.log('✅ Retrieved real 3D SDF structure from PubChem');\n          return { molblock: sdf3D, format: 'sdf', source: 'PubChem_3D' };\n        }\n      }\n\n      // If molecule has SMILES, try to get PubChem data by name/SMILES lookup\n      if (molecule.smiles || molecule.name) {\n        console.log(`🔍 Looking up ${molecule.name || molecule.smiles} in PubChem`);\n        const pubchem = new PubChemIntegration();\n        \n        try {\n          const searchTerm = molecule.name || molecule.smiles;\n          const searchResult = await pubchem.searchCompounds(searchTerm, { searchType: 'name', limit: 1 });\n          \n          if (searchResult.success && searchResult.compounds.length > 0) {\n            const compound = searchResult.compounds[0];\n            const sdf3D = await pubchem.getCompound3DSDF(compound.cid);\n            if (sdf3D) {\n              console.log(`✅ Found PubChem 3D structure for ${searchTerm} (CID: ${compound.cid})`);\n              return { molblock: sdf3D, format: 'sdf', source: 'PubChem_3D' };\n            }\n          }\n        } catch (searchError) {\n          console.warn(`⚠️ PubChem lookup failed for ${molecule.name || molecule.smiles}:`, searchError);\n        }\n      }\n\n      // Fallback: use RDKit for basic 2D structure (but warn about it)\n      console.warn('⚠️ Using 2D fallback - no PubChem 3D data available');\n      return { molblock: molecule.molblock || '', format: 'mol', source: 'RDKit_2D' };\n      \n    } catch (error) {\n      console.error('❌ 3D coordinate generation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Add molecule to 3D scene for animation\n   */\n  async addMoleculeToScene(smiles: string, moleculeId: string): Promise<void> {\n    if (!this.mol3dWrapper) {\n      throw new Error('3D viewer not initialized. Call initialize3DViewer() first.');\n    }\n\n    try {\n      // Parse SMILES with RDKit\n      const molecule = await this.parseSMILES(smiles);\n      \n      // Generate 3D coordinates using PubChem integration\n      const mol3D = await this.generate3DCoordinates(molecule);\n      \n      // Get molecular data\n      let molData: string;\n      let format: 'sdf' | 'pdb' | 'mol2' = 'sdf';\n      \n      if (mol3D && mol3D.molblock) {\n        molData = mol3D.molblock;\n        format = mol3D.format === 'sdf' ? 'sdf' : 'pdb'; // Use PDB as fallback format\n        console.log(`🔬 Using ${mol3D.source} data for ${moleculeId}`);\n      } else {\n        // Fallback: create simple MOL format from SMILES (convert to PDB format)\n        console.warn(`⚠️ No 3D data available for ${smiles}, using 2D fallback`);\n        molData = await this.createMolBlockFromSMILES(smiles);\n        format = 'pdb';\n      }\n      \n      // Add to 3D scene with correct format\n      await this.mol3dWrapper.addMolecule(moleculeId, molData, format);\n      \n      // Apply default styling (fix setStyle signature)\n      this.mol3dWrapper.setStyle({\n        stick: { radius: 0.15 },\n        sphere: { scale: 0.25 }\n      });\n      \n      console.log(`✅ Added molecule ${moleculeId} to 3D scene`);\n    } catch (error) {\n      console.error(`❌ Failed to add molecule ${moleculeId} to scene:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create a simple MOL block from SMILES (fallback method)\n   */\n  private async createMolBlockFromSMILES(smiles: string): Promise<string> {\n    // This is a simplified MOL block for basic visualization\n    // In a real implementation, this would use RDKit's molblock generation\n    return `\n  RDKit          2D\n\n  1  0  0  0  0  0  0  0  0  0999 V2000\n    0.0000    0.0000    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\nM  END\n$$$$\n`;\n  }\n\n  /**\n   * Animate molecular transformation using real 3D structures\n   */\n  async animateMolecularTransformation(\n    reactantSMILES: string[], \n    productSMILES: string[], \n    duration: number = 2000\n  ): Promise<void> {\n    if (!this.mol3dWrapper) {\n      throw new Error('3D viewer not initialized');\n    }\n\n    try {\n      console.log('🔄 Starting molecular transformation animation...');\n      \n      // Clear existing molecules\n      this.mol3dWrapper.clear();\n      \n      // Add reactants\n      for (let i = 0; i < reactantSMILES.length; i++) {\n        await this.addMoleculeToScene(reactantSMILES[i], `reactant_${i}`);\n        \n        // Position reactants on the left (styling applied in addMoleculeToScene)\n      }\n      \n      // Render initial state\n      this.mol3dWrapper.render();\n      \n      // Wait for half duration\n      await new Promise(resolve => setTimeout(resolve, duration / 2));\n      \n      // Transition: fade out reactants, fade in products\n      console.log('🔄 Transitioning to products...');\n      \n      // Clear and add products\n      this.mol3dWrapper.clear();\n      \n      for (let i = 0; i < productSMILES.length; i++) {\n        await this.addMoleculeToScene(productSMILES[i], `product_${i}`);\n        \n        // Products will have green styling applied in addMoleculeToScene\n      }\n      \n      // Final render\n      this.mol3dWrapper.render();\n      \n      console.log('✅ Molecular transformation animation complete');\n    } catch (error) {\n      console.error('❌ Molecular transformation animation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate and display molecular properties during animation\n   */\n  async showMolecularProperties(smiles: string): Promise<any> {\n    if (!this.rdkitWrapper) {\n      throw new Error('RDKit wrapper not initialized');\n    }\n\n    try {\n      // Use the correct method name from RDKitWrapper\n      const properties = await this.rdkitWrapper.calculateDescriptors(smiles);\n      \n      // Display properties in UI (can be customized)\n      console.log('📊 Molecular Properties:', {\n        formula: properties.formula,\n        molecularWeight: properties.molecularWeight,\n        logP: properties.logP,\n        tpsa: properties.tpsa,\n        rotatableBonds: properties.rotatableBonds,\n        hbd: properties.hbd,\n        hba: properties.hba,\n        aromaticRings: properties.aromaticRings,\n        aliphaticRings: properties.aliphaticRings\n      });\n      \n      return properties;\n    } catch (error) {\n      console.error('❌ Failed to calculate molecular properties:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create animation from balanced equation and energy profile\n   */\n  async createAnimationFromEquation(\n    equation: BalancedEquation,\n    energyProfile: EnergyProfile,\n    transitionStates?: TransitionState[]\n  ): Promise<AnimationFrame[]> {\n    this.energyProfile = energyProfile;\n    \n    // Parse reactants and products\n    const reactantStructures = await this.generateMolecularStructures(equation.reactants);\n    const productStructures = await this.generateMolecularStructures(equation.products);\n    \n    // Create transition path\n    const transitionPath = this.createTransitionPath(\n      reactantStructures,\n      productStructures,\n      energyProfile,\n      transitionStates\n    );\n    \n    // Generate animation frames\n    this.currentAnimation = this.generateAnimationFrames(transitionPath);\n    \n    return this.currentAnimation;\n  }\n\n  /**\n   * Create animation from custom molecular structures\n   */\n  createCustomAnimation(\n    reactants: MolecularFrame[],\n    products: MolecularFrame[],\n    bondChanges: BondChange[]\n  ): AnimationFrame[] {\n    const transitionPath = this.createCustomTransitionPath(reactants, products, bondChanges);\n    this.currentAnimation = this.generateAnimationFrames(transitionPath);\n    return this.currentAnimation;\n  }\n\n  /**\n   * Play the animation on a canvas\n   */\n  async playAnimation(canvas: HTMLCanvasElement, onFrameUpdate?: (frame: AnimationFrame) => void): Promise<void> {\n    if (this.currentAnimation.length === 0) {\n      throw new Error('No animation loaded. Call createAnimation first.');\n    }\n\n    this.canvas = canvas;\n    this.context = canvas.getContext('2d');\n    if (!this.context) {\n      throw new Error('Could not get 2D context from canvas');\n    }\n\n    this.isPlaying = true;\n    this.currentFrame = 0;\n\n    const frameInterval = 1000 / this.config.fps;\n    \n    return new Promise((resolve) => {\n      const animate = () => {\n        if (!this.isPlaying || this.currentFrame >= this.currentAnimation.length) {\n          this.isPlaying = false;\n          resolve();\n          return;\n        }\n\n        const frame = this.currentAnimation[this.currentFrame];\n        this.renderFrame(frame);\n        \n        if (onFrameUpdate) {\n          onFrameUpdate(frame);\n        }\n\n        this.currentFrame++;\n        this.animationId = setTimeout(animate, frameInterval);\n      };\n\n      animate();\n    });\n  }\n\n  /**\n   * Pause the animation\n   */\n  pauseAnimation(): void {\n    this.isPlaying = false;\n    if (this.animationId) {\n      clearTimeout(this.animationId);\n      this.animationId = null;\n    }\n  }\n\n  /**\n   * Resume the animation\n   */\n  resumeAnimation(): void {\n    if (!this.isPlaying && this.currentFrame < this.currentAnimation.length) {\n      this.isPlaying = true;\n      this.playAnimation(this.canvas!);\n    }\n  }\n\n  /**\n   * Reset animation to beginning\n   */\n  resetAnimation(): void {\n    this.pauseAnimation();\n    this.currentFrame = 0;\n  }\n\n  /**\n   * Export animation as video data\n   */\n  exportAnimation(format: 'gif' | 'mp4' | 'webm' = 'gif'): Promise<Blob> {\n    // Implementation would depend on the specific video encoding library\n    // For now, return a mock blob\n    return Promise.resolve(new Blob(['animation data'], { type: `video/${format}` }));\n  }\n\n  /**\n   * Generate molecular structures from species names\n   */\n  private async generateMolecularStructures(species: string[]): Promise<MolecularFrame[]> {\n    const structures: MolecularFrame[] = [];\n    \n    for (const molecule of species) {\n      const structure = await this.generateStructureFromName(molecule);\n      structures.push(structure);\n    }\n    \n    return structures;\n  }\n\n  /**\n   * Generate a molecular structure from a molecule name\n   */\n  private async generateStructureFromName(moleculeName: string): Promise<MolecularFrame> {\n    // This would integrate with molecular database or SMILES parser\n    // For now, return mock structures for common molecules\n    const mockStructures: Record<string, MolecularFrame> = {\n      'H2O': {\n        atoms: [\n          { element: 'O', position: { x: 0, y: 0, z: 0 }, charge: -0.34 },\n          { element: 'H', position: { x: 0.757, y: 0.587, z: 0 }, charge: 0.17 },\n          { element: 'H', position: { x: -0.757, y: 0.587, z: 0 }, charge: 0.17 }\n        ],\n        bonds: [\n          { atom1: 0, atom2: 1, order: 1, length: 0.96 },\n          { atom1: 0, atom2: 2, order: 1, length: 0.96 }\n        ],\n        properties: { totalEnergy: 0, charge: 0 }\n      },\n      'CH4': {\n        atoms: [\n          { element: 'C', position: { x: 0, y: 0, z: 0 }, charge: -0.4 },\n          { element: 'H', position: { x: 1.089, y: 0, z: 0 }, charge: 0.1 },\n          { element: 'H', position: { x: -0.363, y: 1.027, z: 0 }, charge: 0.1 },\n          { element: 'H', position: { x: -0.363, y: -0.513, z: 0.889 }, charge: 0.1 },\n          { element: 'H', position: { x: -0.363, y: -0.513, z: -0.889 }, charge: 0.1 }\n        ],\n        bonds: [\n          { atom1: 0, atom2: 1, order: 1, length: 1.089 },\n          { atom1: 0, atom2: 2, order: 1, length: 1.089 },\n          { atom1: 0, atom2: 3, order: 1, length: 1.089 },\n          { atom1: 0, atom2: 4, order: 1, length: 1.089 }\n        ],\n        properties: { totalEnergy: 0, charge: 0 }\n      },\n      'O2': {\n        atoms: [\n          { element: 'O', position: { x: -0.6, y: 0, z: 0 }, charge: 0 },\n          { element: 'O', position: { x: 0.6, y: 0, z: 0 }, charge: 0 }\n        ],\n        bonds: [\n          { atom1: 0, atom2: 1, order: 2, length: 1.21 }\n        ],\n        properties: { totalEnergy: 0, charge: 0 }\n      },\n      'CO2': {\n        atoms: [\n          { element: 'C', position: { x: 0, y: 0, z: 0 }, charge: 0.4 },\n          { element: 'O', position: { x: -1.16, y: 0, z: 0 }, charge: -0.2 },\n          { element: 'O', position: { x: 1.16, y: 0, z: 0 }, charge: -0.2 }\n        ],\n        bonds: [\n          { atom1: 0, atom2: 1, order: 2, length: 1.16 },\n          { atom1: 0, atom2: 2, order: 2, length: 1.16 }\n        ],\n        properties: { totalEnergy: 0, charge: 0 }\n      }\n    };\n\n    return mockStructures[moleculeName] || mockStructures['H2O'];\n  }\n\n  /**\n   * Create transition path between reactants and products\n   */\n  private createTransitionPath(\n    reactants: MolecularFrame[],\n    products: MolecularFrame[],\n    energyProfile: EnergyProfile,\n    transitionStates?: TransitionState[]\n  ): ReactionStep[] {\n    const steps: ReactionStep[] = [];\n    \n    // Create steps based on energy profile points\n    for (let i = 0; i < energyProfile.points.length - 1; i++) {\n      const currentPoint = energyProfile.points[i];\n      const nextPoint = energyProfile.points[i + 1];\n      \n      const step: ReactionStep = {\n        stepNumber: i,\n        description: `${currentPoint.label} → ${nextPoint.label}`,\n        energyChange: nextPoint.energy - currentPoint.energy,\n        bondChanges: this.inferBondChanges(currentPoint, nextPoint),\n        duration: 1 / (energyProfile.points.length - 1),\n        intermediates: this.generateIntermediateStructures(currentPoint, nextPoint)\n      };\n      \n      steps.push(step);\n    }\n    \n    return steps;\n  }\n\n  /**\n   * Create custom transition path from bond changes\n   */\n  private createCustomTransitionPath(\n    reactants: MolecularFrame[],\n    products: MolecularFrame[],\n    bondChanges: BondChange[]\n  ): ReactionStep[] {\n    const steps: ReactionStep[] = [];\n    \n    // Group bond changes by type\n    const breakingBonds = bondChanges.filter(bc => bc.type === 'breaking');\n    const formingBonds = bondChanges.filter(bc => bc.type === 'forming');\n    \n    // Create breaking step\n    if (breakingBonds.length > 0) {\n      steps.push({\n        stepNumber: 0,\n        description: 'Bond breaking',\n        energyChange: breakingBonds.reduce((sum, bc) => sum + bc.energyContribution, 0),\n        bondChanges: breakingBonds,\n        duration: 0.4\n      });\n    }\n    \n    // Create transition state step\n    steps.push({\n      stepNumber: steps.length,\n      description: 'Transition state',\n      energyChange: 50, // Estimated activation energy\n      bondChanges: [],\n      duration: 0.2\n    });\n    \n    // Create forming step\n    if (formingBonds.length > 0) {\n      steps.push({\n        stepNumber: steps.length,\n        description: 'Bond forming',\n        energyChange: formingBonds.reduce((sum, bc) => sum + bc.energyContribution, 0),\n        bondChanges: formingBonds,\n        duration: 0.4\n      });\n    }\n    \n    return steps;\n  }\n\n  /**\n   * Generate animation frames from reaction steps\n   */\n  private generateAnimationFrames(steps: ReactionStep[]): AnimationFrame[] {\n    const frames: AnimationFrame[] = [];\n    const totalFrames = Math.floor(this.config.duration * this.config.fps / 1000);\n    \n    let currentFrameIndex = 0;\n    \n    for (const step of steps) {\n      const stepFrames = Math.floor(totalFrames * step.duration);\n      \n      for (let i = 0; i < stepFrames; i++) {\n        const stepProgress = i / (stepFrames - 1);\n        const totalProgress = currentFrameIndex / totalFrames;\n        \n        const frame: AnimationFrame = {\n          frameNumber: currentFrameIndex,\n          time: totalProgress,\n          structure: this.interpolateStructure(step, stepProgress),\n          energy: this.interpolateEnergy(step, stepProgress),\n          bonds: this.generateAnimatedBonds(step, stepProgress),\n          atoms: this.generateAnimatedAtoms(step, stepProgress)\n        };\n        \n        frames.push(frame);\n        currentFrameIndex++;\n      }\n    }\n    \n    return frames;\n  }\n\n  /**\n   * Interpolate molecular structure during a reaction step\n   */\n  private interpolateStructure(step: ReactionStep, progress: number): MolecularFrame {\n    // Apply easing function\n    const easedProgress = this.applyEasing(progress);\n    \n    // For now, return a simple interpolated structure\n    return {\n      atoms: [\n        { element: 'C', position: { x: 0, y: 0, z: 0 } }\n      ],\n      bonds: [],\n      properties: { totalEnergy: 0, charge: 0 }\n    };\n  }\n\n  /**\n   * Interpolate energy during a reaction step\n   */\n  private interpolateEnergy(step: ReactionStep, progress: number): number {\n    const easedProgress = this.applyEasing(progress);\n    return step.energyChange * easedProgress;\n  }\n\n  /**\n   * Generate animated bonds for a frame\n   */\n  private generateAnimatedBonds(step: ReactionStep, progress: number): AnimatedBond[] {\n    const bonds: AnimatedBond[] = [];\n    \n    for (const bondChange of step.bondChanges) {\n      const easedProgress = this.applyEasing(progress);\n      \n      const bond: AnimatedBond = {\n        atom1: 0, // Would be determined from bond change\n        atom2: 1,\n        order: this.interpolateBondOrder(bondChange, easedProgress),\n        targetOrder: bondChange.bondOrderChange,\n        state: bondChange.type === 'breaking' ? 'breaking' : 'forming',\n        color: this.getBondColor(bondChange, easedProgress),\n        opacity: this.getBondOpacity(bondChange, easedProgress)\n      };\n      \n      bonds.push(bond);\n    }\n    \n    return bonds;\n  }\n\n  /**\n   * Generate animated atoms for a frame\n   */\n  private generateAnimatedAtoms(step: ReactionStep, progress: number): AnimatedAtom[] {\n    const atoms: AnimatedAtom[] = [];\n    \n    // This would generate atoms based on the molecular structure\n    // For now, return empty array\n    \n    return atoms;\n  }\n\n  /**\n   * Render a single animation frame\n   */\n  private renderFrame(frame: AnimationFrame): void {\n    if (!this.context || !this.canvas) return;\n    \n    // Clear canvas\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    // Set up coordinate system\n    this.context.save();\n    this.context.translate(this.canvas.width / 2, this.canvas.height / 2);\n    this.context.scale(100, -100); // Scale and flip Y axis for chemistry coordinates\n    \n    // Render atoms\n    this.renderAtoms(frame.atoms);\n    \n    // Render bonds\n    this.renderBonds(frame.bonds);\n    \n    // Render energy indicator\n    if (this.config.showEnergyProfile) {\n      this.renderEnergyIndicator(frame.energy);\n    }\n    \n    this.context.restore();\n    \n    // Render frame information\n    this.renderFrameInfo(frame);\n  }\n\n  /**\n   * Render atoms in the current frame\n   */\n  private renderAtoms(atoms: AnimatedAtom[]): void {\n    if (!this.context) return;\n    \n    for (const atom of atoms) {\n      this.context.save();\n      \n      // Set atom color\n      this.context.fillStyle = atom.color;\n      this.context.globalAlpha = atom.opacity;\n      \n      // Draw atom\n      this.context.beginPath();\n      this.context.arc(atom.position.x, atom.position.y, atom.radius, 0, 2 * Math.PI);\n      this.context.fill();\n      \n      // Draw element label\n      this.context.fillStyle = 'white';\n      this.context.font = '0.3px Arial';\n      this.context.textAlign = 'center';\n      this.context.fillText(atom.element, atom.position.x, atom.position.y + 0.1);\n      \n      this.context.restore();\n    }\n  }\n\n  /**\n   * Render bonds in the current frame\n   */\n  private renderBonds(bonds: AnimatedBond[]): void {\n    if (!this.context) return;\n    \n    for (const bond of bonds) {\n      this.context.save();\n      \n      // Set bond style\n      this.context.strokeStyle = bond.color;\n      this.context.globalAlpha = bond.opacity;\n      this.context.lineWidth = 0.1 * bond.order;\n      \n      if (bond.dashPattern) {\n        this.context.setLineDash(bond.dashPattern);\n      }\n      \n      // Draw bond (simplified - would need atom positions)\n      this.context.beginPath();\n      this.context.moveTo(-1, 0);\n      this.context.lineTo(1, 0);\n      this.context.stroke();\n      \n      this.context.restore();\n    }\n  }\n\n  /**\n   * Render energy indicator\n   */\n  private renderEnergyIndicator(energy: number): void {\n    if (!this.context || !this.canvas) return;\n    \n    this.context.save();\n    // Reset transform for consistent positioning\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    \n    // Draw energy bar\n    const barWidth = 20;\n    const barHeight = 200;\n    const barX = this.canvas.width - 40;\n    const barY = 50;\n    \n    // Background\n    this.context.fillStyle = '#f0f0f0';\n    this.context.fillRect(barX, barY, barWidth, barHeight);\n    \n    // Energy level\n    const energyHeight = Math.max(0, Math.min(barHeight, (energy / 100) * barHeight));\n    this.context.fillStyle = energy > 0 ? '#ff6b6b' : '#51cf66';\n    this.context.fillRect(barX, barY + barHeight - energyHeight, barWidth, energyHeight);\n    \n    // Label\n    this.context.fillStyle = 'black';\n    this.context.font = '12px Arial';\n    this.context.textAlign = 'center';\n    this.context.fillText(`${energy.toFixed(1)} kJ/mol`, barX + barWidth/2, barY + barHeight + 20);\n    \n    this.context.restore();\n  }\n\n  /**\n   * Render frame information\n   */\n  private renderFrameInfo(frame: AnimationFrame): void {\n    if (!this.context) return;\n    \n    this.context.save();\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    \n    this.context.fillStyle = 'black';\n    this.context.font = '14px Arial';\n    this.context.fillText(`Frame: ${frame.frameNumber}`, 10, 20);\n    this.context.fillText(`Time: ${(frame.time * 100).toFixed(1)}%`, 10, 40);\n    \n    this.context.restore();\n  }\n\n  /**\n   * Apply easing function to animation progress\n   */\n  private applyEasing(progress: number): number {\n    switch (this.config.easing) {\n      case 'linear':\n        return progress;\n      case 'ease-in':\n        return progress * progress;\n      case 'ease-out':\n        return 1 - (1 - progress) * (1 - progress);\n      case 'ease-in-out':\n        return progress < 0.5 \n          ? 2 * progress * progress \n          : 1 - 2 * (1 - progress) * (1 - progress);\n      default:\n        return progress;\n    }\n  }\n\n  /**\n   * Infer bond changes between energy profile points\n   */\n  private inferBondChanges(current: EnergyProfilePoint, next: EnergyProfilePoint): BondChange[] {\n    // This would analyze the chemical structures to determine bond changes\n    // For now, return empty array\n    return [];\n  }\n\n  /**\n   * Generate intermediate structures between energy points\n   */\n  private generateIntermediateStructures(current: EnergyProfilePoint, next: EnergyProfilePoint): MolecularFrame[] {\n    // This would generate molecular structures at intermediate points\n    // For now, return empty array\n    return [];\n  }\n\n  /**\n   * Interpolate bond order during animation\n   */\n  private interpolateBondOrder(bondChange: BondChange, progress: number): number {\n    if (bondChange.type === 'breaking') {\n      return Math.max(0, 1 - progress);\n    } else if (bondChange.type === 'forming') {\n      return progress;\n    }\n    return 1;\n  }\n\n  /**\n   * Get bond color based on bond change and progress\n   */\n  private getBondColor(bondChange: BondChange, progress: number): string {\n    switch (this.config.bondColorScheme) {\n      case 'energy-based':\n        const energy = Math.abs(bondChange.energyContribution);\n        return energy > 500 ? '#ff4757' : energy > 300 ? '#ffa502' : energy > 150 ? '#ffb347' : '#2ed573';\n      case 'order-based':\n        return bondChange.bondOrderChange > 0 ? '#2ed573' : '#ff4757';\n      default:\n        // Use energy-based coloring as default\n        const defaultEnergy = Math.abs(bondChange.energyContribution);\n        return defaultEnergy > 500 ? '#ff4757' : defaultEnergy > 300 ? '#ffa502' : '#2ed573';\n    }\n  }\n\n  /**\n   * Get bond opacity based on bond change and progress\n   */\n  private getBondOpacity(bondChange: BondChange, progress: number): number {\n    if (bondChange.type === 'breaking') {\n      return 1 - progress;\n    } else if (bondChange.type === 'forming') {\n      return progress;\n    }\n    return 1;\n  }\n}\n\n/**\n * Utility functions for reaction animation\n */\nexport class ReactionAnimationUtils {\n  /**\n   * Create a simple reaction animation from SMILES strings\n   */\n  static async createFromSMILES(\n    reactantSMILES: string[],\n    productSMILES: string[],\n    config?: Partial<ReactionAnimationConfig>\n  ): Promise<ReactionAnimator> {\n    const animator = new ReactionAnimator(config);\n    \n    // This would parse SMILES and create molecular structures\n    // For now, create a basic animation\n    \n    return animator;\n  }\n\n  /**\n   * Create reaction animation with custom bond changes\n   */\n  static createWithBondChanges(\n    bondChanges: BondChange[],\n    config?: Partial<ReactionAnimationConfig>\n  ): ReactionAnimator {\n    const animator = new ReactionAnimator(config);\n    \n    // This would create animation based on bond changes\n    \n    return animator;\n  }\n\n  /**\n   * Export animation data to various formats\n   */\n  static exportAnimationData(\n    animation: AnimationFrame[],\n    format: 'json' | 'csv' | 'xml'\n  ): string {\n    switch (format) {\n      case 'json':\n        return JSON.stringify(animation, null, 2);\n      case 'csv':\n        return this.animationToCSV(animation);\n      case 'xml':\n        return this.animationToXML(animation);\n      default:\n        return JSON.stringify(animation);\n    }\n  }\n\n  private static animationToCSV(animation: AnimationFrame[]): string {\n    const headers = ['frame', 'time', 'energy', 'atomCount', 'bondCount'];\n    const rows = animation.map(frame => [\n      frame.frameNumber,\n      frame.time,\n      frame.energy,\n      frame.atoms.length,\n      frame.bonds.length\n    ]);\n    \n    return [headers, ...rows].map(row => row.join(',')).join('\\n');\n  }\n\n  private static animationToXML(animation: AnimationFrame[]): string {\n    let xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<animation>\\n';\n    \n    for (const frame of animation) {\n      xml += `  <frame number=\"${frame.frameNumber}\" time=\"${frame.time}\" energy=\"${frame.energy}\">\\n`;\n      xml += `    <atoms count=\"${frame.atoms.length}\" />\\n`;\n      xml += `    <bonds count=\"${frame.bonds.length}\" />\\n`;\n      xml += '  </frame>\\n';\n    }\n    \n    xml += '</animation>';\n    return xml;\n  }\n}\n","/**\n * CREB Phase 3: Simplified AI-Powered Reaction Classification\n * Browser-compatible version without external ML dependencies\n */\n\nexport interface ReactionClassificationResult {\n  reactionType: string;\n  confidence: number;\n  reasoning: string[];\n  suggestedStyle: any;\n  characteristics: ReactionCharacteristics;\n}\n\nexport interface ReactionCharacteristics {\n  hasOxygen: boolean;\n  hasCombustibleFuel: boolean;\n  formsSingleProduct: boolean;\n  breaksIntoMultipleProducts: boolean;\n  involvesIons: boolean;\n  hasEnergyRelease: boolean;\n  hasGasProduction: boolean;\n  hasPrecipitate: boolean;\n}\n\n/**\n * AI-Powered Reaction Classification System (Simplified)\n * Provides intelligent reaction analysis without external ML dependencies\n */\nexport class ReactionClassifier {\n  private modelVersion: string = '1.0.0-browser';\n\n  constructor() {\n    console.log('🤖 AI Reaction Classifier initialized (Browser Mode)');\n  }\n\n  /**\n   * Classify a chemical reaction using rule-based AI\n   */\n  async classifyReaction(equation: string): Promise<ReactionClassificationResult> {\n    try {\n      const startTime = Date.now();\n      \n      // Parse equation components\n      const compounds = this.extractCompounds(equation);\n      const characteristics = this.analyzeReactionCharacteristics(equation);\n      \n      // Determine reaction type using rule-based classification\n      const reactionType = this.determineReactionType(characteristics, compounds);\n      const confidence = this.calculateConfidence(characteristics);\n      const reasoning = this.generateReasoning(reactionType, characteristics);\n      const suggestedStyle = this.getAnimationStyle(reactionType);\n\n      const result: ReactionClassificationResult = {\n        reactionType,\n        confidence,\n        reasoning,\n        suggestedStyle,\n        characteristics\n      };\n\n      const processingTime = Date.now() - startTime;\n      console.log(`✅ AI classification complete in ${processingTime}ms`, result);\n\n      return result;\n\n    } catch (error) {\n      console.error('❌ AI classification failed:', error);\n      \n      // Fallback to general classification\n      return {\n        reactionType: 'general',\n        confidence: 0.1,\n        reasoning: ['Classification failed, using default style'],\n        suggestedStyle: this.getDefaultAnimationStyle(),\n        characteristics: this.getDefaultCharacteristics()\n      };\n    }\n  }\n\n  /**\n   * Optimize animation parameters based on reaction type\n   */\n  async optimizeAnimationParameters(\n    reactionType: ReactionClassificationResult,\n    reactants: any[],\n    products: any[]\n  ): Promise<any> {\n    try {\n      // Base parameters from reaction classification\n      const baseParams = {\n        duration: 3.0,\n        temperature: 298,\n        pressure: 1,\n        solvent: 'vacuum'\n      };\n\n      // Adjust based on reaction characteristics\n      if (reactionType.characteristics.hasEnergyRelease) {\n        return {\n          ...baseParams,\n          duration: 2.0,\n          showEnergyProfile: true,\n          particleEffects: true\n        };\n      }\n\n      if (reactionType.characteristics.hasGasProduction) {\n        return {\n          ...baseParams,\n          duration: 3.5,\n          showBubbleEffects: true,\n          emphasizeVolumeChange: true\n        };\n      }\n\n      return baseParams;\n    } catch (error: any) {\n      console.error('AI parameter optimization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Analyze the structural characteristics of a reaction\n   */\n  private analyzeReactionCharacteristics(equation: string): ReactionCharacteristics {\n    const compounds = this.extractCompounds(equation);\n    const reactants = compounds.reactants;\n    const products = compounds.products;\n\n    return {\n      hasOxygen: this.containsOxygen(reactants) || this.containsOxygen(products),\n      hasCombustibleFuel: this.containsCombustibleFuel(reactants),\n      formsSingleProduct: products.length === 1,\n      breaksIntoMultipleProducts: products.length > reactants.length,\n      involvesIons: this.containsIons(reactants) || this.containsIons(products),\n      hasEnergyRelease: this.isExothermic(equation),\n      hasGasProduction: this.producesGas(products),\n      hasPrecipitate: this.formsPrecipitate(equation)\n    };\n  }\n\n  /**\n   * Extract compounds from equation\n   */\n  private extractCompounds(equation: string): { reactants: string[], products: string[] } {\n    const [reactantSide, productSide] = equation.split(/→|->|=/).map(s => s.trim());\n    \n    const reactants = reactantSide.split('+').map(s => s.trim().replace(/^\\d+/, ''));\n    const products = productSide.split('+').map(s => s.trim().replace(/^\\d+/, ''));\n    \n    return { reactants, products };\n  }\n\n  /**\n   * Determine reaction type based on characteristics\n   */\n  private determineReactionType(\n    characteristics: ReactionCharacteristics, \n    compounds: { reactants: string[], products: string[] }\n  ): string {\n    const { reactants, products } = compounds;\n\n    // Combustion detection\n    if (characteristics.hasOxygen && characteristics.hasCombustibleFuel && \n        products.some(p => p.includes('CO2') || p.includes('H2O'))) {\n      return 'combustion';\n    }\n\n    // Synthesis detection\n    if (reactants.length > 1 && characteristics.formsSingleProduct) {\n      return 'synthesis';\n    }\n\n    // Decomposition detection\n    if (reactants.length === 1 && characteristics.breaksIntoMultipleProducts) {\n      return 'decomposition';\n    }\n\n    // Acid-base detection\n    if (characteristics.involvesIons && products.some(p => p.includes('H2O'))) {\n      return 'acid-base';\n    }\n\n    // Single displacement\n    if (reactants.length === 2 && products.length === 2 && \n        this.hasElementalMetal(reactants)) {\n      return 'single-displacement';\n    }\n\n    // Double displacement\n    if (reactants.length === 2 && products.length === 2 && \n        characteristics.involvesIons) {\n      return 'double-displacement';\n    }\n\n    return 'general';\n  }\n\n  /**\n   * Helper methods for compound analysis\n   */\n  private containsOxygen(compounds: string[]): boolean {\n    return compounds.some(c => /O\\d*/.test(c));\n  }\n\n  private containsCombustibleFuel(compounds: string[]): boolean {\n    return compounds.some(c => /C\\d*H\\d*/.test(c) || c === 'C' || c === 'H2');\n  }\n\n  private containsIons(compounds: string[]): boolean {\n    return compounds.some(c => /Cl|Na|K|Ca|Mg|OH/.test(c));\n  }\n\n  private isExothermic(equation: string): boolean {\n    return /combustion|burn|explode/i.test(equation) || \n           equation.includes('CO2') && equation.includes('H2O');\n  }\n\n  private producesGas(products: string[]): boolean {\n    const gases = ['CO2', 'H2', 'O2', 'N2', 'Cl2', 'NH3'];\n    return products.some(p => gases.some(gas => p.includes(gas)));\n  }\n\n  private formsPrecipitate(equation: string): boolean {\n    return /precipitate|solid|↓/i.test(equation);\n  }\n\n  private hasElementalMetal(reactants: string[]): boolean {\n    const metals = ['Na', 'K', 'Ca', 'Mg', 'Al', 'Fe', 'Cu', 'Zn'];\n    return reactants.some(r => metals.includes(r));\n  }\n\n  /**\n   * Calculate confidence based on characteristics\n   */\n  private calculateConfidence(characteristics: ReactionCharacteristics): number {\n    let confidence = 0.5; // Base confidence\n\n    // Increase confidence for clear indicators\n    if (characteristics.hasOxygen && characteristics.hasCombustibleFuel) confidence += 0.3;\n    if (characteristics.formsSingleProduct) confidence += 0.1;\n    if (characteristics.hasEnergyRelease) confidence += 0.2;\n    if (characteristics.involvesIons) confidence += 0.1;\n\n    return Math.min(confidence, 0.95); // Cap at 95%\n  }\n\n  /**\n   * Generate reasoning for classification\n   */\n  private generateReasoning(reactionType: string, characteristics: ReactionCharacteristics): string[] {\n    const reasons = [];\n\n    switch (reactionType) {\n      case 'combustion':\n        reasons.push('Oxygen present in reactants');\n        reasons.push('Combustible fuel detected');\n        if (characteristics.hasEnergyRelease) reasons.push('Exothermic reaction');\n        break;\n      case 'synthesis':\n        reasons.push('Multiple reactants form single product');\n        break;\n      case 'decomposition':\n        reasons.push('Single reactant breaks into multiple products');\n        break;\n      case 'acid-base':\n        reasons.push('Ionic compounds detected');\n        reasons.push('Water formation indicates neutralization');\n        break;\n    }\n\n    return reasons;\n  }\n\n  /**\n   * Get animation style based on reaction type\n   */\n  private getAnimationStyle(reactionType: string): any {\n    const styles = {\n      combustion: {\n        particleEffects: true,\n        energyProfile: true,\n        colorScheme: 'fire',\n        duration: 2.0\n      },\n      synthesis: {\n        bondFormation: true,\n        convergence: true,\n        colorScheme: 'synthesis',\n        duration: 3.0\n      },\n      decomposition: {\n        bondBreaking: true,\n        divergence: true,\n        colorScheme: 'breakdown',\n        duration: 2.5\n      },\n      'acid-base': {\n        ionicMotion: true,\n        neutralization: true,\n        colorScheme: 'ionic',\n        duration: 3.5\n      }\n    };\n\n    return styles[reactionType as keyof typeof styles] || this.getDefaultAnimationStyle();\n  }\n\n  private getDefaultAnimationStyle(): any {\n    return {\n      particleEffects: false,\n      energyProfile: false,\n      colorScheme: 'default',\n      duration: 3.0\n    };\n  }\n\n  private getDefaultCharacteristics(): ReactionCharacteristics {\n    return {\n      hasOxygen: false,\n      hasCombustibleFuel: false,\n      formsSingleProduct: false,\n      breaksIntoMultipleProducts: false,\n      involvesIons: false,\n      hasEnergyRelease: false,\n      hasGasProduction: false,\n      hasPrecipitate: false\n    };\n  }\n}\n","/**\n * CREB Phase 3: Simplified Physics Engine\n * Browser-compatible version without external physics dependencies\n */\n\n/**\n * Simplified Molecular Physics Engine (Browser Mode)\n * Provides physics-based animation without external dependencies\n */\nexport class SimplifiedPhysicsEngine {\n  private config: any = {};\n  private isInitialized: boolean = false;\n\n  constructor() {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.config = {\n      gravity: -9.82,\n      timeStep: 1/60,\n      temperature: 298,\n      pressure: 1.0\n    };\n    this.isInitialized = true;\n    console.log('⚡ Simplified Physics Engine initialized (Browser Mode)');\n  }\n\n  /**\n   * Configure physics simulation parameters\n   */\n  configure(config: any): void {\n    try {\n      if (config.temperature !== undefined) {\n        this.config.temperature = config.temperature;\n        // Adjust gravity based on temperature (higher temp = more kinetic energy)\n        const tempFactor = Math.max(0.1, config.temperature / 298);\n        this.config.gravity = -9.82 * tempFactor;\n      }\n\n      if (config.enableCollision !== undefined) {\n        this.config.enableCollision = config.enableCollision;\n      }\n\n      console.log('Physics engine configured', config);\n    } catch (error: any) {\n      console.error('Physics configuration failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Simulate reaction pathway with simplified physics\n   */\n  async simulateReactionPathway(\n    transitions: any[], \n    duration: number\n  ): Promise<any[]> {\n    try {\n      const frames: any[] = [];\n      const frameRate = 60; // 60 FPS\n      const totalFrames = Math.floor(duration * frameRate);\n\n      console.log(`🔬 Starting physics simulation: ${totalFrames} frames over ${duration}s`);\n\n      for (let frame = 0; frame < totalFrames; frame++) {\n        const progress = frame / totalFrames;\n        const timestamp = (frame / frameRate) * 1000; // Convert to ms\n\n        // Apply simplified physics calculations\n        const molecularStates = transitions.map((transition, index) => ({\n          moleculeId: `molecule_${index}`,\n          position: this.interpolatePosition(transition, progress),\n          rotation: this.interpolateRotation(transition, progress),\n          scale: this.interpolateScale(transition, progress),\n          velocity: this.calculateVelocity(transition, progress),\n          bonds: transition.bonds || [],\n          atoms: transition.atoms || []\n        }));\n\n        frames.push({\n          timestamp,\n          molecularStates,\n          frameNumber: frame,\n          progress: progress * 100\n        });\n\n        // Add some physics-based perturbations\n        this.applyPhysicsEffects(molecularStates, progress);\n      }\n\n      console.log(`✅ Physics simulation completed: ${frames.length} frames generated`);\n      return frames;\n    } catch (error: any) {\n      console.error('Physics simulation failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Interpolate position with physics-based motion\n   */\n  private interpolatePosition(transition: any, progress: number): any {\n    if (!transition.startStructure || !transition.endStructure) {\n      return { x: 0, y: 0, z: 0 };\n    }\n\n    const start = transition.startStructure.center || { x: 0, y: 0, z: 0 };\n    const end = transition.endStructure.center || { x: 0, y: 0, z: 0 };\n\n    // Add physics-based easing (acceleration/deceleration)\n    const easedProgress = this.physicsEasing(progress);\n\n    // Add some random brownian motion for realism\n    const brownianX = (Math.random() - 0.5) * 0.1;\n    const brownianY = (Math.random() - 0.5) * 0.1;\n    const brownianZ = (Math.random() - 0.5) * 0.1;\n\n    return {\n      x: start.x + (end.x - start.x) * easedProgress + brownianX,\n      y: start.y + (end.y - start.y) * easedProgress + brownianY,\n      z: start.z + (end.z - start.z) * easedProgress + brownianZ\n    };\n  }\n\n  /**\n   * Physics-based easing function\n   */\n  private physicsEasing(t: number): number {\n    // Simulate realistic molecular motion with slight acceleration/deceleration\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  }\n\n  /**\n   * Interpolate rotation with angular momentum\n   */\n  private interpolateRotation(transition: any, progress: number): any {\n    const baseRotation = progress * Math.PI * 2;\n    \n    // Add temperature-dependent rotational energy\n    const tempFactor = this.config.temperature / 298;\n    const thermalRotation = Math.sin(progress * Math.PI * 4) * tempFactor * 0.2;\n\n    return { \n      x: thermalRotation, \n      y: baseRotation + thermalRotation, \n      z: thermalRotation * 0.5 \n    };\n  }\n\n  /**\n   * Interpolate scale with thermal expansion\n   */\n  private interpolateScale(transition: any, progress: number): any {\n    // Base scale oscillation\n    const baseScale = 1 + Math.sin(progress * Math.PI) * 0.1;\n    \n    // Temperature-dependent thermal expansion\n    const tempFactor = this.config.temperature / 298;\n    const thermalExpansion = 1 + (tempFactor - 1) * 0.05;\n\n    const finalScale = baseScale * thermalExpansion;\n    \n    return { x: finalScale, y: finalScale, z: finalScale };\n  }\n\n  /**\n   * Calculate velocity for motion blur effects\n   */\n  private calculateVelocity(transition: any, progress: number): any {\n    const timeStep = this.config.timeStep;\n    \n    // Simple velocity calculation based on position change\n    const velocityFactor = Math.sin(progress * Math.PI) * 5.0; // Peak velocity at middle\n    \n    return {\n      x: velocityFactor * timeStep,\n      y: velocityFactor * timeStep * 0.5,\n      z: velocityFactor * timeStep * 0.3\n    };\n  }\n\n  /**\n   * Apply physics effects like thermal motion\n   */\n  private applyPhysicsEffects(molecularStates: any[], progress: number): void {\n    molecularStates.forEach(state => {\n      // Add thermal motion based on temperature\n      const tempFactor = this.config.temperature / 298;\n      const thermalMotion = tempFactor * 0.1;\n\n      // Apply random thermal vibrations\n      state.position.x += (Math.random() - 0.5) * thermalMotion;\n      state.position.y += (Math.random() - 0.5) * thermalMotion;\n      state.position.z += (Math.random() - 0.5) * thermalMotion;\n\n      // Add collision effects if enabled\n      if (this.config.enableCollision && progress > 0.3 && progress < 0.7) {\n        const collisionFactor = Math.sin((progress - 0.3) * Math.PI / 0.4);\n        state.scale.x *= (1 + collisionFactor * 0.2);\n        state.scale.y *= (1 - collisionFactor * 0.1);\n        state.scale.z *= (1 + collisionFactor * 0.15);\n      }\n    });\n  }\n\n  /**\n   * Calculate system energy for monitoring\n   */\n  calculateSystemEnergy(molecularStates: any[]): any {\n    const kineticEnergy = molecularStates.reduce((total, state) => {\n      const v2 = state.velocity.x ** 2 + state.velocity.y ** 2 + state.velocity.z ** 2;\n      return total + 0.5 * v2; // Assuming unit mass\n    }, 0);\n\n    const potentialEnergy = molecularStates.length * this.config.temperature * 0.01; // Simplified\n\n    return {\n      kinetic: kineticEnergy,\n      potential: potentialEnergy,\n      total: kineticEnergy + potentialEnergy,\n      temperature: this.config.temperature\n    };\n  }\n\n  /**\n   * Reset physics state\n   */\n  reset(): void {\n    this.config = {\n      gravity: -9.82,\n      timeStep: 1/60,\n      temperature: 298,\n      pressure: 1.0\n    };\n    console.log('Physics engine reset to default state');\n  }\n\n  /**\n   * Alias for simulateReactionPathway - for API compatibility\n   */\n  async simulateReaction(equation: string, options?: any): Promise<any> {\n    // Convert equation string to simple transitions array for compatibility\n    const transitions = [{\n      reactants: equation.split('->')[0]?.trim().split('+').map(r => r.trim()) || [],\n      products: equation.split('->')[1]?.trim().split('+').map(p => p.trim()) || [],\n      startStructure: { center: { x: -2, y: 0, z: 0 } },\n      endStructure: { center: { x: 2, y: 0, z: 0 } }\n    }];\n    \n    const duration = options?.duration || 4.0;\n    return this.simulateReactionPathway(transitions, duration);\n  }\n\n  /**\n   * Dispose of physics resources\n   */\n  dispose(): void {\n    this.isInitialized = false;\n    console.log('🔬 Simplified Physics Engine disposed');\n  }\n}\n","/**\n * CREB Phase 3: Simplified Caching Manager\n * Browser-compatible version with localStorage fallback\n */\n\nexport interface CacheStats {\n  memorySize: number;\n  persistentSize: number;\n  hitRate: number;\n  missRate: number;\n  totalRequests: number;\n}\n\n/**\n * Simplified Intelligent Cache Manager (Browser Mode)\n * Uses localStorage and memory cache without external dependencies\n */\nexport class SimplifiedCacheManager {\n  private memoryCache: Map<string, { data: any, timestamp: number, ttl?: number }> = new Map();\n  private maxMemorySize: number = 100; // Maximum items in memory\n  private stats: CacheStats = {\n    memorySize: 0,\n    persistentSize: 0,\n    hitRate: 0,\n    missRate: 0,\n    totalRequests: 0\n  };\n\n  constructor() {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    // Clear old cache entries on startup\n    this.cleanupExpiredEntries();\n    console.log('🧠 Simplified Cache Manager initialized (Browser Mode)');\n  }\n\n  /**\n   * Get item from cache (memory first, then localStorage)\n   */\n  async get(key: string): Promise<any> {\n    this.stats.totalRequests++;\n\n    // Check memory cache first\n    const memoryItem = this.memoryCache.get(key);\n    if (memoryItem) {\n      // Check if expired\n      if (memoryItem.ttl && Date.now() > memoryItem.timestamp + memoryItem.ttl) {\n        this.memoryCache.delete(key);\n      } else {\n        this.recordHit('memory');\n        console.log(`💾 Cache hit (memory): ${key}`);\n        return memoryItem.data;\n      }\n    }\n\n    // Check localStorage\n    try {\n      const persistentItem = localStorage.getItem(`creb_cache_${key}`);\n      if (persistentItem) {\n        const parsed = JSON.parse(persistentItem);\n        \n        // Check if expired\n        if (parsed.ttl && Date.now() > parsed.timestamp + parsed.ttl) {\n          localStorage.removeItem(`creb_cache_${key}`);\n        } else {\n          // Move to memory cache for faster future access\n          this.memoryCache.set(key, {\n            data: parsed.data,\n            timestamp: parsed.timestamp,\n            ttl: parsed.ttl\n          });\n          \n          this.recordHit('persistent');\n          console.log(`💽 Cache hit (persistent): ${key}`);\n          return parsed.data;\n        }\n      }\n    } catch (error) {\n      console.warn('Error reading from localStorage:', error);\n    }\n\n    // Cache miss\n    this.recordMiss();\n    console.log(`❌ Cache miss: ${key}`);\n    return null;\n  }\n\n  /**\n   * Set item in cache (both memory and localStorage)\n   */\n  async set(key: string, data: any, ttl?: number): Promise<void> {\n    const timestamp = Date.now();\n    const cacheItem = { data, timestamp, ttl };\n\n    // Store in memory cache\n    this.memoryCache.set(key, cacheItem);\n    \n    // Enforce memory size limit\n    if (this.memoryCache.size > this.maxMemorySize) {\n      this.evictOldestMemoryItems();\n    }\n\n    // Store in localStorage\n    try {\n      const serialized = JSON.stringify(cacheItem);\n      localStorage.setItem(`creb_cache_${key}`, serialized);\n      console.log(`✅ Cache set: ${key} (${serialized.length} bytes)`);\n    } catch (error) {\n      // localStorage might be full\n      console.warn('Error writing to localStorage:', error);\n      this.cleanupLocalStorage();\n    }\n\n    this.updateStats();\n  }\n\n  /**\n   * Clear specific cache entry\n   */\n  async clear(key: string): Promise<void> {\n    this.memoryCache.delete(key);\n    localStorage.removeItem(`creb_cache_${key}`);\n    console.log(`🗑️ Cache cleared: ${key}`);\n  }\n\n  /**\n   * Clear all cache entries\n   */\n  async clearAll(): Promise<void> {\n    this.memoryCache.clear();\n    \n    // Clear all CREB cache entries from localStorage\n    const keysToRemove = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith('creb_cache_')) {\n        keysToRemove.push(key);\n      }\n    }\n    \n    keysToRemove.forEach(key => localStorage.removeItem(key));\n    \n    this.resetStats();\n    console.log('🧹 All cache entries cleared');\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getStats(): CacheStats {\n    this.updateStats();\n    return { ...this.stats };\n  }\n\n  /**\n   * Update cache statistics\n   */\n  private updateStats(): void {\n    this.stats.memorySize = this.memoryCache.size;\n    \n    // Count localStorage items\n    let persistentCount = 0;\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith('creb_cache_')) {\n        persistentCount++;\n      }\n    }\n    this.stats.persistentSize = persistentCount;\n\n    // Calculate hit/miss rates\n    if (this.stats.totalRequests > 0) {\n      const hits = this.stats.totalRequests - (this.stats.totalRequests * this.stats.missRate);\n      this.stats.hitRate = hits / this.stats.totalRequests;\n    }\n  }\n\n  /**\n   * Record cache hit\n   */\n  private recordHit(type: 'memory' | 'persistent'): void {\n    // Update hit rate calculation\n    const totalHits = this.stats.totalRequests * this.stats.hitRate + 1;\n    this.stats.hitRate = totalHits / this.stats.totalRequests;\n    this.stats.missRate = 1 - this.stats.hitRate;\n  }\n\n  /**\n   * Record cache miss\n   */\n  private recordMiss(): void {\n    const totalMisses = this.stats.totalRequests * this.stats.missRate + 1;\n    this.stats.missRate = totalMisses / this.stats.totalRequests;\n    this.stats.hitRate = 1 - this.stats.missRate;\n  }\n\n  /**\n   * Reset statistics\n   */\n  private resetStats(): void {\n    this.stats = {\n      memorySize: 0,\n      persistentSize: 0,\n      hitRate: 0,\n      missRate: 0,\n      totalRequests: 0\n    };\n  }\n\n  /**\n   * Evict oldest items from memory cache\n   */\n  private evictOldestMemoryItems(): void {\n    const sortedEntries = Array.from(this.memoryCache.entries())\n      .sort(([,a], [,b]) => a.timestamp - b.timestamp);\n    \n    // Remove oldest 25% of items\n    const toRemove = Math.floor(sortedEntries.length * 0.25);\n    for (let i = 0; i < toRemove; i++) {\n      this.memoryCache.delete(sortedEntries[i][0]);\n    }\n    \n    console.log(`🧹 Evicted ${toRemove} old items from memory cache`);\n  }\n\n  /**\n   * Clean up expired cache entries\n   */\n  private cleanupExpiredEntries(): void {\n    const now = Date.now();\n    \n    // Clean memory cache\n    for (const [key, item] of this.memoryCache.entries()) {\n      if (item.ttl && now > item.timestamp + item.ttl) {\n        this.memoryCache.delete(key);\n      }\n    }\n\n    // Clean localStorage cache\n    const expiredKeys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith('creb_cache_')) {\n        try {\n          const item = JSON.parse(localStorage.getItem(key) || '{}');\n          if (item.ttl && now > item.timestamp + item.ttl) {\n            expiredKeys.push(key);\n          }\n        } catch (error) {\n          // Invalid JSON, remove it\n          expiredKeys.push(key);\n        }\n      }\n    }\n\n    expiredKeys.forEach(key => localStorage.removeItem(key));\n    \n    if (expiredKeys.length > 0) {\n      console.log(`🧹 Cleaned up ${expiredKeys.length} expired cache entries`);\n    }\n  }\n\n  /**\n   * Clean up localStorage when full\n   */\n  private cleanupLocalStorage(): void {\n    console.log('🧹 localStorage full, cleaning up old CREB cache entries...');\n    \n    const crebKeys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith('creb_cache_')) {\n        try {\n          const item = JSON.parse(localStorage.getItem(key) || '{}');\n          crebKeys.push({ key, timestamp: item.timestamp || 0 });\n        } catch (error) {\n          crebKeys.push({ key, timestamp: 0 });\n        }\n      }\n    }\n\n    // Sort by timestamp and remove oldest 50%\n    crebKeys.sort((a, b) => a.timestamp - b.timestamp);\n    const toRemove = Math.floor(crebKeys.length * 0.5);\n    \n    for (let i = 0; i < toRemove; i++) {\n      localStorage.removeItem(crebKeys[i].key);\n    }\n    \n    console.log(`🧹 Removed ${toRemove} old cache entries from localStorage`);\n  }\n}\n","/**\n * CREB Phase 2: Animated Reaction Transition Engine\n * \n * This module provides smooth, physics-based animations between\n * reactant and product molecular states using GSAP and Three.js.\n */\n\nimport { gsap } from 'gsap';\nimport * as THREE from 'three';\nimport { ReactionClassifier } from '../ai/SimplifiedReactionClassifier';\nimport { SimplifiedPhysicsEngine as MolecularPhysicsEngine } from '../physics/SimplifiedPhysicsEngine';\nimport { SimplifiedCacheManager as IntelligentCacheManager } from '../caching/SimplifiedCacheManager';\n\nexport interface AnimationConfig {\n  duration: number;\n  easing: string;\n  showEnergyProfile: boolean;\n  showBondTransitions: boolean;\n  particleEffects: boolean;\n  audioEnabled: boolean;\n}\n\nexport interface MolecularTransition {\n  startStructure: MolecularData;\n  endStructure: MolecularData;\n  transitionType: 'formation' | 'breaking' | 'rearrangement';\n  energyBarrier: number;\n  transitionState?: MolecularData;\n}\n\nexport interface AnimationFrame {\n  timestamp: number;\n  molecularStates: MolecularState[];\n  energyLevel: number;\n  bondChanges: BondChange[];\n  atomMovements: AtomMovement[];\n}\n\nexport interface MolecularState {\n  atoms: AtomState[];\n  bonds: BondState[];\n  overallCharge: number;\n  spinMultiplicity: number;\n}\n\nexport interface AtomState {\n  id: string;\n  element: string;\n  position: THREE.Vector3;\n  charge: number;\n  hybridization: string;\n  color: string;\n  radius: number;\n}\n\nexport interface BondState {\n  id: string;\n  atom1: string;\n  atom2: string;\n  order: number;\n  length: number;\n  strength: number;\n  color: string;\n}\n\nexport interface BondChange {\n  type: 'formation' | 'breaking' | 'order_change';\n  bondId: string;\n  startOrder: number;\n  endOrder: number;\n  timeline: number[];\n}\n\nexport interface AtomMovement {\n  atomId: string;\n  startPosition: THREE.Vector3;\n  endPosition: THREE.Vector3;\n  trajectory: THREE.Vector3[];\n  speed: number;\n}\n\nexport class ReactionAnimationEngine {\n  private scene!: THREE.Scene;\n  private camera!: THREE.PerspectiveCamera;\n  private renderer!: THREE.WebGLRenderer;\n  private timeline!: gsap.core.Timeline;\n  private config: AnimationConfig;\n  \n  // Phase 3: AI and Physics Integration\n  private aiClassifier: ReactionClassifier;\n  private physicsEngine: MolecularPhysicsEngine;\n  private cacheManager: IntelligentCacheManager;\n  \n  // 3Dmol.js Integration\n  private mol3dViewer: any = null;\n  private mol3dContainer: HTMLElement | null = null;\n  private molecularModels: Map<string, any> = new Map();\n  \n  // Animation state\n  private isPlaying: boolean = false;\n  private currentFrame: number = 0;\n  private totalFrames: number = 0;\n  private animationData: AnimationFrame[] = [];\n  \n  // Visual elements\n  private atomMeshes: Map<string, THREE.Mesh> = new Map();\n  private bondMeshes: Map<string, THREE.Mesh> = new Map();\n  private energyProfileMesh: THREE.Line | null = null;\n  private particleSystem: THREE.Points | null = null;\n  \n  // Event callbacks\n  private onProgress?: (progress: number) => void;\n  private onComplete?: () => void;\n  private onFrameUpdate?: (frame: AnimationFrame) => void;\n\n  constructor(container: HTMLElement, config: Partial<AnimationConfig> = {}) {\n    this.config = {\n      duration: 3.0,\n      easing: 'power2.inOut',\n      showEnergyProfile: true,\n      showBondTransitions: true,\n      particleEffects: true,\n      audioEnabled: false,\n      ...config\n    };\n\n    // Initialize Phase 3 systems\n    this.aiClassifier = new ReactionClassifier();\n    this.physicsEngine = new MolecularPhysicsEngine();\n    this.cacheManager = new IntelligentCacheManager();\n\n    this.initializeThreeJS(container);\n    this.initialize3Dmol(container);\n    this.initializeGSAP();\n    \n    // Start rendering immediately to show test geometry\n    this.startContinuousRender();\n  }\n\n  private initializeThreeJS(container: HTMLElement): void {\n    // Scene setup\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0x000000);\n\n    // Camera setup\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      container.clientWidth / container.clientHeight,\n      0.1,\n      1000\n    );\n    this.camera.position.set(0, 0, 10);\n\n    // Renderer setup with optimization\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      powerPreference: 'high-performance'\n    });\n    this.renderer.setSize(container.clientWidth, container.clientHeight);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n    container.appendChild(this.renderer.domElement);\n\n    // Lighting setup\n    this.setupLighting();\n\n    // Add test geometry to verify renderer is working\n    this.addTestGeometry();\n\n    // Handle resize\n    window.addEventListener('resize', () => this.onWindowResize(container));\n  }\n\n  private setupLighting(): void {\n    // Ambient light for overall illumination\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    this.scene.add(ambientLight);\n\n    // Directional light for shadows and highlights\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1.0);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n    directionalLight.shadow.mapSize.width = 2048;\n    directionalLight.shadow.mapSize.height = 2048;\n    this.scene.add(directionalLight);\n\n    // Point lights for dynamic effects\n    const pointLight1 = new THREE.PointLight(0x4080ff, 0.5, 20);\n    pointLight1.position.set(-10, 0, 0);\n    this.scene.add(pointLight1);\n\n    const pointLight2 = new THREE.PointLight(0xff4080, 0.5, 20);\n    pointLight2.position.set(10, 0, 0);\n    this.scene.add(pointLight2);\n  }\n\n  private initialize3Dmol(container: HTMLElement): void {\n    try {\n      // Check if 3Dmol.js is available\n      const $3Dmol = (globalThis as any).$3Dmol;\n      if (!$3Dmol) {\n        console.warn('3Dmol.js not available, using fallback rendering');\n        this.addTestGeometry();\n        return;\n      }\n\n      // Create a separate container for 3Dmol.js viewer\n      this.mol3dContainer = document.createElement('div');\n      this.mol3dContainer.style.position = 'absolute';\n      this.mol3dContainer.style.top = '0';\n      this.mol3dContainer.style.left = '0';\n      this.mol3dContainer.style.width = '100%';\n      this.mol3dContainer.style.height = '100%';\n      this.mol3dContainer.style.pointerEvents = 'none'; // Allow Three.js to handle interactions\n      container.appendChild(this.mol3dContainer);\n\n      // Initialize 3Dmol.js viewer\n      this.mol3dViewer = $3Dmol.createViewer(this.mol3dContainer, {\n        defaultcolors: $3Dmol.elementColors.defaultColors,\n        backgroundColor: 'rgba(0,0,0,0)' // Transparent background\n      });\n\n      // Add initial demo molecules to show that 3Dmol.js is working\n      this.addDemo3DMolecules();\n      \n      console.log('🧬 3Dmol.js viewer initialized');\n    } catch (error) {\n      console.error('Failed to initialize 3Dmol.js:', error);\n      this.addTestGeometry();\n    }\n  }\n\n  private addTestGeometry(): void {\n    // Add a visible test cube to verify the renderer is working\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshPhongMaterial({ color: 0x00ff00 });\n    const cube = new THREE.Mesh(geometry, material);\n    cube.position.set(0, 0, 0);\n    this.scene.add(cube);\n    \n    // Add rotation animation to make it obvious\n    gsap.to(cube.rotation, { \n      duration: 2, \n      y: Math.PI * 2, \n      repeat: -1, \n      ease: \"none\" \n    });\n    \n    console.log('🟢 Test geometry added to scene');\n  }\n\n  private addDemo3DMolecules(): void {\n    if (!this.mol3dViewer) return;\n\n    // Add a water molecule as demo\n    const waterXYZ = '3\\nWater molecule\\nO 0.000 0.000 0.000\\nH 0.757 0.586 0.000\\nH -0.757 0.586 0.000\\n';\n    \n    try {\n      const model = this.mol3dViewer.addModel(waterXYZ, 'xyz');\n      model.setStyle({}, { \n        stick: { radius: 0.1 }, \n        sphere: { scale: 0.3 } \n      });\n      \n      this.mol3dViewer.zoomTo();\n      this.mol3dViewer.render();\n      \n      console.log('🧬 Demo water molecule added');\n    } catch (error) {\n      console.error('Failed to add demo molecule:', error);\n    }\n  }\n\n  private initializeGSAP(): void {\n    gsap.registerPlugin();\n    this.timeline = gsap.timeline({\n      paused: true,\n      onUpdate: () => this.onTimelineUpdate(),\n      onComplete: () => this.handleAnimationComplete()\n    });\n  }\n\n  /**\n   * Create 3Dmol.js molecular models from molecular data\n   */\n  private async createMolecularModels(molecules: MolecularData[]): Promise<void> {\n    if (!this.mol3dViewer) {\n      console.warn('3Dmol.js viewer not available');\n      return;\n    }\n\n    try {\n      this.mol3dViewer.clear();\n      this.molecularModels.clear();\n\n      for (const molecule of molecules) {\n        const modelId = `mol_${molecule.formula}`;\n        \n        // Convert molecular data to 3Dmol.js format\n        const mol3dData = this.convertToMol3DFormat(molecule);\n        \n        // Add model to viewer\n        const model = this.mol3dViewer.addModel(mol3dData, 'xyz');\n        model.setStyle({}, { stick: {}, sphere: { scale: 0.3 } });\n        \n        this.molecularModels.set(modelId, model);\n        console.log(`🧬 Added molecular model: ${molecule.formula}`);\n      }\n\n      this.mol3dViewer.zoomTo();\n      this.mol3dViewer.render();\n    } catch (error) {\n      console.error('Failed to create molecular models:', error);\n    }\n  }\n\n  /**\n   * Convert CREB molecular data to 3Dmol.js XYZ format\n   */\n  private convertToMol3DFormat(molecule: MolecularData): string {\n    if (!molecule.atoms || molecule.atoms.length === 0) {\n      return this.generateFallbackXYZ(molecule.formula || 'C');\n    }\n\n    let xyzData = `${molecule.atoms.length}\\n`;\n    xyzData += `${molecule.formula || 'Molecule'}\\n`;\n    \n    for (const atom of molecule.atoms) {\n      const pos = atom.position || { x: 0, y: 0, z: 0 };\n      xyzData += `${atom.element} ${pos.x.toFixed(3)} ${pos.y.toFixed(3)} ${pos.z.toFixed(3)}\\n`;\n    }\n    \n    return xyzData;\n  }\n\n  /**\n   * Generate fallback XYZ data for simple molecules\n   */\n  private generateFallbackXYZ(formula: string): string {\n    const moleculeTemplates: { [key: string]: string } = {\n      'H2O': '3\\nWater\\nO 0.000 0.000 0.000\\nH 0.757 0.586 0.000\\nH -0.757 0.586 0.000\\n',\n      'H2': '2\\nHydrogen\\nH 0.000 0.000 0.000\\nH 0.740 0.000 0.000\\n',\n      'O2': '2\\nOxygen\\nO 0.000 0.000 0.000\\nO 1.210 0.000 0.000\\n',\n      'CO2': '3\\nCarbon Dioxide\\nC 0.000 0.000 0.000\\nO 1.160 0.000 0.000\\nO -1.160 0.000 0.000\\n',\n      'CH4': '5\\nMethane\\nC 0.000 0.000 0.000\\nH 1.089 0.000 0.000\\nH -0.363 1.027 0.000\\nH -0.363 -0.513 0.889\\nH -0.363 -0.513 -0.889\\n'\n    };\n\n    return moleculeTemplates[formula] || `1\\n${formula}\\nC 0.000 0.000 0.000\\n`;\n  }\n\n  /**\n   * Animate molecular transformations using both 3Dmol.js and Three.js\n   */\n  private animateMolecularTransformation(\n    reactants: MolecularData[],\n    products: MolecularData[],\n    duration: number\n  ): void {\n    if (!this.mol3dViewer) {\n      console.warn('3Dmol.js not available for animation');\n      return;\n    }\n\n    // Create GSAP timeline for coordinated animation\n    const tl = gsap.timeline();\n\n    // Phase 1: Show reactants\n    tl.call(() => {\n      this.createMolecularModels(reactants);\n    });\n\n    // Phase 2: Transition animation (use Three.js for effects)\n    tl.to({}, { \n      duration: duration * 0.6,\n      onUpdate: () => {\n        // Add transition effects using Three.js\n        this.renderTransitionEffects();\n      }\n    });\n\n    // Phase 3: Show products\n    tl.call(() => {\n      this.createMolecularModels(products);\n    });\n\n    tl.play();\n  }\n\n  /**\n   * Render transition effects using Three.js\n   */\n  private renderTransitionEffects(): void {\n    // Add particle effects, energy visualization, etc. using Three.js\n    // This complements the 3Dmol.js molecular rendering\n  }\n\n  /**\n   * Phase 3: AI-Enhanced Animation Creation\n   * Uses machine learning to optimize animation parameters\n   */\n  async createAIEnhancedAnimation(\n    reactants: MolecularData[],\n    products: MolecularData[],\n    reactionEquation: string\n  ): Promise<void> {\n    try {\n      // Step 1: Use AI to classify reaction type and predict optimal parameters\n      const reactionType = await this.aiClassifier.classifyReaction(reactionEquation);\n      const optimizedParams = await this.aiClassifier.optimizeAnimationParameters(\n        reactionType,\n        reactants,\n        products\n      );\n\n      // Step 2: Check intelligent cache for similar animations\n      const cacheKey = `animation:${reactionEquation}:${JSON.stringify(optimizedParams)}`;\n      const cachedAnimation = await this.cacheManager.get(cacheKey);\n      \n      if (cachedAnimation && Array.isArray(cachedAnimation)) {\n        this.animationData = cachedAnimation as AnimationFrame[];\n        this.totalFrames = cachedAnimation.length;\n        return;\n      }\n\n      // Step 3: Use physics engine for realistic molecular dynamics\n      const physicsConfig = {\n        enableCollision: reactionType.characteristics.hasEnergyRelease || reactionType.characteristics.hasGasProduction,\n        temperature: optimizedParams.temperature || 298,\n        pressure: optimizedParams.pressure || 1,\n        solvent: optimizedParams.solvent || 'vacuum'\n      };\n\n      this.physicsEngine.configure(physicsConfig);\n\n      // Step 4: Create molecular models using 3Dmol.js\n      await this.createMolecularModels(reactants);\n      console.log('🧬 Initial molecular models created with 3Dmol.js');\n\n      // Step 5: Generate physics-based animation frames\n      const transitions = this.generateMolecularTransitions(reactants, products, reactionType);\n      const animationFrames = await this.physicsEngine.simulateReactionPathway(\n        transitions,\n        optimizedParams.duration || this.config.duration\n      );\n\n      // Step 6: Set up coordinated animation using both systems\n      this.animateMolecularTransformation(\n        reactants, \n        products, \n        optimizedParams.duration || this.config.duration\n      );\n\n      // Step 7: Cache the generated animation\n      await this.cacheManager.set(cacheKey, animationFrames);\n\n      this.animationData = animationFrames;\n      this.totalFrames = animationFrames.length;\n\n    } catch (error) {\n      console.error('AI-enhanced animation creation failed:', error);\n      // Fallback to traditional animation\n      await this.createReactionAnimation(reactants, products);\n    }\n  }\n\n  /**\n   * Generate molecular transitions based on AI classification\n   */\n  private generateMolecularTransitions(\n    reactants: MolecularData[],\n    products: MolecularData[],\n    reactionType: any\n  ): MolecularTransition[] {\n    const transitions: MolecularTransition[] = [];\n\n    // Generate transitions based on reaction mechanism\n    switch (reactionType.mechanism) {\n      case 'substitution':\n        transitions.push(...this.generateSubstitutionTransitions(reactants, products));\n        break;\n      case 'addition':\n        transitions.push(...this.generateAdditionTransitions(reactants, products));\n        break;\n      case 'elimination':\n        transitions.push(...this.generateEliminationTransitions(reactants, products));\n        break;\n      default:\n        transitions.push(...this.generateGenericTransitions(reactants, products));\n    }\n\n    return transitions;\n  }\n\n  /**\n   * Create animated transition from reactants to products\n   */\n  async createReactionAnimation(\n    reactants: MolecularData[],\n    products: MolecularData[]\n  ): Promise<void> {\n    try {\n      console.log('🎬 Creating reaction animation...');\n      \n      // Clear previous animation\n      this.clearScene();\n      this.timeline.clear();\n      \n      // Create initial molecular models with 3Dmol.js\n      await this.createMolecularModels(reactants);\n      console.log('🧬 Reactant models loaded with 3Dmol.js');\n      \n      // Generate transition data\n      const transitions = await this.calculateMolecularTransitions(reactants, products);\n      \n      // Create animation frames\n      this.animationData = await this.generateAnimationFrames(transitions);\n      this.totalFrames = this.animationData.length;\n      \n      // Build 3D molecular geometries\n      await this.buildMolecularGeometries(reactants, products);\n      \n      // Create GSAP animation timeline\n      this.createAnimationTimeline(transitions);\n      \n      // Setup energy profile if enabled\n      if (this.config.showEnergyProfile) {\n        this.createEnergyProfileVisualization(transitions);\n      }\n      \n      // Setup particle effects if enabled\n      if (this.config.particleEffects) {\n        this.createParticleEffects();\n      }\n      \n      console.log('✅ Animation ready! Frames:', this.totalFrames);\n      \n    } catch (error) {\n      console.error('❌ Animation creation failed:', error);\n      throw new Error(`Animation creation failed: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  /**\n   * Calculate molecular transitions between reactants and products\n   */\n  private async calculateMolecularTransitions(\n    reactants: MolecularData[],\n    products: MolecularData[]\n  ): Promise<MolecularTransition[]> {\n    const transitions: MolecularTransition[] = [];\n    \n    // For each product, find corresponding reactant transformations\n    for (let i = 0; i < Math.max(reactants.length, products.length); i++) {\n      const reactant = reactants[i] || reactants[0]; // Use first reactant as fallback\n      const product = products[i] || products[0]; // Use first product as fallback\n      \n      const transition: MolecularTransition = {\n        startStructure: reactant,\n        endStructure: product,\n        transitionType: this.determineTransitionType(reactant, product),\n        energyBarrier: this.calculateEnergyBarrier(reactant, product),\n        transitionState: await this.generateTransitionState(reactant, product)\n      };\n      \n      transitions.push(transition);\n    }\n    \n    return transitions;\n  }\n\n  private determineTransitionType(\n    reactant: MolecularData,\n    product: MolecularData\n  ): 'formation' | 'breaking' | 'rearrangement' {\n    // Simple heuristic based on atom count changes\n    const reactantAtomCount = reactant.atoms?.length || 0;\n    const productAtomCount = product.atoms?.length || 0;\n    \n    if (reactantAtomCount < productAtomCount) {\n      return 'formation';\n    } else if (reactantAtomCount > productAtomCount) {\n      return 'breaking';\n    } else {\n      return 'rearrangement';\n    }\n  }\n\n  private calculateEnergyBarrier(\n    reactant: MolecularData,\n    product: MolecularData\n  ): number {\n    // Simplified energy barrier calculation\n    // In practice, this would use quantum chemistry calculations\n    const baseBarrier = 50; // kJ/mol\n    const complexityFactor = (reactant.atoms?.length || 1) * 2;\n    return baseBarrier + Math.random() * complexityFactor;\n  }\n\n  private async generateTransitionState(\n    reactant: MolecularData,\n    product: MolecularData\n  ): Promise<MolecularData | undefined> {\n    // Generate intermediate structure between reactant and product\n    // This is a simplified interpolation - real implementation would use\n    // advanced computational chemistry methods\n    \n    if (!reactant.atoms || !product.atoms) {\n      return undefined;\n    }\n\n    const transitionState: MolecularData = {\n      ...reactant,\n      atoms: reactant.atoms.map((atom, i) => ({\n        ...atom,\n        position: {\n          x: (atom.position.x + (product.atoms?.[i]?.position.x || atom.position.x)) / 2,\n          y: (atom.position.y + (product.atoms?.[i]?.position.y || atom.position.y)) / 2,\n          z: (atom.position.z + (product.atoms?.[i]?.position.z || atom.position.z)) / 2\n        }\n      }))\n    };\n\n    return transitionState;\n  }\n\n  /**\n   * Generate frame-by-frame animation data\n   */\n  private async generateAnimationFrames(\n    transitions: MolecularTransition[]\n  ): Promise<AnimationFrame[]> {\n    const frames: AnimationFrame[] = [];\n    const frameRate = 60; // 60 FPS\n    const totalDuration = this.config.duration * 1000; // Convert to ms\n    const frameCount = Math.floor((totalDuration / 1000) * frameRate);\n    \n    for (let frame = 0; frame <= frameCount; frame++) {\n      const progress = frame / frameCount;\n      const timestamp = (frame / frameRate) * 1000;\n      \n      // Create molecular state for this frame\n      const molecularStates = transitions.map(transition => \n        this.interpolateMolecularState(transition, progress)\n      );\n      \n      // Calculate energy level for this frame\n      const energyLevel = this.calculateFrameEnergy(transitions, progress);\n      \n      // Determine bond changes at this frame\n      const bondChanges = this.calculateBondChanges(transitions, progress);\n      \n      // Calculate atom movements\n      const atomMovements = this.calculateAtomMovements(transitions, progress);\n      \n      frames.push({\n        timestamp,\n        molecularStates,\n        energyLevel,\n        bondChanges,\n        atomMovements\n      });\n    }\n    \n    return frames;\n  }\n\n  private interpolateMolecularState(\n    transition: MolecularTransition,\n    progress: number\n  ): MolecularState {\n    const start = transition.startStructure;\n    const end = transition.endStructure;\n    \n    // Use easing function for natural motion\n    const easedProgress = gsap.parseEase(this.config.easing)(progress);\n    \n    // Interpolate atom positions\n    const atoms: AtomState[] = start.atoms?.map((startAtom, i) => {\n      const endAtom = end.atoms?.[i] || startAtom;\n      \n      return {\n        id: startAtom.id || `atom_${i}`,\n        element: startAtom.element,\n        position: new THREE.Vector3(\n          THREE.MathUtils.lerp(startAtom.position.x, endAtom.position.x, easedProgress),\n          THREE.MathUtils.lerp(startAtom.position.y, endAtom.position.y, easedProgress),\n          THREE.MathUtils.lerp(startAtom.position.z, endAtom.position.z, easedProgress)\n        ),\n        charge: THREE.MathUtils.lerp(startAtom.charge || 0, endAtom.charge || 0, easedProgress),\n        hybridization: startAtom.hybridization || 'sp3',\n        color: `#${this.getAtomColor(startAtom.element).toString(16).padStart(6, '0')}`,\n        radius: this.getAtomRadius(startAtom.element)\n      };\n    }) || [];\n    \n    // Interpolate bond states\n    const bonds: BondState[] = start.bonds?.map((startBond, i) => {\n      const endBond = end.bonds?.[i] || startBond;\n      \n      return {\n        id: startBond.id || `bond_${i}`,\n        atom1: startBond.atom1,\n        atom2: startBond.atom2,\n        order: THREE.MathUtils.lerp(startBond.order, endBond.order, easedProgress),\n        length: THREE.MathUtils.lerp(startBond.length || 1.5, endBond.length || 1.5, easedProgress),\n        strength: THREE.MathUtils.lerp(startBond.strength || 1, endBond.strength || 1, easedProgress),\n        color: `#${this.getBondColor(startBond.order).toString(16).padStart(6, '0')}`\n      };\n    }) || [];\n    \n    return {\n      atoms,\n      bonds,\n      overallCharge: start.charge || 0,\n      spinMultiplicity: start.spinMultiplicity || 1\n    };\n  }\n\n  private calculateFrameEnergy(\n    transitions: MolecularTransition[],\n    progress: number\n  ): number {\n    // Calculate energy using a reaction coordinate model\n    // Energy increases to barrier height, then decreases to product energy\n    \n    const maxBarrier = Math.max(...transitions.map(t => t.energyBarrier));\n    const barrierPosition = 0.5; // Transition state at 50% progress\n    \n    if (progress <= barrierPosition) {\n      // Rising to transition state\n      const localProgress = progress / barrierPosition;\n      return maxBarrier * localProgress * localProgress; // Quadratic rise\n    } else {\n      // Falling to products\n      const localProgress = (progress - barrierPosition) / (1 - barrierPosition);\n      return maxBarrier * (1 - localProgress * localProgress); // Quadratic fall\n    }\n  }\n\n  private calculateBondChanges(\n    transitions: MolecularTransition[],\n    progress: number\n  ): BondChange[] {\n    const changes: BondChange[] = [];\n    \n    transitions.forEach(transition => {\n      const startBonds = transition.startStructure.bonds || [];\n      const endBonds = transition.endStructure.bonds || [];\n      \n      // Find bonds that change during reaction\n      startBonds.forEach((startBond, i) => {\n        const endBond = endBonds[i];\n        if (endBond && startBond.order !== endBond.order) {\n          changes.push({\n            type: startBond.order > endBond.order ? 'breaking' : 'formation',\n            bondId: startBond.id || `bond_${i}`,\n            startOrder: startBond.order,\n            endOrder: endBond.order,\n            timeline: [0, progress, 1] // Simple timeline\n          });\n        }\n      });\n    });\n    \n    return changes;\n  }\n\n  private calculateAtomMovements(\n    transitions: MolecularTransition[],\n    progress: number\n  ): AtomMovement[] {\n    const movements: AtomMovement[] = [];\n    \n    transitions.forEach(transition => {\n      const startAtoms = transition.startStructure.atoms || [];\n      const endAtoms = transition.endStructure.atoms || [];\n      \n      startAtoms.forEach((startAtom, i) => {\n        const endAtom = endAtoms[i];\n        if (endAtom) {\n          const startPos = new THREE.Vector3(startAtom.position.x, startAtom.position.y, startAtom.position.z);\n          const endPos = new THREE.Vector3(endAtom.position.x, endAtom.position.y, endAtom.position.z);\n          const distance = startPos.distanceTo(endPos);\n          \n          if (distance > 0.1) { // Only track significant movements\n            movements.push({\n              atomId: startAtom.id || `atom_${i}`,\n              startPosition: startPos,\n              endPosition: endPos,\n              trajectory: this.generateAtomTrajectory(startPos, endPos, transition.transitionState),\n              speed: distance / this.config.duration\n            });\n          }\n        }\n      });\n    });\n    \n    return movements;\n  }\n\n  private generateAtomTrajectory(\n    start: THREE.Vector3,\n    end: THREE.Vector3,\n    transitionState?: MolecularData\n  ): THREE.Vector3[] {\n    const trajectory: THREE.Vector3[] = [];\n    const steps = 20;\n    \n    for (let i = 0; i <= steps; i++) {\n      const t = i / steps;\n      \n      // Use quadratic Bezier curve through transition state if available\n      if (transitionState?.atoms?.[0]) {\n        const control = new THREE.Vector3(\n          transitionState.atoms[0].position.x,\n          transitionState.atoms[0].position.y,\n          transitionState.atoms[0].position.z\n        );\n        \n        const point = new THREE.Vector3();\n        point.copy(start).multiplyScalar((1 - t) * (1 - t));\n        point.addScaledVector(control, 2 * (1 - t) * t);\n        point.addScaledVector(end, t * t);\n        \n        trajectory.push(point);\n      } else {\n        // Simple linear interpolation\n        const point = new THREE.Vector3();\n        point.lerpVectors(start, end, t);\n        trajectory.push(point);\n      }\n    }\n    \n    return trajectory;\n  }\n\n  /**\n   * Build 3D molecular geometries for rendering\n   */\n  private async buildMolecularGeometries(\n    reactants: MolecularData[],\n    products: MolecularData[]\n  ): Promise<void> {\n    // Clear existing geometries\n    this.atomMeshes.clear();\n    this.bondMeshes.clear();\n    \n    // Create atom geometries\n    const allMolecules = [...reactants, ...products];\n    \n    for (const molecule of allMolecules) {\n      if (molecule.atoms) {\n        for (const atom of molecule.atoms) {\n          await this.createAtomMesh(atom);\n        }\n      }\n      \n      if (molecule.bonds) {\n        for (const bond of molecule.bonds) {\n          await this.createBondMesh(bond, molecule.atoms || []);\n        }\n      }\n    }\n  }\n\n  private async createAtomMesh(atom: any): Promise<void> {\n    const geometry = new THREE.SphereGeometry(this.getAtomRadius(atom.element), 16, 12);\n    const material = new THREE.MeshLambertMaterial({\n      color: this.getAtomColor(atom.element),\n      transparent: true,\n      opacity: 0.9\n    });\n    \n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.position.set(atom.position.x, atom.position.y, atom.position.z);\n    mesh.castShadow = true;\n    mesh.receiveShadow = true;\n    \n    const atomId = atom.id || `atom_${atom.element}_${Date.now()}`;\n    this.atomMeshes.set(atomId, mesh);\n    this.scene.add(mesh);\n  }\n\n  private async createBondMesh(bond: any, atoms: any[]): Promise<void> {\n    const atom1 = atoms.find(a => a.id === bond.atom1 || a.element === bond.atom1);\n    const atom2 = atoms.find(a => a.id === bond.atom2 || a.element === bond.atom2);\n    \n    if (!atom1 || !atom2) return;\n    \n    const start = new THREE.Vector3(atom1.position.x, atom1.position.y, atom1.position.z);\n    const end = new THREE.Vector3(atom2.position.x, atom2.position.y, atom2.position.z);\n    const distance = start.distanceTo(end);\n    \n    const geometry = new THREE.CylinderGeometry(0.1, 0.1, distance, 8);\n    const material = new THREE.MeshLambertMaterial({\n      color: this.getBondColor(bond.order),\n      transparent: true,\n      opacity: 0.8\n    });\n    \n    const mesh = new THREE.Mesh(geometry, material);\n    \n    // Position and orient the bond\n    const midpoint = new THREE.Vector3().addVectors(start, end).multiplyScalar(0.5);\n    mesh.position.copy(midpoint);\n    mesh.lookAt(end);\n    mesh.rotateX(Math.PI / 2);\n    \n    const bondId = bond.id || `bond_${Date.now()}`;\n    this.bondMeshes.set(bondId, mesh);\n    this.scene.add(mesh);\n  }\n\n  /**\n   * Create GSAP animation timeline\n   */\n  private createAnimationTimeline(transitions: MolecularTransition[]): void {\n    this.timeline.clear();\n    \n    // Animate each molecular transition\n    transitions.forEach((transition, index) => {\n      this.animateMolecularTransition(transition, index);\n    });\n    \n    // Set total duration\n    this.timeline.duration(this.config.duration);\n  }\n\n  private animateMolecularTransition(transition: MolecularTransition, index: number): void {\n    const startTime = index * 0.1; // Stagger animations slightly\n    \n    // Animate atom positions\n    transition.startStructure.atoms?.forEach((startAtom, atomIndex) => {\n      const endAtom = transition.endStructure.atoms?.[atomIndex];\n      if (!endAtom) return;\n      \n      const atomId = startAtom.id || `atom_${atomIndex}`;\n      const mesh = this.atomMeshes.get(atomId);\n      if (!mesh) return;\n      \n      this.timeline.to(mesh.position, {\n        duration: this.config.duration * 0.8,\n        x: endAtom.position.x,\n        y: endAtom.position.y,\n        z: endAtom.position.z,\n        ease: this.config.easing\n      }, startTime);\n      \n      // Animate atom scaling based on charge changes\n      if (startAtom.charge !== endAtom.charge) {\n        const scaleChange = 1 + ((endAtom.charge || 0) - (startAtom.charge || 0)) * 0.1;\n        this.timeline.to(mesh.scale, {\n          duration: this.config.duration * 0.5,\n          x: scaleChange,\n          y: scaleChange,\n          z: scaleChange,\n          ease: 'elastic.out(1, 0.3)'\n        }, startTime + this.config.duration * 0.25);\n      }\n    });\n    \n    // Animate bond changes\n    if (this.config.showBondTransitions) {\n      this.animateBondTransitions(transition, startTime);\n    }\n  }\n\n  private animateBondTransitions(transition: MolecularTransition, startTime: number): void {\n    transition.startStructure.bonds?.forEach((startBond, bondIndex) => {\n      const endBond = transition.endStructure.bonds?.[bondIndex];\n      if (!endBond) return;\n      \n      const bondId = startBond.id || `bond_${bondIndex}`;\n      const mesh = this.bondMeshes.get(bondId);\n      if (!mesh) return;\n      \n      // Animate bond order changes through scaling\n      if (startBond.order !== endBond.order) {\n        const scaleChange = endBond.order / startBond.order;\n        \n        if (endBond.order > startBond.order) {\n          // Bond formation - grow effect\n          this.timeline.from(mesh.scale, {\n            duration: this.config.duration * 0.3,\n            x: 0.1,\n            y: scaleChange,\n            z: 0.1,\n            ease: 'back.out(1.7)'\n          }, startTime + this.config.duration * 0.3);\n        } else {\n          // Bond breaking - shrink effect\n          this.timeline.to(mesh.scale, {\n            duration: this.config.duration * 0.3,\n            x: 0.1,\n            y: scaleChange,\n            z: 0.1,\n            ease: 'power2.in'\n          }, startTime + this.config.duration * 0.5);\n        }\n      }\n    });\n  }\n\n  /**\n   * Create energy profile visualization\n   */\n  private createEnergyProfileVisualization(transitions: MolecularTransition[]): void {\n    const points: THREE.Vector3[] = [];\n    const maxBarrier = Math.max(...transitions.map(t => t.energyBarrier));\n    const steps = 100;\n    \n    // Generate energy curve points\n    for (let i = 0; i <= steps; i++) {\n      const progress = i / steps;\n      const energy = this.calculateFrameEnergy(transitions, progress);\n      \n      // Position curve in 3D space\n      const x = (progress - 0.5) * 15; // Spread along x-axis\n      const y = (energy / maxBarrier) * 5 - 7; // Scale and position energy\n      const z = 8; // Position behind molecules\n      \n      points.push(new THREE.Vector3(x, y, z));\n    }\n    \n    // Create line geometry\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\n    const material = new THREE.LineBasicMaterial({\n      color: 0x00ff00,\n      linewidth: 3,\n      transparent: true,\n      opacity: 0.7\n    });\n    \n    this.energyProfileMesh = new THREE.Line(geometry, material);\n    this.scene.add(this.energyProfileMesh);\n  }\n\n  /**\n   * Create particle effects for bond breaking/formation\n   */\n  private createParticleEffects(): void {\n    const particleCount = 1000;\n    const geometry = new THREE.BufferGeometry();\n    const positions = new Float32Array(particleCount * 3);\n    \n    // Initialize particle positions\n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 20;\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 20;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 20;\n    }\n    \n    geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    \n    const material = new THREE.PointsMaterial({\n      color: 0x888888,\n      size: 0.1,\n      transparent: true,\n      opacity: 0.6\n    });\n    \n    this.particleSystem = new THREE.Points(geometry, material);\n    this.scene.add(this.particleSystem);\n    \n    // Animate particles\n    this.timeline.to(this.particleSystem.rotation, {\n      duration: this.config.duration,\n      x: Math.PI * 2,\n      y: Math.PI,\n      ease: 'none'\n    }, 0);\n  }\n\n  /**\n   * Animation control methods\n   */\n  play(): void {\n    if (!this.isPlaying) {\n      this.isPlaying = true;\n      this.timeline.play();\n      this.startRenderLoop();\n    }\n  }\n\n  pause(): void {\n    this.isPlaying = false;\n    this.timeline.pause();\n  }\n\n  reset(): void {\n    this.isPlaying = false;\n    this.currentFrame = 0;\n    this.timeline.progress(0);\n    this.timeline.pause();\n  }\n\n  setProgress(progress: number): void {\n    this.timeline.progress(Math.max(0, Math.min(1, progress)));\n    this.currentFrame = Math.floor(progress * this.totalFrames);\n  }\n\n  /**\n   * Event handling\n   */\n  onProgressUpdate(callback: (progress: number) => void): void {\n    this.onProgress = callback;\n  }\n\n  onAnimationComplete(callback: () => void): void {\n    this.onComplete = callback;\n  }\n\n  onFrameChange(callback: (frame: AnimationFrame) => void): void {\n    this.onFrameUpdate = callback;\n  }\n\n  /**\n   * Utility methods\n   */\n  private getAtomColor(element: string): number {\n    const colors: Record<string, number> = {\n      'H': 0xffffff,  // White\n      'C': 0x909090,  // Gray\n      'N': 0x3050f8,  // Blue\n      'O': 0xff0d0d,  // Red\n      'F': 0x90e050,  // Green\n      'Cl': 0x1ff01f, // Bright green\n      'Br': 0xa62929, // Brown\n      'I': 0x940094,  // Purple\n      'S': 0xffff30,  // Yellow\n      'P': 0xff8000,  // Orange\n    };\n    return colors[element] || 0xffc0cb; // Default pink\n  }\n\n  private getAtomRadius(element: string): number {\n    const radii: Record<string, number> = {\n      'H': 0.31,\n      'C': 0.76,\n      'N': 0.71,\n      'O': 0.66,\n      'F': 0.57,\n      'Cl': 1.02,\n      'Br': 1.20,\n      'I': 1.39,\n      'S': 1.05,\n      'P': 1.07,\n    };\n    return (radii[element] || 1.0) * 0.3; // Scale down for visualization\n  }\n\n  private getBondColor(order: number): number {\n    if (order >= 3) return 0xff4444; // Triple bond - red\n    if (order >= 2) return 0x4444ff; // Double bond - blue\n    return 0x888888; // Single bond - gray\n  }\n\n  private onTimelineUpdate(): void {\n    const progress = this.timeline.progress();\n    const frameIndex = Math.floor(progress * this.totalFrames);\n    \n    if (frameIndex !== this.currentFrame && this.animationData[frameIndex]) {\n      this.currentFrame = frameIndex;\n      \n      if (this.onProgress) {\n        this.onProgress(progress);\n      }\n      \n      if (this.onFrameUpdate) {\n        this.onFrameUpdate(this.animationData[frameIndex]);\n      }\n    }\n  }\n\n  private handleAnimationComplete(): void {\n    this.isPlaying = false;\n    \n    if (this.onComplete) {\n      this.onComplete();\n    }\n  }\n\n  private startRenderLoop(): void {\n    const animate = () => {\n      if (this.isPlaying) {\n        requestAnimationFrame(animate);\n      }\n      this.renderer.render(this.scene, this.camera);\n    };\n    animate();\n  }\n\n  private startContinuousRender(): void {\n    const animate = () => {\n      requestAnimationFrame(animate);\n      this.renderer.render(this.scene, this.camera);\n    };\n    animate();\n    console.log('🎬 Continuous render loop started');\n  }\n\n  private onWindowResize(container: HTMLElement): void {\n    // Resize Three.js renderer\n    this.camera.aspect = container.clientWidth / container.clientHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(container.clientWidth, container.clientHeight);\n    \n    // Resize 3Dmol.js viewer\n    if (this.mol3dViewer && this.mol3dContainer) {\n      this.mol3dContainer.style.width = container.clientWidth + 'px';\n      this.mol3dContainer.style.height = container.clientHeight + 'px';\n      this.mol3dViewer.resize();\n    }\n  }\n\n  private clearScene(): void {\n    // Clear Three.js meshes\n    this.atomMeshes.forEach(mesh => {\n      this.scene.remove(mesh);\n      mesh.geometry.dispose();\n      (mesh.material as THREE.Material).dispose();\n    });\n    \n    this.bondMeshes.forEach(mesh => {\n      this.scene.remove(mesh);\n      mesh.geometry.dispose();\n      (mesh.material as THREE.Material).dispose();\n    });\n    \n    if (this.energyProfileMesh) {\n      this.scene.remove(this.energyProfileMesh);\n      this.energyProfileMesh.geometry.dispose();\n      (this.energyProfileMesh.material as THREE.Material).dispose();\n    }\n    \n    if (this.particleSystem) {\n      this.scene.remove(this.particleSystem);\n      this.particleSystem.geometry.dispose();\n      (this.particleSystem.material as THREE.Material).dispose();\n    }\n    \n    this.atomMeshes.clear();\n    this.bondMeshes.clear();\n    \n    // Clear 3Dmol.js viewer\n    if (this.mol3dViewer) {\n      this.mol3dViewer.clear();\n      this.molecularModels.clear();\n    }\n  }\n\n  /**\n   * Generate substitution reaction transitions\n   */\n  private generateSubstitutionTransitions(\n    reactants: MolecularData[],\n    products: MolecularData[]\n  ): MolecularTransition[] {\n    const transitions: MolecularTransition[] = [];\n    \n    for (let i = 0; i < Math.min(reactants.length, products.length); i++) {\n      transitions.push({\n        startStructure: reactants[i],\n        endStructure: products[i],\n        transitionType: 'rearrangement',\n        energyBarrier: 25.0, // kcal/mol typical for substitution\n      });\n    }\n    \n    return transitions;\n  }\n\n  /**\n   * Generate addition reaction transitions\n   */\n  private generateAdditionTransitions(\n    reactants: MolecularData[],\n    products: MolecularData[]\n  ): MolecularTransition[] {\n    const transitions: MolecularTransition[] = [];\n    \n    for (let i = 0; i < Math.min(reactants.length, products.length); i++) {\n      transitions.push({\n        startStructure: reactants[i],\n        endStructure: products[i],\n        transitionType: 'formation',\n        energyBarrier: 15.0, // kcal/mol typical for addition\n      });\n    }\n    \n    return transitions;\n  }\n\n  /**\n   * Generate elimination reaction transitions\n   */\n  private generateEliminationTransitions(\n    reactants: MolecularData[],\n    products: MolecularData[]\n  ): MolecularTransition[] {\n    const transitions: MolecularTransition[] = [];\n    \n    for (let i = 0; i < Math.min(reactants.length, products.length); i++) {\n      transitions.push({\n        startStructure: reactants[i],\n        endStructure: products[i],\n        transitionType: 'breaking',\n        energyBarrier: 30.0, // kcal/mol typical for elimination\n      });\n    }\n    \n    return transitions;\n  }\n\n  /**\n   * Generate generic reaction transitions\n   */\n  private generateGenericTransitions(\n    reactants: MolecularData[],\n    products: MolecularData[]\n  ): MolecularTransition[] {\n    const transitions: MolecularTransition[] = [];\n    \n    for (let i = 0; i < Math.min(reactants.length, products.length); i++) {\n      transitions.push({\n        startStructure: reactants[i],\n        endStructure: products[i],\n        transitionType: 'rearrangement',\n        energyBarrier: 20.0, // kcal/mol generic barrier\n      });\n    }\n    \n    return transitions;\n  }\n\n  /**\n   * Cleanup\n   */\n  dispose(): void {\n    this.clearScene();\n    this.timeline.kill();\n    this.renderer.dispose();\n  }\n}\n\n// Type definitions for external molecular data\ninterface MolecularData {\n  formula?: string; // Chemical formula (e.g., \"H2O\", \"CH4\")\n  atoms?: Array<{\n    id?: string;\n    element: string;\n    position: { x: number; y: number; z: number };\n    charge?: number;\n    hybridization?: string;\n  }>;\n  bonds?: Array<{\n    id?: string;\n    atom1: string;\n    atom2: string;\n    order: number;\n    length?: number;\n    strength?: number;\n  }>;\n  charge?: number;\n  spinMultiplicity?: number;\n}\n","/**\n * CREB Enhanced Animation Controller\n * \n * Addresses: Animation Issues, Performance, UI/UX, Browser Compatibility\n * - Advanced timing and transition control\n * - Optimized memory management\n * - Cross-browser compatibility\n * - Enhanced visual effects\n */\n\nimport { gsap } from 'gsap';\nimport * as THREE from 'three';\n\nexport interface EnhancedAnimationConfig {\n  // Timing & Transitions\n  duration: number;\n  easing: string;\n  transitionType: 'smooth' | 'elastic' | 'bounce' | 'stepped';\n  frameRate: number;\n  \n  // Visual Effects\n  particleEffects: boolean;\n  glowEffects: boolean;\n  trailEffects: boolean;\n  bloomIntensity: number;\n  \n  // Performance\n  qualityLevel: 'low' | 'medium' | 'high' | 'ultra';\n  adaptiveQuality: boolean;\n  maxParticles: number;\n  cullDistance: number;\n  \n  // Browser Compatibility\n  webglFallback: boolean;\n  mobileOptimizations: boolean;\n  memoryThreshold: number;\n}\n\nexport interface PerformanceMetrics {\n  fps: number;\n  frameTime: number;\n  memoryUsage: number;\n  drawCalls: number;\n  triangles: number;\n  gpuMemory: number;\n}\n\nexport class EnhancedAnimationController {\n  private config: EnhancedAnimationConfig;\n  private scene!: THREE.Scene;\n  private camera!: THREE.PerspectiveCamera;\n  private renderer!: THREE.WebGLRenderer;\n  private timeline!: gsap.core.Timeline;\n  \n  // Performance Monitoring\n  private performanceMonitor: PerformanceMonitor;\n  private memoryManager: MemoryManager;\n  private frameRateController: FrameRateController;\n  \n  // Visual Effects Systems\n  private particleSystem: ParticleSystem;\n  private postProcessor: PostProcessor;\n  private lightingSystem: LightingSystem;\n  \n  // Browser Compatibility\n  private capabilityDetector: CapabilityDetector;\n  private fallbackRenderer: FallbackRenderer;\n  \n  constructor(container: HTMLElement, config: Partial<EnhancedAnimationConfig> = {}) {\n    this.config = this.mergeConfig(config);\n    this.initializeSystems(container);\n    this.setupPerformanceMonitoring();\n    this.detectBrowserCapabilities();\n  }\n\n  private mergeConfig(config: Partial<EnhancedAnimationConfig>): EnhancedAnimationConfig {\n    return {\n      // Timing defaults\n      duration: 3000,\n      easing: 'power2.inOut',\n      transitionType: 'smooth',\n      frameRate: 60,\n      \n      // Visual effects defaults\n      particleEffects: true,\n      glowEffects: true,\n      trailEffects: false,\n      bloomIntensity: 0.5,\n      \n      // Performance defaults\n      qualityLevel: 'medium',\n      adaptiveQuality: true,\n      maxParticles: 1000,\n      cullDistance: 100,\n      \n      // Browser compatibility defaults\n      webglFallback: true,\n      mobileOptimizations: true,\n      memoryThreshold: 512, // MB\n      \n      ...config\n    };\n  }\n\n  private initializeSystems(container: HTMLElement): void {\n    try {\n      this.setupScene();\n      this.setupRenderer(container);\n      this.setupCamera();\n      this.setupTimeline();\n      \n      // Initialize subsystems with error handling\n      this.performanceMonitor = new PerformanceMonitor();\n      this.memoryManager = new MemoryManager(this.config.memoryThreshold);\n      this.frameRateController = new FrameRateController(this.config.frameRate);\n      this.particleSystem = new ParticleSystem(this.scene, this.config);\n      this.postProcessor = new PostProcessor(this.renderer, this.scene, this.camera);\n      this.lightingSystem = new LightingSystem(this.scene);\n      this.capabilityDetector = new CapabilityDetector();\n      this.fallbackRenderer = new FallbackRenderer();\n    } catch (error) {\n      console.warn('Animation system initialization failed, using fallback mode:', error);\n      this.initializeFallbackMode(container);\n    }\n  }\n\n  private setupScene(): void {\n    if (typeof THREE !== 'undefined') {\n      this.scene = new THREE.Scene();\n      this.scene.background = new THREE.Color(0x000000);\n    } else {\n      throw new Error('THREE.js not available');\n    }\n  }\n\n  private setupRenderer(container: HTMLElement): void {\n    if (typeof THREE !== 'undefined') {\n      this.renderer = new THREE.WebGLRenderer({ \n        antialias: true, \n        alpha: true \n      });\n      this.renderer.setSize(container.clientWidth, container.clientHeight);\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      container.appendChild(this.renderer.domElement);\n    } else {\n      throw new Error('THREE.js not available');\n    }\n  }\n\n  private setupCamera(): void {\n    if (typeof THREE !== 'undefined') {\n      this.camera = new THREE.PerspectiveCamera(\n        75, \n        window.innerWidth / window.innerHeight, \n        0.1, \n        1000\n      );\n      this.camera.position.z = 5;\n    } else {\n      throw new Error('THREE.js not available');\n    }\n  }\n\n  private setupTimeline(): void {\n    if (typeof gsap !== 'undefined') {\n      this.timeline = gsap.timeline({ paused: true });\n    } else {\n      throw new Error('GSAP not available');\n    }\n  }\n\n  private initializeFallbackMode(container: HTMLElement): void {\n    // Create a simple fallback interface\n    container.innerHTML = `\n      <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; color: #666;\">\n        <div style=\"text-align: center;\">\n          <h3>Animation System Fallback</h3>\n          <p>Enhanced animations unavailable. Dependencies missing.</p>\n          <small>Required: THREE.js, GSAP</small>\n        </div>\n      </div>\n    `;\n    \n    // Create mock objects to prevent further errors\n    this.scene = {} as any;\n    this.camera = {} as any;\n    this.renderer = {} as any;\n    this.timeline = {} as any;\n  }\n\n  private setupPerformanceMonitoring(): void {\n    this.performanceMonitor.onPerformanceDrop = (metrics: PerformanceMetrics) => {\n      if (this.config.adaptiveQuality) {\n        this.adaptQuality(metrics);\n      }\n    };\n\n    this.memoryManager.onMemoryPressure = () => {\n      this.handleMemoryPressure();\n    };\n  }\n\n  private detectBrowserCapabilities(): void {\n    const capabilities = this.capabilityDetector.detect();\n    \n    if (!capabilities.webgl && this.config.webglFallback) {\n      this.enableFallbackMode();\n    }\n    \n    if (capabilities.mobile && this.config.mobileOptimizations) {\n      this.enableMobileOptimizations();\n    }\n  }\n\n  // Enhanced Animation Methods\n  public async animateReaction(\n    reactants: MolecularData[], \n    products: MolecularData[],\n    options: AnimationOptions = {}\n  ): Promise<void> {\n    try {\n      // Clear previous animation\n      this.timeline.clear();\n      this.scene.clear();\n      \n      // Setup initial state\n      await this.setupMolecules(reactants, 'reactants');\n      \n      // Create enhanced transition sequence\n      const transitionSequence = this.createTransitionSequence(reactants, products, options);\n      \n      // Add visual effects\n      if (this.config.particleEffects) {\n        this.addParticleEffects(transitionSequence);\n      }\n      \n      if (this.config.glowEffects) {\n        this.addGlowEffects();\n      }\n      \n      // Execute animation with performance monitoring\n      return this.executeAnimationSequence(transitionSequence);\n      \n    } catch (error) {\n      console.error('Animation failed:', error);\n      await this.handleAnimationError(error);\n    }\n  }\n\n  private createTransitionSequence(\n    reactants: MolecularData[], \n    products: MolecularData[],\n    options: AnimationOptions\n  ): AnimationSequence {\n    const sequence = new AnimationSequence();\n    \n    // Phase 1: Setup and Introduction (0-20%)\n    sequence.addPhase('introduction', 0, 0.2, () => {\n      this.timeline.from('.molecule-reactant', {\n        scale: 0,\n        opacity: 0,\n        duration: this.config.duration * 0.15,\n        ease: this.config.easing,\n        stagger: 0.1\n      });\n    });\n    \n    // Phase 2: Bond Breaking (20-40%)\n    sequence.addPhase('breaking', 0.2, 0.4, () => {\n      this.animateBondBreaking(reactants, options);\n    });\n    \n    // Phase 3: Transition State (40-60%)\n    sequence.addPhase('transition', 0.4, 0.6, () => {\n      this.animateTransitionState(reactants, products, options);\n    });\n    \n    // Phase 4: Bond Formation (60-80%)\n    sequence.addPhase('formation', 0.6, 0.8, () => {\n      this.animateBondFormation(products, options);\n    });\n    \n    // Phase 5: Final State (80-100%)\n    sequence.addPhase('completion', 0.8, 1.0, () => {\n      this.animateCompletion(products, options);\n    });\n    \n    return sequence;\n  }\n\n  private animateBondBreaking(molecules: MolecularData[], options: AnimationOptions): void {\n    molecules.forEach((molecule, index) => {\n      molecule.bonds?.forEach((bond, bondIndex) => {\n        const breakTime = this.config.duration * (0.2 + 0.15 * Math.random());\n        \n        this.timeline.to(`#bond-${molecule.id}-${bondIndex}`, {\n          opacity: 0,\n          scaleY: 0,\n          duration: breakTime * 0.3,\n          ease: 'power2.out',\n          delay: bondIndex * 0.05\n        });\n        \n        // Add particle effect for bond breaking\n        if (this.config.particleEffects) {\n          this.particleSystem.createBondBreakEffect(bond, breakTime);\n        }\n      });\n    });\n  }\n\n  private animateTransitionState(\n    reactants: MolecularData[], \n    products: MolecularData[],\n    options: AnimationOptions\n  ): void {\n    // Create smooth interpolation between reactants and products\n    const transitionDuration = this.config.duration * 0.2;\n    \n    // Animate atomic positions\n    reactants.forEach((reactant, rIndex) => {\n      const correspondingProduct = products[rIndex];\n      if (!correspondingProduct) return;\n      \n      reactant.atoms?.forEach((atom, aIndex) => {\n        const targetAtom = correspondingProduct.atoms?.[aIndex];\n        if (!targetAtom) return;\n        \n        this.timeline.to(`#atom-${reactant.id}-${aIndex}`, {\n          x: targetAtom.position.x,\n          y: targetAtom.position.y,\n          z: targetAtom.position.z,\n          duration: transitionDuration,\n          ease: 'power1.inOut',\n          delay: aIndex * 0.02\n        });\n      });\n    });\n    \n    // Add energy visualization\n    if (options.showEnergyProfile) {\n      this.animateEnergyProfile(transitionDuration);\n    }\n  }\n\n  private animateBondFormation(products: MolecularData[], options: AnimationOptions): void {\n    products.forEach((product, index) => {\n      product.bonds?.forEach((bond, bondIndex) => {\n        const formTime = this.config.duration * (0.6 + 0.15 * Math.random());\n        \n        // Start with invisible/scaled bond\n        gsap.set(`#bond-${product.id}-${bondIndex}`, { \n          opacity: 0, \n          scaleY: 0 \n        });\n        \n        this.timeline.to(`#bond-${product.id}-${bondIndex}`, {\n          opacity: 1,\n          scaleY: 1,\n          duration: formTime * 0.4,\n          ease: 'back.out(1.7)',\n          delay: bondIndex * 0.08\n        });\n        \n        // Add formation effect\n        if (this.config.particleEffects) {\n          this.particleSystem.createBondFormEffect(bond, formTime);\n        }\n      });\n    });\n  }\n\n  private animateCompletion(products: MolecularData[], options: AnimationOptions): void {\n    // Final positioning and stabilization\n    this.timeline.to('.molecule-product', {\n      scale: 1,\n      opacity: 1,\n      duration: this.config.duration * 0.15,\n      ease: 'elastic.out(1, 0.3)',\n      stagger: 0.1\n    });\n    \n    // Add completion glow effect\n    if (this.config.glowEffects) {\n      this.timeline.to('.molecule-product', {\n        filter: 'drop-shadow(0 0 20px #00ff88)',\n        duration: 0.5,\n        yoyo: true,\n        repeat: 1\n      });\n    }\n  }\n\n  private animateEnergyProfile(duration: number): void {\n    const energyBar = document.querySelector('.energy-profile');\n    if (!energyBar) return;\n    \n    // Create energy barrier visualization\n    this.timeline.to(energyBar, {\n      height: '80%',\n      backgroundColor: '#ff6b35',\n      duration: duration * 0.3,\n      ease: 'power2.out'\n    }).to(energyBar, {\n      height: '20%',\n      backgroundColor: '#00ff88',\n      duration: duration * 0.7,\n      ease: 'power2.in'\n    });\n  }\n\n  // Performance Management\n  private adaptQuality(metrics: PerformanceMetrics): void {\n    if (metrics.fps < 30) {\n      this.reduceQuality();\n    } else if (metrics.fps > 55 && this.config.qualityLevel !== 'ultra') {\n      this.increaseQuality();\n    }\n  }\n\n  private reduceQuality(): void {\n    const qualityLevels = ['ultra', 'high', 'medium', 'low'];\n    const currentIndex = qualityLevels.indexOf(this.config.qualityLevel);\n    \n    if (currentIndex < qualityLevels.length - 1) {\n      this.config.qualityLevel = qualityLevels[currentIndex + 1] as any;\n      this.applyQualitySettings();\n    }\n  }\n\n  private increaseQuality(): void {\n    const qualityLevels = ['low', 'medium', 'high', 'ultra'];\n    const currentIndex = qualityLevels.indexOf(this.config.qualityLevel);\n    \n    if (currentIndex < qualityLevels.length - 1) {\n      this.config.qualityLevel = qualityLevels[currentIndex + 1] as any;\n      this.applyQualitySettings();\n    }\n  }\n\n  private applyQualitySettings(): void {\n    switch (this.config.qualityLevel) {\n      case 'low':\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1));\n        this.config.maxParticles = 200;\n        this.postProcessor.setEffectsEnabled(false);\n        break;\n        \n      case 'medium':\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1.5));\n        this.config.maxParticles = 500;\n        this.postProcessor.setEffectsEnabled(true);\n        break;\n        \n      case 'high':\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n        this.config.maxParticles = 1000;\n        this.postProcessor.setEffectsEnabled(true);\n        break;\n        \n      case 'ultra':\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.config.maxParticles = 2000;\n        this.postProcessor.setEffectsEnabled(true);\n        break;\n    }\n  }\n\n  private handleMemoryPressure(): void {\n    // Clean up unused resources\n    this.memoryManager.cleanup();\n    \n    // Reduce particle count\n    this.particleSystem.reduceParticleCount(0.5);\n    \n    // Clear texture cache\n    this.renderer.dispose();\n    \n    // Force garbage collection if available\n    if ('gc' in window) {\n      (window as any).gc();\n    }\n  }\n\n  // Browser Compatibility\n  private enableFallbackMode(): void {\n    console.warn('WebGL not supported, enabling fallback mode');\n    this.fallbackRenderer.initialize();\n  }\n\n  private enableMobileOptimizations(): void {\n    this.config.maxParticles = Math.min(this.config.maxParticles, 300);\n    this.config.qualityLevel = 'low';\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1.5));\n  }\n\n  // Error Handling\n  private async handleAnimationError(error: Error): Promise<void> {\n    console.error('Animation error:', error);\n    \n    // Try fallback animation\n    if (this.fallbackRenderer.isAvailable()) {\n      await this.fallbackRenderer.animateReaction();\n    } else {\n      // Show error message to user\n      this.showErrorMessage('Animation failed. Please try refreshing the page.');\n    }\n  }\n\n  private showErrorMessage(message: string): void {\n    const errorDiv = document.createElement('div');\n    errorDiv.className = 'animation-error';\n    errorDiv.textContent = message;\n    errorDiv.style.cssText = `\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background: rgba(255, 0, 0, 0.8);\n      color: white;\n      padding: 20px;\n      border-radius: 10px;\n      z-index: 1000;\n    `;\n    \n    document.body.appendChild(errorDiv);\n    \n    setTimeout(() => {\n      document.body.removeChild(errorDiv);\n    }, 5000);\n  }\n\n  // Public API\n  public play(): void {\n    try {\n      if (this.timeline && typeof this.timeline.play === 'function') {\n        this.timeline.play();\n      }\n    } catch (error) {\n      console.warn('Error playing animation:', error);\n    }\n  }\n\n  public pause(): void {\n    try {\n      if (this.timeline && typeof this.timeline.pause === 'function') {\n        this.timeline.pause();\n      }\n    } catch (error) {\n      console.warn('Error pausing animation:', error);\n    }\n  }\n\n  public stop(): void {\n    try {\n      if (this.timeline && typeof this.timeline.pause === 'function') {\n        this.timeline.pause();\n        if (typeof this.timeline.progress === 'function') {\n          this.timeline.progress(0);\n        }\n      }\n    } catch (error) {\n      console.warn('Error stopping animation:', error);\n    }\n  }\n\n  public setSpeed(speed: number): void {\n    try {\n      if (this.timeline && typeof this.timeline.timeScale === 'function') {\n        this.timeline.timeScale(speed);\n      }\n    } catch (error) {\n      console.warn('Error setting animation speed:', error);\n    }\n  }\n\n  public getPerformanceMetrics(): PerformanceMetrics {\n    try {\n      return this.performanceMonitor ? this.performanceMonitor.getMetrics() : {} as any;\n    } catch (error) {\n      console.warn('Error getting performance metrics:', error);\n      return {} as any;\n    }\n  }\n\n  public dispose(): void {\n    try {\n      if (this.timeline && typeof this.timeline.kill === 'function') {\n        this.timeline.kill();\n      }\n      if (this.particleSystem && typeof this.particleSystem.dispose === 'function') {\n        this.particleSystem.dispose();\n      }\n      if (this.postProcessor && typeof this.postProcessor.dispose === 'function') {\n        this.postProcessor.dispose();\n      }\n      if (this.renderer && typeof this.renderer.dispose === 'function') {\n        this.renderer.dispose();\n      }\n      if (this.memoryManager && typeof this.memoryManager.dispose === 'function') {\n        this.memoryManager.dispose();\n      }\n    } catch (error) {\n      console.warn('Error during animation controller disposal:', error);\n    }\n  }\n}\n\n// Supporting Classes (simplified interfaces for brevity)\nclass PerformanceMonitor {\n  onPerformanceDrop?: (metrics: PerformanceMetrics) => void;\n  \n  getMetrics(): PerformanceMetrics { \n    return { \n      fps: 60, \n      memory: 0.1, \n      renderTime: 16,\n      frameDrops: 0,\n      averageFPS: 60\n    } as any; \n  }\n  \n  startFrame(): void {}\n  endFrame(): void {}\n}\n\nclass MemoryManager {\n  onMemoryPressure?: () => void;\n  private threshold: number;\n  \n  constructor(threshold: number) {\n    this.threshold = threshold;\n  }\n  \n  cleanup(): void {}\n  dispose(): void {}\n  getUsage(): number { return 0.1; }\n}\n\nclass FrameRateController {\n  private targetFPS: number;\n  \n  constructor(targetFps: number) {\n    this.targetFPS = targetFps;\n  }\n  \n  setTargetFPS(fps: number): void {\n    this.targetFPS = fps;\n  }\n  \n  getCurrentFPS(): number { return this.targetFPS; }\n}\n\nclass ParticleSystem {\n  constructor(scene: THREE.Scene, config: EnhancedAnimationConfig) {}\n  createBondBreakEffect(bond: any, time: number): void {}\n  createBondFormEffect(bond: any, time: number): void {}\n  reduceParticleCount(factor: number): void {}\n  dispose(): void {}\n}\n\nclass PostProcessor {\n  constructor(renderer: THREE.WebGLRenderer, scene: THREE.Scene, camera: THREE.Camera) {}\n  setEffectsEnabled(enabled: boolean): void {}\n  dispose(): void {}\n}\n\nclass LightingSystem {\n  constructor(scene: THREE.Scene) {}\n}\n\nclass CapabilityDetector {\n  detect(): { webgl: boolean; mobile: boolean } {\n    return {\n      webgl: !!window.WebGLRenderingContext,\n      mobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n    };\n  }\n}\n\nclass FallbackRenderer {\n  initialize(): void {}\n  isAvailable(): boolean { return true; }\n  async animateReaction(): Promise<void> {}\n}\n\nclass AnimationSequence {\n  addPhase(name: string, start: number, end: number, animation: () => void): void {}\n}\n\ninterface MolecularData {\n  id: string;\n  atoms?: any[];\n  bonds?: any[];\n  formula?: string;\n}\n\ninterface AnimationOptions {\n  showEnergyProfile?: boolean;\n}\n","/**\n * CREB Enhanced Molecular Rendering System\n * \n * Addresses: Molecular Rendering, Structure Accuracy, Performance\n * - High-quality 3Dmol.js integration\n * - Accurate molecular structure display\n * - Optimized rendering pipeline\n * - Scientific visualization standards\n */\n\nimport { PubChemIntegration } from '../visualization/PubChemIntegration';\n\nexport interface RenderingConfig {\n  // Structure Accuracy\n  useExperimentalData: boolean;\n  preferConformers: boolean;\n  validateGeometry: boolean;\n  hydrogenDisplay: 'auto' | 'show' | 'hide';\n  \n  // Visual Quality\n  antialiasing: boolean;\n  shadows: boolean;\n  ambientOcclusion: boolean;\n  materialQuality: 'low' | 'medium' | 'high' | 'scientific';\n  \n  // Performance\n  levelOfDetail: boolean;\n  cullingEnabled: boolean;\n  instancedRendering: boolean;\n  maxAtoms: number;\n}\n\nexport interface MolecularVisualization {\n  id: string;\n  structure: string;\n  format: 'pdb' | 'sdf' | 'mol2' | 'xyz';\n  quality: 'experimental' | 'calculated' | 'predicted';\n  confidence: number;\n  source: string;\n  metadata: MolecularMetadata;\n}\n\nexport interface MolecularMetadata {\n  formula: string;\n  molecularWeight: number;\n  atomCount: number;\n  bondCount: number;\n  charge: number;\n  multiplicity: number;\n  energy?: number;\n  symmetry?: string;\n}\n\nexport interface RenderingValidation {\n  geometryValid: boolean;\n  bondsReasonable: boolean;\n  chargeBalance: boolean;\n  stereoChemistry: boolean;\n  warnings: string[];\n  errors: string[];\n}\n\nexport class EnhancedMolecularRenderer {\n  private config: RenderingConfig;\n  private pubchemIntegration: PubChemIntegration;\n  private mol3dViewer: any;\n  private renderingCache: Map<string, MolecularVisualization> = new Map();\n  private validationEngine: StructureValidator;\n  private qualityAssessment: QualityAssessment;\n  private performanceOptimizer: RenderingOptimizer;\n  private viewerAvailable: boolean = false;\n  \n  constructor(container: HTMLElement, config: Partial<RenderingConfig> = {}) {\n    this.config = this.mergeConfig(config);\n    this.pubchemIntegration = new PubChemIntegration();\n    this.validationEngine = new StructureValidator();\n    this.qualityAssessment = new QualityAssessment();\n    this.performanceOptimizer = new RenderingOptimizer();\n    \n    this.initializeMol3D(container);\n  }\n\n  private mergeConfig(config: Partial<RenderingConfig>): RenderingConfig {\n    return {\n      // Structure accuracy defaults\n      useExperimentalData: true,\n      preferConformers: true,\n      validateGeometry: true,\n      hydrogenDisplay: 'auto',\n      \n      // Visual quality defaults\n      antialiasing: true,\n      shadows: true,\n      ambientOcclusion: false,\n      materialQuality: 'high',\n      \n      // Performance defaults\n      levelOfDetail: true,\n      cullingEnabled: true,\n      instancedRendering: true,\n      maxAtoms: 10000,\n      \n      ...config\n    };\n  }\n\n  private initializeMol3D(container: HTMLElement): void {\n    try {\n      // Check if 3Dmol.js is available\n      if (typeof window === 'undefined' || !window.$3Dmol) {\n        throw new Error('3Dmol.js is not available. Please include 3Dmol.js library.');\n      }\n\n      // Initialize 3Dmol.js with enhanced settings\n      this.mol3dViewer = window.$3Dmol.createViewer(container, {\n        defaultcolors: this.getColorScheme(),\n        backgroundColor: 'white',\n        antialias: this.config.antialiasing,\n        // Enhanced 3Dmol.js configuration\n        camera: {\n          fov: 45,\n          near: 0.1,\n          far: 1000\n        }\n      });\n      \n      // Setup enhanced rendering pipeline\n      this.setupEnhancedRendering();\n      this.viewerAvailable = true;\n      \n    } catch (error) {\n      console.warn('Enhanced 3Dmol.js initialization failed:', error.message);\n      this.viewerAvailable = false;\n      \n      // Fallback to basic container\n      container.innerHTML = `\n        <div style=\"\n          display: flex; \n          align-items: center; \n          justify-content: center; \n          height: 100%; \n          background: #f0f0f0;\n          color: #666;\n          text-align: center;\n          padding: 20px;\n        \">\n          <div>\n            <h3>3D Viewer Unavailable</h3>\n            <p>Enhanced molecular rendering requires 3Dmol.js library</p>\n            <small>Using fallback display mode</small>\n          </div>\n        </div>\n      `;\n    }\n  }\n\n  private isViewerAvailable(): boolean {\n    return this.viewerAvailable && this.mol3dViewer;\n  }\n\n  private setupEnhancedRendering(): void {\n    // Enable shadows if supported\n    if (this.config.shadows) {\n      this.mol3dViewer.enableFog(true);\n    }\n    \n    // Setup lighting for scientific accuracy\n    this.setupScientificLighting();\n    \n    // Configure material properties\n    this.setupMaterialProperties();\n  }\n\n  private setupScientificLighting(): void {\n    // Three-point lighting setup for optimal molecular visualization\n    const lightConfig = {\n      key: { \n        color: 0xffffff, \n        intensity: 0.8, \n        position: { x: 10, y: 10, z: 10 } \n      },\n      fill: { \n        color: 0x88ccff, \n        intensity: 0.4, \n        position: { x: -5, y: 0, z: 5 } \n      },\n      rim: { \n        color: 0xffaa88, \n        intensity: 0.3, \n        position: { x: 0, y: 0, z: -10 } \n      }\n    };\n    \n    // Apply lighting configuration (3Dmol.js specific implementation)\n    Object.entries(lightConfig).forEach(([type, config]) => {\n      // Implementation would depend on 3Dmol.js API\n    });\n  }\n\n  private setupMaterialProperties(): void {\n    const materialSettings = this.getMaterialSettings();\n    // Configure 3Dmol.js materials based on quality level\n  }\n\n  private getMaterialSettings() {\n    switch (this.config.materialQuality) {\n      case 'low':\n        return {\n          shininess: 10,\n          specular: 0x111111,\n          roughness: 0.8\n        };\n      case 'medium':\n        return {\n          shininess: 30,\n          specular: 0x333333,\n          roughness: 0.6\n        };\n      case 'high':\n        return {\n          shininess: 100,\n          specular: 0x666666,\n          roughness: 0.3\n        };\n      case 'scientific':\n        return {\n          shininess: 150,\n          specular: 0x888888,\n          roughness: 0.1,\n          metalness: 0.1\n        };\n    }\n  }\n\n  private getColorScheme(): any {\n    // Scientific color scheme based on CPK colors\n    return {\n      H: 0xffffff,   // White\n      C: 0x909090,   // Gray\n      N: 0x3050f8,   // Blue\n      O: 0xff0d0d,   // Red\n      P: 0xff8000,   // Orange\n      S: 0xffff30,   // Yellow\n      F: 0x90e050,   // Light Green\n      Cl: 0x1ff01f,  // Green\n      Br: 0xa62929,  // Dark Red\n      I: 0x940094,   // Purple\n      // Add more elements as needed\n    };\n  }\n\n  // Enhanced Molecular Loading with Quality Validation\n  public async loadMolecule(\n    identifier: string, \n    options: LoadingOptions = {}\n  ): Promise<MolecularVisualization> {\n    try {\n      // Check if viewer is available\n      if (!this.isViewerAvailable()) {\n        return {\n          id: identifier,\n          structure: 'fallback',\n          format: 'pdb',\n          quality: 'predicted',\n          confidence: 0,\n          source: 'fallback',\n          metadata: {\n            formula: identifier,\n            molecularWeight: 0,\n            atomCount: 0,\n            bondCount: 0,\n            charge: 0,\n            multiplicity: 1\n          }\n        };\n      }\n\n      // Check cache first\n      const cached = this.renderingCache.get(identifier);\n      if (cached && !options.forceRefresh) {\n        await this.renderCachedMolecule(cached);\n        return cached;\n      }\n\n      // Load high-quality structure data\n      const structureData = await this.loadHighQualityStructure(identifier, options);\n      \n      // Validate structure accuracy\n      const validation = await this.validateStructure(structureData);\n      \n      if (!validation.geometryValid && options.strictValidation) {\n        throw new Error(`Invalid molecular geometry: ${validation.errors.join(', ')}`);\n      }\n      \n      // Create molecular visualization\n      const visualization = await this.createVisualization(structureData, validation);\n      \n      // Cache the result\n      this.renderingCache.set(identifier, visualization);\n      \n      // Render with enhanced settings\n      await this.renderMolecule(visualization, options);\n      \n      return visualization;\n      \n    } catch (error) {\n      console.error(`Failed to load molecule ${identifier}:`, error);\n      throw error;\n    }\n  }\n\n  private async loadHighQualityStructure(\n    identifier: string, \n    options: LoadingOptions\n  ): Promise<StructureData> {\n    let structureData: StructureData;\n    \n    try {\n      // First, try experimental structure from PubChem\n      if (this.config.useExperimentalData) {\n        const searchResult = await this.pubchemIntegration.searchCompounds(identifier, {\n          searchType: 'name',\n          limit: 1,\n          include3D: true\n        });\n        \n        if (searchResult.success && searchResult.compounds.length > 0) {\n          const cid = searchResult.compounds[0].cid;\n          // Try 3D SDF first (highest quality)\n          const sdf3D = await this.pubchemIntegration.getCompound3DSDF(cid);\n          if (sdf3D) {\n            structureData = {\n              structure: sdf3D,\n              format: 'sdf',\n              quality: 'experimental',\n              confidence: 0.95,\n              source: 'PubChem 3D'\n            };\n          } else {\n            // Fallback to 2D structure with 3D generation\n            const molecularData = await this.pubchemIntegration.getMolecularData(cid, false);\n            if (molecularData && molecularData.structure2D) {\n              const generated3D = await this.generate3DCoordinates(molecularData.structure2D);\n              structureData = {\n                structure: generated3D,\n                format: 'sdf',\n                quality: 'calculated',\n                confidence: 0.80,\n                source: 'PubChem 2D + Generated 3D'\n              };\n            }\n          }\n        }\n      }\n      \n      // If no experimental data, try conformer generation\n      if (!structureData && this.config.preferConformers) {\n        structureData = await this.generateConformers(identifier);\n      }\n      \n      // Final fallback\n      if (!structureData) {\n        throw new Error(`No structure data available for ${identifier}`);\n      }\n      \n      return structureData;\n      \n    } catch (error) {\n      throw new Error(`Structure loading failed: ${error.message}`);\n    }\n  }\n\n  private async generate3DCoordinates(structure2D: string): Promise<string> {\n    // Use RDKit or similar for 3D coordinate generation\n    // This is a placeholder - would need actual implementation\n    return structure2D;\n  }\n\n  private async generateConformers(identifier: string): Promise<StructureData> {\n    // Generate multiple conformers and select the lowest energy one\n    // Placeholder implementation\n    return {\n      structure: '',\n      format: 'sdf',\n      quality: 'predicted',\n      confidence: 0.60,\n      source: 'Conformer Generation'\n    };\n  }\n\n  private async validateStructure(structureData: StructureData): Promise<RenderingValidation> {\n    return this.validationEngine.validate(structureData);\n  }\n\n  private async createVisualization(\n    structureData: StructureData, \n    validation: RenderingValidation\n  ): Promise<MolecularVisualization> {\n    const metadata = await this.extractMetadata(structureData.structure);\n    \n    return {\n      id: this.generateId(),\n      structure: structureData.structure,\n      format: structureData.format as any,\n      quality: structureData.quality,\n      confidence: structureData.confidence,\n      source: structureData.source,\n      metadata\n    };\n  }\n\n  private async extractMetadata(structure: string): Promise<MolecularMetadata> {\n    // Parse structure to extract molecular metadata\n    // This would use appropriate parsing libraries\n    return {\n      formula: 'C6H12O6', // Placeholder\n      molecularWeight: 180.16,\n      atomCount: 24,\n      bondCount: 23,\n      charge: 0,\n      multiplicity: 1\n    };\n  }\n\n  private async renderMolecule(\n    visualization: MolecularVisualization, \n    options: LoadingOptions\n  ): Promise<void> {\n    // Clear previous structures\n    this.mol3dViewer.removeAllModels();\n    \n    // Add molecule with validation\n    const model = this.mol3dViewer.addModel(\n      visualization.structure, \n      visualization.format\n    );\n    \n    // Apply enhanced styling based on quality and type\n    const style = this.getEnhancedStyle(visualization, options);\n    this.mol3dViewer.setStyle({}, style);\n    \n    // Add surfaces if requested\n    if (options.showSurface) {\n      this.addMolecularSurface(visualization, options);\n    }\n    \n    // Apply hydrogen display rules\n    this.applyHydrogenDisplay(visualization);\n    \n    // Optimize rendering performance\n    if (this.config.levelOfDetail) {\n      this.applyLevelOfDetail(visualization);\n    }\n    \n    // Render with validation\n    this.mol3dViewer.render();\n    \n    // Zoom to fit with proper margins\n    this.mol3dViewer.zoomTo();\n  }\n\n  private getEnhancedStyle(\n    visualization: MolecularVisualization, \n    options: LoadingOptions\n  ): any {\n    const baseStyle: any = {};\n    \n    // Choose representation based on molecule size and type\n    if (visualization.metadata.atomCount < 50) {\n      // Small molecules: ball-and-stick\n      baseStyle.stick = {\n        radius: 0.15,\n        colorscheme: 'Jmol'\n      };\n      baseStyle.sphere = {\n        scale: 0.25,\n        colorscheme: 'element'\n      };\n    } else if (visualization.metadata.atomCount < 500) {\n      // Medium molecules: stick only\n      baseStyle.stick = {\n        radius: 0.1,\n        colorscheme: 'Jmol'\n      };\n    } else {\n      // Large molecules: cartoon or ribbon\n      baseStyle.cartoon = {\n        color: 'spectrum'\n      };\n    }\n    \n    return baseStyle;\n  }\n\n  private addMolecularSurface(\n    visualization: MolecularVisualization, \n    options: LoadingOptions\n  ): void {\n    const surfaceOptions = {\n      opacity: options.surfaceOpacity || 0.7,\n      colorscheme: options.surfaceColor || 'RdYlBu'\n    };\n    \n    switch (options.surfaceType) {\n      case 'vdw':\n        this.mol3dViewer.addSurface('VDW', surfaceOptions);\n        break;\n      case 'sas':\n        this.mol3dViewer.addSurface('SAS', surfaceOptions);\n        break;\n      case 'ms':\n        this.mol3dViewer.addSurface('MS', surfaceOptions);\n        break;\n      default:\n        this.mol3dViewer.addSurface('VDW', surfaceOptions);\n    }\n  }\n\n  private applyHydrogenDisplay(visualization: MolecularVisualization): void {\n    switch (this.config.hydrogenDisplay) {\n      case 'hide':\n        this.mol3dViewer.setStyle({ elem: 'H' }, { hidden: true });\n        break;\n      case 'show':\n        // Hydrogens are shown by default\n        break;\n      case 'auto':\n        // Show hydrogens only for small molecules\n        if (visualization.metadata.atomCount < 30) {\n          // Show hydrogens\n        } else {\n          this.mol3dViewer.setStyle({ elem: 'H' }, { hidden: true });\n        }\n        break;\n    }\n  }\n\n  private applyLevelOfDetail(visualization: MolecularVisualization): void {\n    // Implement level-of-detail rendering for performance\n    if (visualization.metadata.atomCount > this.config.maxAtoms) {\n      // Simplify representation for very large molecules\n      this.mol3dViewer.setStyle({}, { line: { linewidth: 2 } });\n    }\n  }\n\n  private async renderCachedMolecule(cached: MolecularVisualization): Promise<void> {\n    // Quickly render from cache\n    const model = this.mol3dViewer.addModel(cached.structure, cached.format);\n    this.mol3dViewer.setStyle({}, this.getEnhancedStyle(cached, {}));\n    this.mol3dViewer.render();\n    this.mol3dViewer.zoomTo();\n  }\n\n  private generateId(): string {\n    return `mol_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  // Public API for enhanced molecular rendering\n  public async renderReaction(\n    reactants: string[], \n    products: string[], \n    options: ReactionRenderingOptions = {}\n  ): Promise<void> {\n    try {\n      // Clear viewer\n      this.mol3dViewer.removeAllModels();\n      \n      // Load all molecules\n      const reactantViz = await Promise.all(\n        reactants.map(r => this.loadMolecule(r, { ...options, render: false }))\n      );\n      \n      const productViz = await Promise.all(\n        products.map(p => this.loadMolecule(p, { ...options, render: false }))\n      );\n      \n      // Arrange molecules in reaction layout\n      await this.arrangeReactionLayout(reactantViz, productViz, options);\n      \n    } catch (error) {\n      console.error('Reaction rendering failed:', error);\n      throw error;\n    }\n  }\n\n  private async arrangeReactionLayout(\n    reactants: MolecularVisualization[],\n    products: MolecularVisualization[],\n    options: ReactionRenderingOptions\n  ): Promise<void> {\n    // Calculate positions for reactants and products\n    const spacing = options.moleculeSpacing || 5;\n    \n    // Position reactants on the left\n    reactants.forEach((mol, index) => {\n      const model = this.mol3dViewer.addModel(mol.structure, mol.format);\n      const position = { x: -spacing * (reactants.length - 1) / 2 + spacing * index, y: 0, z: 0 };\n      // Set model position (3Dmol.js specific)\n    });\n    \n    // Position products on the right\n    products.forEach((mol, index) => {\n      const model = this.mol3dViewer.addModel(mol.structure, mol.format);\n      const position = { x: spacing + spacing * index, y: 0, z: 0 };\n      // Set model position (3Dmol.js specific)\n    });\n    \n    // Apply consistent styling\n    this.mol3dViewer.setStyle({}, {\n      stick: { radius: 0.15 },\n      sphere: { scale: 0.25 }\n    });\n    \n    this.mol3dViewer.render();\n    this.mol3dViewer.zoomTo();\n  }\n\n  public getQualityReport(moleculeId: string): QualityReport | null {\n    const visualization = this.renderingCache.get(moleculeId);\n    if (!visualization) return null;\n    \n    return this.qualityAssessment.generateReport(visualization);\n  }\n\n  public dispose(): void {\n    this.mol3dViewer.clear();\n    this.renderingCache.clear();\n    this.performanceOptimizer.cleanup();\n  }\n}\n\n// Supporting interfaces and classes\ninterface StructureData {\n  structure: string;\n  format: string;\n  quality: string;\n  confidence: number;\n  source: string;\n}\n\ninterface LoadingOptions {\n  forceRefresh?: boolean;\n  strictValidation?: boolean;\n  showSurface?: boolean;\n  surfaceType?: 'vdw' | 'sas' | 'ms';\n  surfaceOpacity?: number;\n  surfaceColor?: string;\n  render?: boolean;\n}\n\ninterface ReactionRenderingOptions extends LoadingOptions {\n  moleculeSpacing?: number;\n  showArrow?: boolean;\n  alignmentMode?: 'center' | 'baseline';\n}\n\ninterface QualityReport {\n  overallScore: number;\n  accuracyMetrics: any;\n  recommendations: string[];\n}\n\nclass StructureValidator {\n  validate(structure: StructureData): RenderingValidation {\n    return {\n      geometryValid: true,\n      bondsReasonable: true,\n      chargeBalance: true,\n      stereoChemistry: true,\n      warnings: [],\n      errors: []\n    };\n  }\n}\n\nclass QualityAssessment {\n  generateReport(visualization: MolecularVisualization): QualityReport {\n    return {\n      overallScore: 0.85,\n      accuracyMetrics: {},\n      recommendations: []\n    };\n  }\n}\n\nclass RenderingOptimizer {\n  cleanup(): void {}\n}\n","/**\n * CREB Enhanced UI/UX System\n * \n * Addresses: UI/UX improvements, user interaction, accessibility\n * - Modern, responsive interface\n * - Advanced interaction controls\n * - Accessibility features\n * - Real-time feedback systems\n */\n\nexport interface UIConfig {\n  // Theme and Appearance\n  theme: 'light' | 'dark' | 'scientific' | 'auto';\n  accentColor: string;\n  fontSize: 'small' | 'medium' | 'large';\n  highContrast: boolean;\n  \n  // Interaction\n  touchOptimized: boolean;\n  keyboardNavigation: boolean;\n  gestureControls: boolean;\n  voiceCommands: boolean;\n  \n  // Accessibility\n  screenReaderSupport: boolean;\n  colorBlindFriendly: boolean;\n  reducedMotion: boolean;\n  audioFeedback: boolean;\n  \n  // Layout\n  compactMode: boolean;\n  sidePanelPosition: 'left' | 'right' | 'bottom';\n  showTooltips: boolean;\n  animatedTransitions: boolean;\n}\n\nexport interface InteractionEvent {\n  type: 'click' | 'hover' | 'drag' | 'pinch' | 'voice' | 'keyboard';\n  target: string;\n  data: any;\n  timestamp: number;\n}\n\nexport interface FeedbackMessage {\n  type: 'info' | 'success' | 'warning' | 'error';\n  message: string;\n  duration?: number;\n  persistent?: boolean;\n  actions?: FeedbackAction[];\n}\n\nexport interface FeedbackAction {\n  label: string;\n  action: () => void;\n  style?: 'primary' | 'secondary' | 'danger';\n}\n\nexport class EnhancedUI {\n  private config: UIConfig;\n  private container: HTMLElement;\n  private eventManager: EventManager;\n  private feedbackSystem: FeedbackSystem;\n  private accessibilityManager: AccessibilityManager;\n  private gestureHandler: GestureHandler;\n  private voiceController: VoiceController;\n  \n  constructor(container: HTMLElement, config: Partial<UIConfig> = {}) {\n    this.container = container;\n    this.config = this.mergeConfig(config);\n    \n    this.initializeComponents();\n    this.setupEventHandlers();\n    this.applyTheme();\n    this.setupAccessibility();\n  }\n\n  private mergeConfig(config: Partial<UIConfig>): UIConfig {\n    return {\n      // Theme defaults\n      theme: 'auto',\n      accentColor: '#667eea',\n      fontSize: 'medium',\n      highContrast: false,\n      \n      // Interaction defaults\n      touchOptimized: this.detectTouchDevice(),\n      keyboardNavigation: true,\n      gestureControls: this.detectTouchDevice(),\n      voiceCommands: false,\n      \n      // Accessibility defaults\n      screenReaderSupport: true,\n      colorBlindFriendly: false,\n      reducedMotion: this.detectReducedMotion(),\n      audioFeedback: false,\n      \n      // Layout defaults\n      compactMode: this.detectMobileDevice(),\n      sidePanelPosition: 'right',\n      showTooltips: true,\n      animatedTransitions: !this.detectReducedMotion(),\n      \n      ...config\n    };\n  }\n\n  private detectTouchDevice(): boolean {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  private detectMobileDevice(): boolean {\n    return window.innerWidth < 768;\n  }\n\n  private detectReducedMotion(): boolean {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  }\n\n  private initializeComponents(): void {\n    this.eventManager = new EventManager();\n    this.feedbackSystem = new FeedbackSystem(this.container);\n    this.accessibilityManager = new AccessibilityManager(this.config);\n    this.gestureHandler = new GestureHandler(this.container);\n    this.voiceController = new VoiceController();\n    \n    this.createMainInterface();\n  }\n\n  private createMainInterface(): void {\n    const mainHTML = `\n      <div class=\"creb-ui-container\" role=\"application\" aria-label=\"CREB Molecular Animation Interface\">\n        ${this.createHeader()}\n        ${this.createMainContent()}\n        ${this.createControlPanel()}\n        ${this.createFeedbackArea()}\n        ${this.createAccessibilityToolbar()}\n      </div>\n    `;\n    \n    this.container.innerHTML = mainHTML;\n  }\n\n  private createHeader(): string {\n    return `\n      <header class=\"creb-header\" role=\"banner\">\n        <div class=\"header-content\">\n          <h1 class=\"app-title\">\n            <span class=\"title-text\">CREB</span>\n            <span class=\"subtitle\">Chemical Reaction Animation</span>\n          </h1>\n          \n          <div class=\"header-controls\">\n            <button class=\"icon-btn\" \n                    id=\"theme-toggle\" \n                    aria-label=\"Toggle theme\" \n                    title=\"Switch between light and dark themes\">\n              <span class=\"icon\">🌓</span>\n            </button>\n            \n            <button class=\"icon-btn\" \n                    id=\"settings-btn\" \n                    aria-label=\"Open settings\" \n                    title=\"Open application settings\">\n              <span class=\"icon\">⚙️</span>\n            </button>\n            \n            <button class=\"icon-btn\" \n                    id=\"help-btn\" \n                    aria-label=\"Open help\" \n                    title=\"Get help and tutorials\">\n              <span class=\"icon\">❓</span>\n            </button>\n          </div>\n        </div>\n      </header>\n    `;\n  }\n\n  private createMainContent(): string {\n    return `\n      <main class=\"main-content\" role=\"main\">\n        <div class=\"input-section\" role=\"region\" aria-labelledby=\"input-heading\">\n          <h2 id=\"input-heading\" class=\"section-title\">Chemical Equation</h2>\n          \n          <div class=\"input-group\">\n            <div class=\"equation-input-container\">\n              <input type=\"text\" \n                     id=\"equation-input\" \n                     class=\"equation-input\" \n                     placeholder=\"Enter chemical equation (e.g., H2 + O2 → H2O)\"\n                     aria-describedby=\"equation-help\"\n                     autocomplete=\"off\"\n                     spellcheck=\"false\">\n              \n              <div class=\"input-actions\">\n                <button class=\"btn btn-primary\" \n                        id=\"animate-btn\" \n                        aria-label=\"Generate animation\">\n                  <span class=\"btn-text\">Animate</span>\n                  <span class=\"btn-icon\">🎬</span>\n                </button>\n                \n                <button class=\"btn btn-secondary\" \n                        id=\"voice-input-btn\" \n                        aria-label=\"Voice input\"\n                        title=\"Click to use voice input\">\n                  <span class=\"btn-icon\">🎤</span>\n                </button>\n              </div>\n            </div>\n            \n            <div id=\"equation-help\" class=\"help-text\">\n              Enter a chemical equation using formulas (H2O) or names (water). \n              Use → or = for the reaction arrow.\n            </div>\n          </div>\n          \n          <div class=\"quick-examples\">\n            <h3>Quick Examples:</h3>\n            <div class=\"example-buttons\">\n              <button class=\"example-btn\" data-equation=\"H2 + O2 → H2O\">\n                Water Formation\n              </button>\n              <button class=\"example-btn\" data-equation=\"CH4 + O2 → CO2 + H2O\">\n                Methane Combustion\n              </button>\n              <button class=\"example-btn\" data-equation=\"NaCl → Na+ + Cl-\">\n                Salt Dissociation\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"visualization-section\" role=\"region\" aria-labelledby=\"viz-heading\">\n          <h2 id=\"viz-heading\" class=\"section-title\">Molecular Animation</h2>\n          \n          <div class=\"viewer-container\">\n            <div id=\"molecular-viewer\" \n                 class=\"molecular-viewer\" \n                 role=\"img\" \n                 aria-label=\"3D molecular animation viewer\"\n                 tabindex=\"0\">\n              <!-- 3Dmol.js viewer will be inserted here -->\n            </div>\n            \n            <div class=\"viewer-overlay\">\n              <div class=\"loading-indicator\" id=\"loading-indicator\" role=\"status\" aria-live=\"polite\">\n                <div class=\"spinner\"></div>\n                <span class=\"loading-text\">Preparing animation...</span>\n              </div>\n              \n              <div class=\"viewer-controls\" id=\"viewer-controls\">\n                ${this.createViewerControls()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    `;\n  }\n\n  private createViewerControls(): string {\n    return `\n      <div class=\"control-group\" role=\"group\" aria-labelledby=\"playback-controls\">\n        <h3 id=\"playback-controls\" class=\"control-group-title\">Playback</h3>\n        \n        <div class=\"playback-buttons\">\n          <button class=\"control-btn\" \n                  id=\"play-pause-btn\" \n                  aria-label=\"Play or pause animation\"\n                  aria-pressed=\"false\">\n            <span class=\"icon\">▶️</span>\n          </button>\n          \n          <button class=\"control-btn\" \n                  id=\"stop-btn\" \n                  aria-label=\"Stop and reset animation\">\n            <span class=\"icon\">⏹️</span>\n          </button>\n          \n          <button class=\"control-btn\" \n                  id=\"step-back-btn\" \n                  aria-label=\"Step backward\">\n            <span class=\"icon\">⏮️</span>\n          </button>\n          \n          <button class=\"control-btn\" \n                  id=\"step-forward-btn\" \n                  aria-label=\"Step forward\">\n            <span class=\"icon\">⏭️</span>\n          </button>\n        </div>\n        \n        <div class=\"progress-container\">\n          <input type=\"range\" \n                 id=\"progress-slider\" \n                 class=\"progress-slider\" \n                 min=\"0\" \n                 max=\"100\" \n                 value=\"0\"\n                 aria-label=\"Animation progress\"\n                 aria-valuemin=\"0\" \n                 aria-valuemax=\"100\" \n                 aria-valuenow=\"0\">\n          \n          <div class=\"time-display\">\n            <span id=\"current-time\">0:00</span>\n            <span class=\"time-separator\">/</span>\n            <span id=\"total-time\">0:00</span>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"control-group\" role=\"group\" aria-labelledby=\"speed-controls\">\n        <h3 id=\"speed-controls\" class=\"control-group-title\">Speed</h3>\n        \n        <div class=\"speed-controls\">\n          <button class=\"speed-btn\" data-speed=\"0.5\">0.5x</button>\n          <button class=\"speed-btn active\" data-speed=\"1\">1x</button>\n          <button class=\"speed-btn\" data-speed=\"1.5\">1.5x</button>\n          <button class=\"speed-btn\" data-speed=\"2\">2x</button>\n        </div>\n      </div>\n      \n      <div class=\"control-group\" role=\"group\" aria-labelledby=\"view-controls\">\n        <h3 id=\"view-controls\" class=\"control-group-title\">View</h3>\n        \n        <div class=\"view-buttons\">\n          <button class=\"control-btn\" \n                  id=\"reset-view-btn\" \n                  aria-label=\"Reset camera view\">\n            <span class=\"icon\">🏠</span>\n            <span class=\"btn-label\">Reset View</span>\n          </button>\n          \n          <button class=\"control-btn toggle-btn\" \n                  id=\"fullscreen-btn\" \n                  aria-label=\"Toggle fullscreen\"\n                  aria-pressed=\"false\">\n            <span class=\"icon\">⛶</span>\n            <span class=\"btn-label\">Fullscreen</span>\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  private createControlPanel(): string {\n    return `\n      <aside class=\"control-panel ${this.config.sidePanelPosition}\" \n             role=\"complementary\" \n             aria-labelledby=\"control-panel-title\">\n        \n        <header class=\"panel-header\">\n          <h2 id=\"control-panel-title\">Animation Controls</h2>\n          \n          <button class=\"panel-toggle-btn\" \n                  id=\"panel-toggle\" \n                  aria-label=\"Toggle control panel\"\n                  aria-expanded=\"true\">\n            <span class=\"icon\">📋</span>\n          </button>\n        </header>\n        \n        <div class=\"panel-content\">\n          ${this.createAnimationSettings()}\n          ${this.createVisualizationSettings()}\n          ${this.createExportOptions()}\n          ${this.createReactionInfo()}\n        </div>\n      </aside>\n    `;\n  }\n\n  private createAnimationSettings(): string {\n    return `\n      <section class=\"settings-section\" role=\"group\" aria-labelledby=\"animation-settings\">\n        <h3 id=\"animation-settings\">Animation Settings</h3>\n        \n        <div class=\"setting-item\">\n          <label for=\"animation-duration\">Duration (seconds)</label>\n          <input type=\"range\" \n                 id=\"animation-duration\" \n                 min=\"1\" \n                 max=\"10\" \n                 value=\"3\" \n                 step=\"0.5\"\n                 aria-describedby=\"duration-value\">\n          <span id=\"duration-value\" class=\"setting-value\">3.0s</span>\n        </div>\n        \n        <div class=\"setting-item\">\n          <label for=\"easing-select\">Easing</label>\n          <select id=\"easing-select\" class=\"select-input\">\n            <option value=\"linear\">Linear</option>\n            <option value=\"ease\">Ease</option>\n            <option value=\"ease-in\">Ease In</option>\n            <option value=\"ease-out\">Ease Out</option>\n            <option value=\"bounce\">Bounce</option>\n          </select>\n        </div>\n        \n        <div class=\"setting-item\">\n          <label class=\"checkbox-label\">\n            <input type=\"checkbox\" id=\"show-energy-profile\" checked>\n            <span class=\"checkmark\"></span>\n            Show Energy Profile\n          </label>\n        </div>\n        \n        <div class=\"setting-item\">\n          <label class=\"checkbox-label\">\n            <input type=\"checkbox\" id=\"particle-effects\" checked>\n            <span class=\"checkmark\"></span>\n            Particle Effects\n          </label>\n        </div>\n      </section>\n    `;\n  }\n\n  private createVisualizationSettings(): string {\n    return `\n      <section class=\"settings-section\" role=\"group\" aria-labelledby=\"viz-settings\">\n        <h3 id=\"viz-settings\">Visualization</h3>\n        \n        <div class=\"setting-item\">\n          <label for=\"render-quality\">Quality</label>\n          <select id=\"render-quality\" class=\"select-input\">\n            <option value=\"low\">Low (Fast)</option>\n            <option value=\"medium\" selected>Medium</option>\n            <option value=\"high\">High</option>\n            <option value=\"ultra\">Ultra (Slow)</option>\n          </select>\n        </div>\n        \n        <div class=\"setting-item\">\n          <label for=\"molecular-style\">Style</label>\n          <select id=\"molecular-style\" class=\"select-input\">\n            <option value=\"ball-stick\">Ball & Stick</option>\n            <option value=\"stick\">Stick</option>\n            <option value=\"spacefill\">Space Fill</option>\n            <option value=\"wireframe\">Wireframe</option>\n          </select>\n        </div>\n        \n        <div class=\"setting-item\">\n          <label class=\"checkbox-label\">\n            <input type=\"checkbox\" id=\"show-hydrogens\">\n            <span class=\"checkmark\"></span>\n            Show Hydrogens\n          </label>\n        </div>\n        \n        <div class=\"setting-item\">\n          <label class=\"checkbox-label\">\n            <input type=\"checkbox\" id=\"show-surfaces\">\n            <span class=\"checkmark\"></span>\n            Molecular Surfaces\n          </label>\n        </div>\n      </section>\n    `;\n  }\n\n  private createExportOptions(): string {\n    return `\n      <section class=\"settings-section\" role=\"group\" aria-labelledby=\"export-options\">\n        <h3 id=\"export-options\">Export</h3>\n        \n        <div class=\"export-buttons\">\n          <button class=\"btn btn-outline\" id=\"export-image-btn\">\n            <span class=\"icon\">📸</span>\n            Save Image\n          </button>\n          \n          <button class=\"btn btn-outline\" id=\"export-gif-btn\">\n            <span class=\"icon\">🎞️</span>\n            Export GIF\n          </button>\n          \n          <button class=\"btn btn-outline\" id=\"export-video-btn\">\n            <span class=\"icon\">🎥</span>\n            Record Video\n          </button>\n          \n          <button class=\"btn btn-outline\" id=\"share-btn\">\n            <span class=\"icon\">🔗</span>\n            Share Link\n          </button>\n        </div>\n      </section>\n    `;\n  }\n\n  private createReactionInfo(): string {\n    return `\n      <section class=\"settings-section\" role=\"group\" aria-labelledby=\"reaction-info\">\n        <h3 id=\"reaction-info\">Reaction Information</h3>\n        \n        <div class=\"info-content\" id=\"reaction-details\">\n          <p>Enter a chemical equation to see reaction details here.</p>\n        </div>\n      </section>\n    `;\n  }\n\n  private createFeedbackArea(): string {\n    return `\n      <div id=\"feedback-area\" \n           class=\"feedback-area\" \n           role=\"status\" \n           aria-live=\"polite\" \n           aria-atomic=\"true\">\n        <!-- Dynamic feedback messages will appear here -->\n      </div>\n    `;\n  }\n\n  private createAccessibilityToolbar(): string {\n    return `\n      <div class=\"accessibility-toolbar\" \n           role=\"toolbar\" \n           aria-label=\"Accessibility options\"\n           id=\"a11y-toolbar\">\n        \n        <button class=\"a11y-btn\" \n                id=\"high-contrast-btn\" \n                aria-label=\"Toggle high contrast mode\"\n                aria-pressed=\"${this.config.highContrast}\">\n          <span class=\"icon\">🔳</span>\n          High Contrast\n        </button>\n        \n        <button class=\"a11y-btn\" \n                id=\"large-text-btn\" \n                aria-label=\"Toggle large text\"\n                aria-pressed=\"${this.config.fontSize === 'large'}\">\n          <span class=\"icon\">🔍</span>\n          Large Text\n        </button>\n        \n        <button class=\"a11y-btn\" \n                id=\"reduce-motion-btn\" \n                aria-label=\"Toggle reduced motion\"\n                aria-pressed=\"${this.config.reducedMotion}\">\n          <span class=\"icon\">⏸️</span>\n          Reduce Motion\n        </button>\n        \n        <button class=\"a11y-btn\" \n                id=\"audio-feedback-btn\" \n                aria-label=\"Toggle audio feedback\"\n                aria-pressed=\"${this.config.audioFeedback}\">\n          <span class=\"icon\">🔊</span>\n          Audio Cues\n        </button>\n      </div>\n    `;\n  }\n\n  private setupEventHandlers(): void {\n    // Main interaction handlers\n    this.setupMainControls();\n    this.setupAnimationControls();\n    this.setupAccessibilityControls();\n    this.setupKeyboardNavigation();\n    \n    if (this.config.gestureControls) {\n      this.setupGestureControls();\n    }\n    \n    if (this.config.voiceCommands) {\n      this.setupVoiceControls();\n    }\n  }\n\n  private setupMainControls(): void {\n    // Equation input and animation\n    const equationInput = this.container.querySelector('#equation-input') as HTMLInputElement;\n    const animateBtn = this.container.querySelector('#animate-btn') as HTMLButtonElement;\n    \n    equationInput?.addEventListener('input', (e) => {\n      this.validateInput((e.target as HTMLInputElement).value);\n    });\n    \n    equationInput?.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        this.handleAnimationRequest();\n      }\n    });\n    \n    animateBtn?.addEventListener('click', () => {\n      this.handleAnimationRequest();\n    });\n    \n    // Example buttons\n    const exampleBtns = this.container.querySelectorAll('.example-btn');\n    exampleBtns.forEach(btn => {\n      btn.addEventListener('click', (e) => {\n        const equation = (e.target as HTMLElement).dataset.equation;\n        if (equation && equationInput) {\n          equationInput.value = equation;\n          this.handleAnimationRequest();\n        }\n      });\n    });\n  }\n\n  private setupAnimationControls(): void {\n    // Playback controls\n    const playPauseBtn = this.container.querySelector('#play-pause-btn');\n    const stopBtn = this.container.querySelector('#stop-btn');\n    const progressSlider = this.container.querySelector('#progress-slider') as HTMLInputElement;\n    \n    playPauseBtn?.addEventListener('click', () => {\n      this.togglePlayback();\n    });\n    \n    stopBtn?.addEventListener('click', () => {\n      this.stopAnimation();\n    });\n    \n    progressSlider?.addEventListener('input', (e) => {\n      const progress = parseFloat((e.target as HTMLInputElement).value) / 100;\n      this.seekToProgress(progress);\n    });\n    \n    // Speed controls\n    const speedBtns = this.container.querySelectorAll('.speed-btn');\n    speedBtns.forEach(btn => {\n      btn.addEventListener('click', (e) => {\n        const speed = parseFloat((e.target as HTMLElement).dataset.speed || '1');\n        this.setAnimationSpeed(speed);\n        \n        // Update active state\n        speedBtns.forEach(b => b.classList.remove('active'));\n        (e.target as HTMLElement).classList.add('active');\n      });\n    });\n  }\n\n  private setupAccessibilityControls(): void {\n    // High contrast toggle\n    const highContrastBtn = this.container.querySelector('#high-contrast-btn');\n    highContrastBtn?.addEventListener('click', () => {\n      this.toggleHighContrast();\n    });\n    \n    // Large text toggle\n    const largeTextBtn = this.container.querySelector('#large-text-btn');\n    largeTextBtn?.addEventListener('click', () => {\n      this.toggleLargeText();\n    });\n    \n    // Reduced motion toggle\n    const reduceMotionBtn = this.container.querySelector('#reduce-motion-btn');\n    reduceMotionBtn?.addEventListener('click', () => {\n      this.toggleReducedMotion();\n    });\n    \n    // Audio feedback toggle\n    const audioFeedbackBtn = this.container.querySelector('#audio-feedback-btn');\n    audioFeedbackBtn?.addEventListener('click', () => {\n      this.toggleAudioFeedback();\n    });\n  }\n\n  private setupKeyboardNavigation(): void {\n    if (!this.config.keyboardNavigation) return;\n    \n    this.container.addEventListener('keydown', (e) => {\n      // Handle keyboard shortcuts\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case 'Enter':\n            e.preventDefault();\n            this.handleAnimationRequest();\n            break;\n          case ' ':\n            e.preventDefault();\n            this.togglePlayback();\n            break;\n          case 'r':\n            e.preventDefault();\n            this.stopAnimation();\n            break;\n        }\n      }\n      \n      // Handle arrow keys for scrubbing\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        const step = e.key === 'ArrowLeft' ? -0.05 : 0.05;\n        this.stepAnimation(step);\n      }\n    });\n  }\n\n  private setupGestureControls(): void {\n    this.gestureHandler.onSwipe = (direction: string) => {\n      switch (direction) {\n        case 'left':\n          this.stepAnimation(-0.1);\n          break;\n        case 'right':\n          this.stepAnimation(0.1);\n          break;\n      }\n    };\n    \n    this.gestureHandler.onPinch = (scale: number) => {\n      // Handle zoom gestures for molecular viewer\n      this.handleViewerZoom(scale);\n    };\n    \n    this.gestureHandler.onTap = (target: HTMLElement) => {\n      // Handle tap interactions\n      if (target.classList.contains('molecule')) {\n        this.handleMoleculeSelection(target);\n      }\n    };\n  }\n\n  private setupVoiceControls(): void {\n    this.voiceController.addCommand('animate', () => {\n      this.handleAnimationRequest();\n    });\n    \n    this.voiceController.addCommand('play', () => {\n      this.playAnimation();\n    });\n    \n    this.voiceController.addCommand('pause', () => {\n      this.pauseAnimation();\n    });\n    \n    this.voiceController.addCommand('stop', () => {\n      this.stopAnimation();\n    });\n  }\n\n  private applyTheme(): void {\n    const themeClass = this.config.theme === 'auto' \n      ? (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light')\n      : this.config.theme;\n    \n    this.container.className = `creb-ui ${themeClass}`;\n    \n    // Apply custom properties\n    const root = this.container.style;\n    root.setProperty('--accent-color', this.config.accentColor);\n    root.setProperty('--font-size-base', this.getFontSizeValue());\n  }\n\n  private getFontSizeValue(): string {\n    switch (this.config.fontSize) {\n      case 'small': return '14px';\n      case 'medium': return '16px';\n      case 'large': return '20px';\n      default: return '16px';\n    }\n  }\n\n  private setupAccessibility(): void {\n    this.accessibilityManager.initialize();\n    \n    if (this.config.highContrast) {\n      this.container.classList.add('high-contrast');\n    }\n    \n    if (this.config.reducedMotion) {\n      this.container.classList.add('reduced-motion');\n    }\n  }\n\n  // Public API methods\n  public showMessage(message: FeedbackMessage): void {\n    this.feedbackSystem.show(message);\n  }\n\n  public updateProgress(progress: number): void {\n    const progressSlider = this.container.querySelector('#progress-slider') as HTMLInputElement;\n    const currentTime = this.container.querySelector('#current-time');\n    \n    if (progressSlider) {\n      progressSlider.value = (progress * 100).toString();\n      progressSlider.setAttribute('aria-valuenow', (progress * 100).toString());\n    }\n    \n    if (currentTime) {\n      currentTime.textContent = this.formatTime(progress);\n    }\n  }\n\n  private formatTime(progress: number): string {\n    const totalSeconds = 3; // Default animation duration\n    const currentSeconds = progress * totalSeconds;\n    const minutes = Math.floor(currentSeconds / 60);\n    const seconds = Math.floor(currentSeconds % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  }\n\n  // Event handlers (to be implemented by the main application)\n  public onAnimationRequest?: (equation: string) => void;\n  public onPlaybackToggle?: () => void;\n  public onStop?: () => void;\n  public onSeek?: (progress: number) => void;\n  public onSpeedChange?: (speed: number) => void;\n\n  // Implementation methods (placeholder)\n  private validateInput(value: string): void {\n    // Implement input validation\n  }\n\n  private handleAnimationRequest(): void {\n    const input = (this.container.querySelector('#equation-input') as HTMLInputElement)?.value;\n    if (input && this.onAnimationRequest) {\n      this.onAnimationRequest(input);\n    }\n  }\n\n  private togglePlayback(): void {\n    if (this.onPlaybackToggle) {\n      this.onPlaybackToggle();\n    }\n  }\n\n  private stopAnimation(): void {\n    if (this.onStop) {\n      this.onStop();\n    }\n  }\n\n  private seekToProgress(progress: number): void {\n    if (this.onSeek) {\n      this.onSeek(progress);\n    }\n  }\n\n  private setAnimationSpeed(speed: number): void {\n    if (this.onSpeedChange) {\n      this.onSpeedChange(speed);\n    }\n  }\n\n  private playAnimation(): void {\n    // Implementation\n  }\n\n  private pauseAnimation(): void {\n    // Implementation\n  }\n\n  private stepAnimation(step: number): void {\n    // Implementation\n  }\n\n  private handleViewerZoom(scale: number): void {\n    // Implementation\n  }\n\n  private handleMoleculeSelection(target: HTMLElement): void {\n    // Implementation\n  }\n\n  private toggleHighContrast(): void {\n    this.config.highContrast = !this.config.highContrast;\n    this.container.classList.toggle('high-contrast');\n    \n    const btn = this.container.querySelector('#high-contrast-btn');\n    btn?.setAttribute('aria-pressed', this.config.highContrast.toString());\n  }\n\n  private toggleLargeText(): void {\n    this.config.fontSize = this.config.fontSize === 'large' ? 'medium' : 'large';\n    this.applyTheme();\n    \n    const btn = this.container.querySelector('#large-text-btn');\n    btn?.setAttribute('aria-pressed', (this.config.fontSize === 'large').toString());\n  }\n\n  private toggleReducedMotion(): void {\n    this.config.reducedMotion = !this.config.reducedMotion;\n    this.container.classList.toggle('reduced-motion');\n    \n    const btn = this.container.querySelector('#reduce-motion-btn');\n    btn?.setAttribute('aria-pressed', this.config.reducedMotion.toString());\n  }\n\n  private toggleAudioFeedback(): void {\n    this.config.audioFeedback = !this.config.audioFeedback;\n    \n    const btn = this.container.querySelector('#audio-feedback-btn');\n    btn?.setAttribute('aria-pressed', this.config.audioFeedback.toString());\n  }\n\n  public dispose(): void {\n    this.eventManager.cleanup();\n    this.feedbackSystem.cleanup();\n    this.gestureHandler.cleanup();\n    this.voiceController.cleanup();\n  }\n}\n\n// Supporting classes (simplified implementations)\nclass EventManager {\n  cleanup(): void {}\n}\n\nclass FeedbackSystem {\n  constructor(container: HTMLElement) {}\n  show(message: FeedbackMessage): void {}\n  cleanup(): void {}\n}\n\nclass AccessibilityManager {\n  constructor(config: UIConfig) {}\n  initialize(): void {}\n}\n\nclass GestureHandler {\n  onSwipe?: (direction: string) => void;\n  onPinch?: (scale: number) => void;\n  onTap?: (target: HTMLElement) => void;\n  \n  constructor(container: HTMLElement) {}\n  cleanup(): void {}\n}\n\nclass VoiceController {\n  addCommand(phrase: string, callback: () => void): void {}\n  cleanup(): void {}\n}\n","/**\n * CREB Browser Compatibility & Performance Manager\n * \n * Addresses: Browser Compatibility, Performance, Memory Management\n * - Cross-browser compatibility detection and handling\n * - Performance monitoring and optimization\n * - Memory leak prevention\n * - Graceful degradation strategies\n */\n\nexport interface BrowserCapabilities {\n  webgl: boolean;\n  webgl2: boolean;\n  webworkers: boolean;\n  indexeddb: boolean;\n  webassembly: boolean;\n  intersectionobserver: boolean;\n  resizeobserver: boolean;\n  offscreencanvas: boolean;\n  gpu: boolean;\n  touchevents: boolean;\n  pointerevents: boolean;\n  gamepad: boolean;\n}\n\nexport interface PerformanceMetrics {\n  fps: number;\n  frameTime: number;\n  memoryUsed: number;\n  memoryLimit: number;\n  drawCalls: number;\n  triangles: number;\n  textureMemory: number;\n  geometryMemory: number;\n  renderTime: number;\n  updateTime: number;\n}\n\nexport interface CompatibilityConfig {\n  // Fallback strategies\n  webglFallback: 'canvas2d' | 'svg' | 'static' | 'error';\n  memoryLimitMB: number;\n  performanceMode: 'auto' | 'performance' | 'quality' | 'battery';\n  \n  // Feature detection\n  detectCapabilities: boolean;\n  logCompatibilityWarnings: boolean;\n  showCompatibilityMessages: boolean;\n  \n  // Optimization settings\n  enableGC: boolean;\n  memoryThreshold: number;\n  fpsThreshold: number;\n  autoOptimize: boolean;\n}\n\nexport class BrowserCompatibilityManager {\n  private capabilities: BrowserCapabilities;\n  private config: CompatibilityConfig;\n  private performanceMonitor: PerformanceMonitor;\n  private memoryManager: MemoryManager;\n  private fallbackRenderer: FallbackRenderer;\n  private compatibilityLayer: CompatibilityLayer;\n  \n  constructor(config: Partial<CompatibilityConfig> = {}) {\n    this.config = this.mergeConfig(config);\n    this.capabilities = this.detectBrowserCapabilities();\n    \n    this.performanceMonitor = new PerformanceMonitor();\n    this.memoryManager = new MemoryManager(this.config.memoryLimitMB);\n    this.fallbackRenderer = new FallbackRenderer();\n    this.compatibilityLayer = new CompatibilityLayer(this.capabilities);\n    \n    this.initializeCompatibilityLayer();\n    this.setupPerformanceMonitoring();\n  }\n\n  private mergeConfig(config: Partial<CompatibilityConfig>): CompatibilityConfig {\n    return {\n      // Fallback defaults\n      webglFallback: 'canvas2d',\n      memoryLimitMB: this.detectMemoryLimit(),\n      performanceMode: 'auto',\n      \n      // Detection defaults\n      detectCapabilities: true,\n      logCompatibilityWarnings: true,\n      showCompatibilityMessages: false,\n      \n      // Optimization defaults\n      enableGC: true,\n      memoryThreshold: 0.8, // 80% of available memory\n      fpsThreshold: 30,\n      autoOptimize: true,\n      \n      ...config\n    };\n  }\n\n  private detectMemoryLimit(): number {\n    // Detect available memory and set reasonable limits\n    if ('memory' in performance) {\n      const memory = (performance as any).memory;\n      const totalMemoryMB = memory.jsHeapSizeLimit / (1024 * 1024);\n      return Math.min(totalMemoryMB * 0.3, 1024); // Use max 30% or 1GB\n    }\n    \n    // Fallback estimates based on device type\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    return isMobile ? 256 : 512; // Conservative estimates\n  }\n\n  private detectBrowserCapabilities(): BrowserCapabilities {\n    const canvas = document.createElement('canvas');\n    const capabilities: BrowserCapabilities = {\n      webgl: false,\n      webgl2: false,\n      webworkers: typeof Worker !== 'undefined',\n      indexeddb: 'indexedDB' in window,\n      webassembly: typeof WebAssembly !== 'undefined',\n      intersectionobserver: 'IntersectionObserver' in window,\n      resizeobserver: 'ResizeObserver' in window,\n      offscreencanvas: 'OffscreenCanvas' in window,\n      gpu: false,\n      touchevents: 'ontouchstart' in window,\n      pointerevents: 'onpointerdown' in window,\n      gamepad: 'getGamepads' in navigator\n    };\n\n    // Test WebGL support\n    try {\n      const gl = canvas.getContext('webgl');\n      capabilities.webgl = !!gl;\n      \n      if (gl) {\n        const gl2 = canvas.getContext('webgl2');\n        capabilities.webgl2 = !!gl2;\n        \n        // Check for GPU info\n        const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n        if (debugInfo) {\n          const renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\n          capabilities.gpu = !renderer.includes('SwiftShader'); // Not software renderer\n        }\n      }\n    } catch (error) {\n      capabilities.webgl = false;\n    }\n\n    return capabilities;\n  }\n\n  private initializeCompatibilityLayer(): void {\n    // Apply polyfills and compatibility fixes\n    this.compatibilityLayer.applyPolyfills();\n    \n    // Setup fallback strategies\n    if (!this.capabilities.webgl && this.config.webglFallback !== 'error') {\n      this.setupWebGLFallback();\n    }\n    \n    // Setup performance mode\n    this.applyPerformanceMode();\n    \n    // Log compatibility warnings\n    if (this.config.logCompatibilityWarnings) {\n      this.logCompatibilityStatus();\n    }\n  }\n\n  private setupWebGLFallback(): void {\n    switch (this.config.webglFallback) {\n      case 'canvas2d':\n        this.fallbackRenderer.useCanvas2D();\n        break;\n      case 'svg':\n        this.fallbackRenderer.useSVG();\n        break;\n      case 'static':\n        this.fallbackRenderer.useStaticImages();\n        break;\n    }\n  }\n\n  private applyPerformanceMode(): void {\n    const mode = this.config.performanceMode === 'auto' \n      ? this.detectOptimalPerformanceMode() \n      : this.config.performanceMode;\n    \n    switch (mode) {\n      case 'performance':\n        this.enablePerformanceMode();\n        break;\n      case 'quality':\n        this.enableQualityMode();\n        break;\n      case 'battery':\n        this.enableBatteryMode();\n        break;\n    }\n  }\n\n  private detectOptimalPerformanceMode(): string {\n    // Detect based on device capabilities\n    if (this.capabilities.gpu && this.config.memoryLimitMB > 512) {\n      return 'quality';\n    } else if (this.isBatteryPowered()) {\n      return 'battery';\n    } else {\n      return 'performance';\n    }\n  }\n\n  private isBatteryPowered(): boolean {\n    // Check if device is likely battery-powered\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  }\n\n  private enablePerformanceMode(): void {\n    // Optimize for frame rate\n    this.performanceMonitor.setTargetFPS(60);\n    this.memoryManager.setAggressiveGC(false);\n  }\n\n  private enableQualityMode(): void {\n    // Optimize for visual quality\n    this.performanceMonitor.setTargetFPS(30);\n    this.memoryManager.setAggressiveGC(false);\n  }\n\n  private enableBatteryMode(): void {\n    // Optimize for battery life\n    this.performanceMonitor.setTargetFPS(24);\n    this.memoryManager.setAggressiveGC(true);\n  }\n\n  private setupPerformanceMonitoring(): void {\n    this.performanceMonitor.onPerformanceChange = (metrics: PerformanceMetrics) => {\n      if (this.config.autoOptimize) {\n        this.handlePerformanceChange(metrics);\n      }\n    };\n\n    this.memoryManager.onMemoryPressure = (level: 'warning' | 'critical') => {\n      this.handleMemoryPressure(level);\n    };\n  }\n\n  private handlePerformanceChange(metrics: PerformanceMetrics): void {\n    if (metrics.fps < this.config.fpsThreshold) {\n      this.reduceQuality();\n    } else if (metrics.fps > this.config.fpsThreshold + 15) {\n      this.increaseQuality();\n    }\n\n    if (metrics.memoryUsed / metrics.memoryLimit > this.config.memoryThreshold) {\n      this.memoryManager.forceGarbageCollection();\n    }\n  }\n\n  private handleMemoryPressure(level: 'warning' | 'critical'): void {\n    switch (level) {\n      case 'warning':\n        this.memoryManager.cleanup();\n        break;\n      case 'critical':\n        this.memoryManager.emergencyCleanup();\n        this.reduceQuality();\n        break;\n    }\n  }\n\n  private reduceQuality(): void {\n    // Reduce rendering quality to improve performance\n    // This would integrate with the main rendering system\n  }\n\n  private increaseQuality(): void {\n    // Increase rendering quality when performance allows\n    // This would integrate with the main rendering system\n  }\n\n  private logCompatibilityStatus(): void {\n    const issues: string[] = [];\n    const warnings: string[] = [];\n\n    if (!this.capabilities.webgl) {\n      issues.push('WebGL not supported - using fallback renderer');\n    }\n\n    if (!this.capabilities.webgl2) {\n      warnings.push('WebGL 2.0 not available - some features may be limited');\n    }\n\n    if (!this.capabilities.webworkers) {\n      warnings.push('Web Workers not supported - performance may be reduced');\n    }\n\n    if (!this.capabilities.indexeddb) {\n      warnings.push('IndexedDB not available - caching will be limited');\n    }\n\n    if (this.config.memoryLimitMB < 256) {\n      warnings.push('Low memory environment detected - quality will be reduced');\n    }\n\n    if (issues.length > 0) {\n      console.warn('CREB Compatibility Issues:', issues);\n    }\n\n    if (warnings.length > 0) {\n      console.info('CREB Compatibility Warnings:', warnings);\n    }\n\n    console.info('CREB Browser Capabilities:', this.capabilities);\n  }\n\n  // Public API\n  public getCapabilities(): BrowserCapabilities {\n    return { ...this.capabilities };\n  }\n\n  public getPerformanceMetrics(): PerformanceMetrics {\n    return this.performanceMonitor.getCurrentMetrics();\n  }\n\n  public isFeatureSupported(feature: keyof BrowserCapabilities): boolean {\n    return this.capabilities[feature];\n  }\n\n  public canRenderMolecule(atomCount: number): boolean {\n    // Estimate if the browser can handle a molecule of given size\n    const memoryRequired = this.estimateMemoryRequired(atomCount);\n    const availableMemory = this.memoryManager.getAvailableMemory();\n    \n    return memoryRequired < availableMemory * 0.8; // Leave 20% buffer\n  }\n\n  private estimateMemoryRequired(atomCount: number): number {\n    // Rough estimate: 1KB per atom for basic rendering\n    return atomCount * 1024;\n  }\n\n  public createCompatibleRenderer(container: HTMLElement): any {\n    if (this.capabilities.webgl) {\n      return this.createWebGLRenderer(container);\n    } else {\n      return this.fallbackRenderer.createRenderer(container);\n    }\n  }\n\n  private createWebGLRenderer(container: HTMLElement): any {\n    // Create WebGL-based renderer with appropriate settings\n    const rendererConfig = {\n      antialias: this.capabilities.gpu,\n      alpha: true,\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: false,\n      failIfMajorPerformanceCaveat: true\n    };\n\n    // Would integrate with Three.js or 3Dmol.js\n    return rendererConfig;\n  }\n\n  public optimizeForDevice(): void {\n    const deviceType = this.detectDeviceType();\n    \n    switch (deviceType) {\n      case 'mobile':\n        this.applyMobileOptimizations();\n        break;\n      case 'tablet':\n        this.applyTabletOptimizations();\n        break;\n      case 'desktop':\n        this.applyDesktopOptimizations();\n        break;\n      case 'low-end':\n        this.applyLowEndOptimizations();\n        break;\n    }\n  }\n\n  private detectDeviceType(): 'mobile' | 'tablet' | 'desktop' | 'low-end' {\n    const screenWidth = window.screen.width;\n    const pixelRatio = window.devicePixelRatio || 1;\n    const isTouchDevice = this.capabilities.touchevents;\n    \n    if (this.config.memoryLimitMB < 256) {\n      return 'low-end';\n    } else if (isTouchDevice && screenWidth < 768) {\n      return 'mobile';\n    } else if (isTouchDevice && screenWidth >= 768) {\n      return 'tablet';\n    } else {\n      return 'desktop';\n    }\n  }\n\n  private applyMobileOptimizations(): void {\n    // Reduce quality settings for mobile devices\n    this.config.memoryLimitMB = Math.min(this.config.memoryLimitMB, 256);\n    this.performanceMonitor.setTargetFPS(30);\n  }\n\n  private applyTabletOptimizations(): void {\n    // Moderate quality settings for tablets\n    this.config.memoryLimitMB = Math.min(this.config.memoryLimitMB, 512);\n    this.performanceMonitor.setTargetFPS(45);\n  }\n\n  private applyDesktopOptimizations(): void {\n    // High quality settings for desktop\n    this.performanceMonitor.setTargetFPS(60);\n  }\n\n  private applyLowEndOptimizations(): void {\n    // Minimum quality settings for low-end devices\n    this.config.memoryLimitMB = 128;\n    this.performanceMonitor.setTargetFPS(24);\n    this.memoryManager.setAggressiveGC(true);\n  }\n\n  public checkBrowserSupport(): { supported: boolean; issues: string[]; recommendations: string[] } {\n    const issues: string[] = [];\n    const recommendations: string[] = [];\n\n    // Check critical requirements\n    if (!this.capabilities.webgl && this.config.webglFallback === 'error') {\n      issues.push('WebGL is required but not supported');\n      recommendations.push('Please update your browser or enable hardware acceleration');\n    }\n\n    if (this.config.memoryLimitMB < 64) {\n      issues.push('Insufficient memory available');\n      recommendations.push('Close other applications to free up memory');\n    }\n\n    // Check for optimal experience\n    if (!this.capabilities.webgl2) {\n      recommendations.push('Update your browser for better performance');\n    }\n\n    if (!this.capabilities.webworkers) {\n      recommendations.push('Enable JavaScript for full functionality');\n    }\n\n    return {\n      supported: issues.length === 0,\n      issues,\n      recommendations\n    };\n  }\n\n  public dispose(): void {\n    this.performanceMonitor.stop();\n    this.memoryManager.cleanup();\n    this.fallbackRenderer.dispose();\n    this.compatibilityLayer.dispose();\n  }\n}\n\n// Supporting classes\nclass PerformanceMonitor {\n  onPerformanceChange?: (metrics: PerformanceMetrics) => void;\n  private targetFPS = 60;\n  private metrics: PerformanceMetrics = {\n    fps: 0,\n    frameTime: 0,\n    memoryUsed: 0,\n    memoryLimit: 0,\n    drawCalls: 0,\n    triangles: 0,\n    textureMemory: 0,\n    geometryMemory: 0,\n    renderTime: 0,\n    updateTime: 0\n  };\n\n  setTargetFPS(fps: number): void {\n    this.targetFPS = fps;\n  }\n\n  getCurrentMetrics(): PerformanceMetrics {\n    return { ...this.metrics };\n  }\n\n  stop(): void {\n    // Stop monitoring\n  }\n}\n\nclass MemoryManager {\n  onMemoryPressure?: (level: 'warning' | 'critical') => void;\n  private memoryLimit: number;\n  private aggressiveGC = false;\n\n  constructor(limitMB: number) {\n    this.memoryLimit = limitMB * 1024 * 1024; // Convert to bytes\n  }\n\n  setAggressiveGC(enabled: boolean): void {\n    this.aggressiveGC = enabled;\n  }\n\n  getAvailableMemory(): number {\n    if ('memory' in performance) {\n      const memory = (performance as any).memory;\n      return memory.jsHeapSizeLimit - memory.usedJSHeapSize;\n    }\n    return this.memoryLimit * 0.5; // Conservative estimate\n  }\n\n  cleanup(): void {\n    // Perform cleanup\n  }\n\n  emergencyCleanup(): void {\n    // Perform emergency cleanup\n    this.cleanup();\n    this.forceGarbageCollection();\n  }\n\n  forceGarbageCollection(): void {\n    // Force garbage collection if available\n    if ('gc' in window) {\n      (window as any).gc();\n    }\n  }\n}\n\nclass FallbackRenderer {\n  useCanvas2D(): void {\n    // Setup Canvas 2D fallback\n  }\n\n  useSVG(): void {\n    // Setup SVG fallback\n  }\n\n  useStaticImages(): void {\n    // Setup static image fallback\n  }\n\n  createRenderer(container: HTMLElement): any {\n    // Create fallback renderer\n    return {};\n  }\n\n  dispose(): void {\n    // Cleanup fallback renderer\n  }\n}\n\nclass CompatibilityLayer {\n  constructor(capabilities: BrowserCapabilities) {}\n\n  applyPolyfills(): void {\n    // Apply necessary polyfills\n    this.polyfillIntersectionObserver();\n    this.polyfillResizeObserver();\n    this.polyfillRequestAnimationFrame();\n  }\n\n  private polyfillIntersectionObserver(): void {\n    if (!('IntersectionObserver' in window)) {\n      // Load IntersectionObserver polyfill\n    }\n  }\n\n  private polyfillResizeObserver(): void {\n    if (!('ResizeObserver' in window)) {\n      // Load ResizeObserver polyfill\n    }\n  }\n\n  private polyfillRequestAnimationFrame(): void {\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = (callback) => {\n        return setTimeout(callback, 1000 / 60);\n      };\n    }\n  }\n\n  dispose(): void {\n    // Cleanup compatibility layer\n  }\n}\n","/**\n * CREB Enhanced Features System\n * \n * Addresses: Additional functionality, enhanced capabilities\n * - Advanced equation parsing and validation\n * - Multi-format import/export\n * - Collaboration features\n * - Educational tools and analytics\n * - Advanced visualization modes\n */\n\nexport interface FeatureConfig {\n  // Import/Export\n  supportedFormats: string[];\n  enableCloudSync: boolean;\n  enableCollaboration: boolean;\n  \n  // Educational Features\n  showStepByStep: boolean;\n  enableQuizMode: boolean;\n  provideTutorials: boolean;\n  trackProgress: boolean;\n  \n  // Advanced Visualization\n  enableVRMode: boolean;\n  enableARMode: boolean;\n  enable3DPrinting: boolean;\n  enableMolecularDynamics: boolean;\n  \n  // Analytics and Insights\n  enableAnalytics: boolean;\n  provideInsights: boolean;\n  enableComparisons: boolean;\n  showStatistics: boolean;\n}\n\nexport interface EquationParseResult {\n  isValid: boolean;\n  balanced: boolean;\n  reactants: MoleculeInfo[];\n  products: MoleculeInfo[];\n  reactionType: string;\n  mechanism: string[];\n  thermodynamics: ThermodynamicData;\n  errors: string[];\n  warnings: string[];\n  suggestions: string[];\n}\n\nexport interface MoleculeInfo {\n  formula: string;\n  name: string;\n  commonNames: string[];\n  molecularWeight: number;\n  phase: 'solid' | 'liquid' | 'gas' | 'aqueous';\n  hazards: string[];\n  properties: MolecularProperties;\n}\n\nexport interface MolecularProperties {\n  meltingPoint: number;\n  boilingPoint: number;\n  density: number;\n  solubility: number;\n  stability: string;\n  toxicity: string;\n}\n\nexport interface ThermodynamicData {\n  deltaH: number; // Enthalpy change\n  deltaS: number; // Entropy change\n  deltaG: number; // Gibbs free energy change\n  activationEnergy: number;\n  equilibriumConstant: number;\n  temperature: number;\n}\n\nexport class EnhancedFeaturesSystem {\n  private config: FeatureConfig;\n  private equationParser: AdvancedEquationParser;\n  private importExportManager: ImportExportManager;\n  private educationalTools: EducationalToolsManager;\n  private visualizationModes: AdvancedVisualizationManager;\n  private analyticsEngine: AnalyticsEngine;\n  private collaborationManager: CollaborationManager;\n  \n  constructor(config: Partial<FeatureConfig> = {}) {\n    this.config = this.mergeConfig(config);\n    \n    this.equationParser = new AdvancedEquationParser();\n    this.importExportManager = new ImportExportManager(this.config);\n    this.educationalTools = new EducationalToolsManager(this.config);\n    this.visualizationModes = new AdvancedVisualizationManager(this.config);\n    this.analyticsEngine = new AnalyticsEngine(this.config);\n    this.collaborationManager = new CollaborationManager(this.config);\n  }\n\n  private mergeConfig(config: Partial<FeatureConfig>): FeatureConfig {\n    return {\n      // Import/Export defaults\n      supportedFormats: ['sdf', 'mol', 'pdb', 'xyz', 'cml', 'smiles', 'inchi'],\n      enableCloudSync: false,\n      enableCollaboration: false,\n      \n      // Educational defaults\n      showStepByStep: true,\n      enableQuizMode: true,\n      provideTutorials: true,\n      trackProgress: false,\n      \n      // Advanced visualization defaults\n      enableVRMode: false,\n      enableARMode: false,\n      enable3DPrinting: false,\n      enableMolecularDynamics: false,\n      \n      // Analytics defaults\n      enableAnalytics: false,\n      provideInsights: true,\n      enableComparisons: true,\n      showStatistics: false,\n      \n      ...config\n    };\n  }\n\n  // Enhanced Equation Processing\n  public async parseEquation(equation: string): Promise<EquationParseResult> {\n    return this.equationParser.parseAdvanced(equation);\n  }\n\n  public async validateEquation(equation: string): Promise<ValidationResult> {\n    const parseResult = await this.parseEquation(equation);\n    \n    return {\n      syntaxValid: parseResult.isValid,\n      chemicallyValid: this.validateChemistry(parseResult),\n      balanced: parseResult.balanced,\n      feasible: await this.checkReactionFeasibility(parseResult),\n      safetyIssues: this.identifySafetyIssues(parseResult),\n      suggestions: this.generateSuggestions(parseResult)\n    };\n  }\n\n  private validateChemistry(parseResult: EquationParseResult): boolean {\n    // Check for valid chemical formulas, charge balance, etc.\n    return parseResult.reactants.every(r => this.isValidMolecule(r)) &&\n           parseResult.products.every(p => this.isValidMolecule(p));\n  }\n\n  private isValidMolecule(molecule: MoleculeInfo): boolean {\n    // Validate molecular formula and properties\n    return molecule.formula.length > 0 && molecule.molecularWeight > 0;\n  }\n\n  private async checkReactionFeasibility(parseResult: EquationParseResult): Promise<boolean> {\n    // Check thermodynamic feasibility\n    return parseResult.thermodynamics.deltaG < 0; // Spontaneous reaction\n  }\n\n  private identifySafetyIssues(parseResult: EquationParseResult): string[] {\n    const issues: string[] = [];\n    \n    parseResult.reactants.concat(parseResult.products).forEach(molecule => {\n      issues.push(...molecule.hazards);\n    });\n    \n    return [...new Set(issues)]; // Remove duplicates\n  }\n\n  private generateSuggestions(parseResult: EquationParseResult): string[] {\n    const suggestions: string[] = [];\n    \n    if (!parseResult.balanced) {\n      suggestions.push('Balance the equation by adjusting coefficients');\n    }\n    \n    if (parseResult.thermodynamics.deltaG > 0) {\n      suggestions.push('Consider adding a catalyst or changing temperature');\n    }\n    \n    return suggestions;\n  }\n\n  // Import/Export Features\n  public async importReaction(file: File): Promise<ImportResult> {\n    return this.importExportManager.import(file);\n  }\n\n  public async exportReaction(\n    reaction: ReactionData, \n    format: string, \n    options: ExportOptions = {}\n  ): Promise<Blob> {\n    return this.importExportManager.export(reaction, format, options);\n  }\n\n  public getSupportedFormats(): FormatInfo[] {\n    return this.importExportManager.getSupportedFormats();\n  }\n\n  // Educational Features\n  public async getStepByStepExplanation(equation: string): Promise<StepByStepExplanation> {\n    return this.educationalTools.generateStepByStep(equation);\n  }\n\n  public async generateQuiz(topic: string, difficulty: string): Promise<Quiz> {\n    return this.educationalTools.generateQuiz(topic, difficulty);\n  }\n\n  public async getTutorial(reactionType: string): Promise<Tutorial> {\n    return this.educationalTools.getTutorial(reactionType);\n  }\n\n  public getProgressReport(): ProgressReport {\n    return this.educationalTools.getProgressReport();\n  }\n\n  // Advanced Visualization\n  public async enableVRMode(container: HTMLElement): Promise<VRViewer> {\n    if (!this.config.enableVRMode) {\n      throw new Error('VR mode is not enabled');\n    }\n    return this.visualizationModes.createVRViewer(container);\n  }\n\n  public async enableARMode(video: HTMLVideoElement): Promise<ARViewer> {\n    if (!this.config.enableARMode) {\n      throw new Error('AR mode is not enabled');\n    }\n    return this.visualizationModes.createARViewer(video);\n  }\n\n  public async generate3DPrintModel(molecules: MoleculeInfo[]): Promise<PrintModel> {\n    if (!this.config.enable3DPrinting) {\n      throw new Error('3D printing is not enabled');\n    }\n    return this.visualizationModes.generate3DPrintModel(molecules);\n  }\n\n  public async runMolecularDynamics(\n    system: MolecularSystem,\n    parameters: MDParameters\n  ): Promise<MDSimulation> {\n    if (!this.config.enableMolecularDynamics) {\n      throw new Error('Molecular dynamics is not enabled');\n    }\n    return this.visualizationModes.runMolecularDynamics(system, parameters);\n  }\n\n  // Analytics and Insights\n  public async getReactionInsights(equation: string): Promise<ReactionInsights> {\n    const parseResult = await this.parseEquation(equation);\n    return this.analyticsEngine.generateInsights(parseResult);\n  }\n\n  public async compareReactions(equations: string[]): Promise<ReactionComparison> {\n    const parseResults = await Promise.all(equations.map(eq => this.parseEquation(eq)));\n    return this.analyticsEngine.compareReactions(parseResults);\n  }\n\n  public getUsageStatistics(): UsageStatistics {\n    return this.analyticsEngine.getStatistics();\n  }\n\n  // Collaboration Features\n  public async shareReaction(reaction: ReactionData): Promise<ShareResult> {\n    if (!this.config.enableCollaboration) {\n      throw new Error('Collaboration is not enabled');\n    }\n    return this.collaborationManager.shareReaction(reaction);\n  }\n\n  public async joinCollaborativeSession(sessionId: string): Promise<CollaborativeSession> {\n    return this.collaborationManager.joinSession(sessionId);\n  }\n\n  public async createCollaborativeSession(): Promise<CollaborativeSession> {\n    return this.collaborationManager.createSession();\n  }\n\n  // Utility Methods\n  public searchMoleculeDatabase(query: string): Promise<MoleculeInfo[]> {\n    return this.equationParser.searchDatabase(query);\n  }\n\n  public getMoleculeInfo(formula: string): Promise<MoleculeInfo | null> {\n    return this.equationParser.getMoleculeInfo(formula);\n  }\n\n  public predictProducts(reactants: string[], conditions: ReactionConditions): Promise<string[]> {\n    return this.equationParser.predictProducts(reactants, conditions);\n  }\n\n  public suggestReactionConditions(equation: string): Promise<ReactionConditions[]> {\n    return this.equationParser.suggestConditions(equation);\n  }\n\n  public dispose(): void {\n    this.importExportManager.dispose();\n    this.educationalTools.dispose();\n    this.visualizationModes.dispose();\n    this.analyticsEngine.dispose();\n    this.collaborationManager.dispose();\n  }\n}\n\n// Supporting interfaces and classes\ninterface ValidationResult {\n  syntaxValid: boolean;\n  chemicallyValid: boolean;\n  balanced: boolean;\n  feasible: boolean;\n  safetyIssues: string[];\n  suggestions: string[];\n}\n\ninterface ImportResult {\n  success: boolean;\n  reaction: ReactionData | null;\n  errors: string[];\n  warnings: string[];\n}\n\ninterface ExportOptions {\n  includeMetadata: boolean;\n  format3D: boolean;\n  compression: 'none' | 'gzip' | 'bzip2';\n  quality: 'low' | 'medium' | 'high';\n}\n\ninterface FormatInfo {\n  extension: string;\n  name: string;\n  description: string;\n  canImport: boolean;\n  canExport: boolean;\n  supports3D: boolean;\n}\n\ninterface StepByStepExplanation {\n  steps: ExplanationStep[];\n  totalTime: number;\n  difficulty: string;\n  concepts: string[];\n}\n\ninterface ExplanationStep {\n  title: string;\n  description: string;\n  visualization: string;\n  duration: number;\n  concepts: string[];\n}\n\ninterface Quiz {\n  id: string;\n  title: string;\n  questions: QuizQuestion[];\n  timeLimit: number;\n  passingScore: number;\n}\n\ninterface QuizQuestion {\n  id: string;\n  type: 'multiple-choice' | 'fill-in' | 'drag-drop' | 'draw';\n  question: string;\n  options?: string[];\n  correctAnswer: string;\n  explanation: string;\n  points: number;\n}\n\ninterface Tutorial {\n  id: string;\n  title: string;\n  description: string;\n  lessons: TutorialLesson[];\n  estimatedTime: number;\n  prerequisites: string[];\n}\n\ninterface TutorialLesson {\n  title: string;\n  content: string;\n  interactiveElements: InteractiveElement[];\n  quiz?: QuizQuestion[];\n}\n\ninterface InteractiveElement {\n  type: 'animation' | 'simulation' | 'calculator' | 'model';\n  config: any;\n}\n\ninterface ProgressReport {\n  totalSessions: number;\n  totalTime: number;\n  reactionsStudied: number;\n  quizzesTaken: number;\n  averageScore: number;\n  strengths: string[];\n  weaknesses: string[];\n  recommendations: string[];\n}\n\ninterface ReactionInsights {\n  reactionType: string;\n  mechanism: string;\n  keyFeatures: string[];\n  applicationAreas: string[];\n  relatedReactions: string[];\n  industrialUses: string[];\n  environmentalImpact: EnvironmentalImpact;\n  economicFactors: EconomicFactors;\n}\n\ninterface EnvironmentalImpact {\n  carbonFootprint: number;\n  wasteProducts: string[];\n  sustainability: 'low' | 'medium' | 'high';\n  greenAlternatives: string[];\n}\n\ninterface EconomicFactors {\n  costEffectiveness: 'low' | 'medium' | 'high';\n  scalability: 'small' | 'pilot' | 'industrial';\n  marketValue: number;\n  competitiveAdvantages: string[];\n}\n\ninterface ReactionComparison {\n  reactions: ComparedReaction[];\n  similarities: string[];\n  differences: string[];\n  efficiency: EfficiencyComparison;\n  recommendations: string[];\n}\n\ninterface ComparedReaction {\n  equation: string;\n  type: string;\n  yield: number;\n  selectivity: number;\n  cost: number;\n  environmentalScore: number;\n}\n\ninterface EfficiencyComparison {\n  mostEfficient: string;\n  leastWasteful: string;\n  mostEconomical: string;\n  mostSustainable: string;\n}\n\ninterface UsageStatistics {\n  totalReactions: number;\n  popularReactionTypes: { [key: string]: number };\n  averageSessionTime: number;\n  userEngagement: number;\n  featureUsage: { [key: string]: number };\n}\n\ninterface ReactionData {\n  equation: string;\n  metadata: any;\n  visualization: any;\n  conditions: ReactionConditions;\n}\n\ninterface ReactionConditions {\n  temperature: number;\n  pressure: number;\n  pH: number;\n  catalyst: string;\n  solvent: string;\n  atmosphere: string;\n}\n\ninterface ShareResult {\n  shareId: string;\n  shareUrl: string;\n  expiresAt: Date;\n  permissions: string[];\n}\n\ninterface CollaborativeSession {\n  sessionId: string;\n  participants: Participant[];\n  reactions: ReactionData[];\n  chat: ChatMessage[];\n  whiteboard: WhiteboardElement[];\n}\n\ninterface Participant {\n  id: string;\n  name: string;\n  role: 'owner' | 'editor' | 'viewer';\n  isOnline: boolean;\n}\n\ninterface ChatMessage {\n  id: string;\n  userId: string;\n  message: string;\n  timestamp: Date;\n  type: 'text' | 'reaction' | 'file';\n}\n\ninterface WhiteboardElement {\n  id: string;\n  type: 'text' | 'drawing' | 'molecule' | 'arrow';\n  position: { x: number; y: number };\n  data: any;\n}\n\n// Simplified implementations\nclass AdvancedEquationParser {\n  async parseAdvanced(equation: string): Promise<EquationParseResult> {\n    // Simple parsing implementation that returns a valid structure\n    const reactants = this.extractReactants(equation);\n    const products = this.extractProducts(equation);\n    \n    return {\n      isValid: true,\n      balanced: true,\n      reactants: reactants,\n      products: products,\n      reactionType: 'synthesis',\n      mechanism: ['Step 1: Reactant preparation', 'Step 2: Reaction', 'Step 3: Product formation'],\n      thermodynamics: {\n        deltaH: -285.8, // kJ/mol for H2O formation\n        deltaS: -163.3,\n        deltaG: -237.2,\n        temperature: 298.15,\n        pressure: 1.0\n      },\n      errors: [],\n      warnings: [],\n      suggestions: ['Consider reaction conditions', 'Monitor temperature']\n    };\n  }\n\n  private extractReactants(equation: string): MoleculeInfo[] {\n    // Simple extraction - look for substances before arrow\n    const parts = equation.split(/->|→/);\n    if (parts.length < 2) return [];\n    \n    const reactantStr = parts[0].trim();\n    const molecules = reactantStr.split('+').map(m => m.trim());\n    \n    return molecules.map(formula => ({\n      formula: formula.replace(/^\\d+\\s*/, ''), // Remove coefficients\n      name: this.getCommonName(formula),\n      molecularWeight: 0,\n      smiles: '',\n      inchi: '',\n      cas: '',\n      synonyms: [],\n      properties: {}\n    }));\n  }\n\n  private extractProducts(equation: string): MoleculeInfo[] {\n    // Simple extraction - look for substances after arrow\n    const parts = equation.split(/->|→/);\n    if (parts.length < 2) return [];\n    \n    const productStr = parts[1].trim();\n    const molecules = productStr.split('+').map(m => m.trim());\n    \n    return molecules.map(formula => ({\n      formula: formula.replace(/^\\d+\\s*/, ''), // Remove coefficients\n      name: this.getCommonName(formula),\n      molecularWeight: 0,\n      smiles: '',\n      inchi: '',\n      cas: '',\n      synonyms: [],\n      properties: {}\n    }));\n  }\n\n  private getCommonName(formula: string): string {\n    const names: { [key: string]: string } = {\n      'H2': 'Hydrogen gas',\n      'O2': 'Oxygen gas',\n      'H2O': 'Water',\n      'CO2': 'Carbon dioxide',\n      'CH4': 'Methane',\n      'NaCl': 'Sodium chloride'\n    };\n    return names[formula] || formula;\n  }\n\n  async searchDatabase(query: string): Promise<MoleculeInfo[]> {\n    return [];\n  }\n\n  async getMoleculeInfo(formula: string): Promise<MoleculeInfo | null> {\n    return null;\n  }\n\n  async predictProducts(reactants: string[], conditions: ReactionConditions): Promise<string[]> {\n    return [];\n  }\n\n  async suggestConditions(equation: string): Promise<ReactionConditions[]> {\n    return [];\n  }\n}\n\nclass ImportExportManager {\n  constructor(config: FeatureConfig) {}\n\n  async import(file: File): Promise<ImportResult> {\n    return { success: false, reaction: null, errors: [], warnings: [] };\n  }\n\n  async export(reaction: ReactionData, format: string, options: ExportOptions): Promise<Blob> {\n    return new Blob();\n  }\n\n  getSupportedFormats(): FormatInfo[] {\n    return [];\n  }\n\n  dispose(): void {}\n}\n\nclass EducationalToolsManager {\n  constructor(config: FeatureConfig) {}\n\n  async generateStepByStep(equation: string): Promise<StepByStepExplanation> {\n    return {} as StepByStepExplanation;\n  }\n\n  async generateQuiz(topic: string, difficulty: string): Promise<Quiz> {\n    return {} as Quiz;\n  }\n\n  async getTutorial(reactionType: string): Promise<Tutorial> {\n    return {} as Tutorial;\n  }\n\n  getProgressReport(): ProgressReport {\n    return {} as ProgressReport;\n  }\n\n  dispose(): void {}\n}\n\nclass AdvancedVisualizationManager {\n  constructor(config: FeatureConfig) {}\n\n  async createVRViewer(container: HTMLElement): Promise<VRViewer> {\n    return {} as VRViewer;\n  }\n\n  async createARViewer(video: HTMLVideoElement): Promise<ARViewer> {\n    return {} as ARViewer;\n  }\n\n  async generate3DPrintModel(molecules: MoleculeInfo[]): Promise<PrintModel> {\n    return {} as PrintModel;\n  }\n\n  async runMolecularDynamics(system: MolecularSystem, parameters: MDParameters): Promise<MDSimulation> {\n    return {} as MDSimulation;\n  }\n\n  dispose(): void {}\n}\n\nclass AnalyticsEngine {\n  constructor(config: FeatureConfig) {}\n\n  async generateInsights(parseResult: EquationParseResult): Promise<ReactionInsights> {\n    return {} as ReactionInsights;\n  }\n\n  async compareReactions(parseResults: EquationParseResult[]): Promise<ReactionComparison> {\n    return {} as ReactionComparison;\n  }\n\n  getStatistics(): UsageStatistics {\n    return {} as UsageStatistics;\n  }\n\n  dispose(): void {}\n}\n\nclass CollaborationManager {\n  constructor(config: FeatureConfig) {}\n\n  async shareReaction(reaction: ReactionData): Promise<ShareResult> {\n    return {} as ShareResult;\n  }\n\n  async joinSession(sessionId: string): Promise<CollaborativeSession> {\n    return {} as CollaborativeSession;\n  }\n\n  async createSession(): Promise<CollaborativeSession> {\n    return {} as CollaborativeSession;\n  }\n\n  dispose(): void {}\n}\n\n// Additional type definitions\ninterface VRViewer {}\ninterface ARViewer {}\ninterface PrintModel {}\ninterface MolecularSystem {}\ninterface MDParameters {}\ninterface MDSimulation {}\n","/**\n * CREB Master Enhancement Integration\n * \n * Integrates all enhancement systems:\n * - Enhanced Animation Controller\n * - Enhanced Molecular Renderer  \n * - Enhanced UI System\n * - Browser Compatibility Manager\n * - Enhanced Features System\n */\n\nimport { EnhancedAnimationController, EnhancedAnimationConfig } from './EnhancedAnimationController';\nimport { EnhancedMolecularRenderer, RenderingConfig } from './EnhancedMolecularRenderer';\nimport { EnhancedUI, UIConfig } from './EnhancedUI';\nimport { BrowserCompatibilityManager, CompatibilityConfig } from './BrowserCompatibilityManager';\nimport { EnhancedFeaturesSystem, FeatureConfig } from './EnhancedFeaturesSystem';\n\nexport interface MasterConfig {\n  // Sub-system configurations\n  animation: Partial<EnhancedAnimationConfig>;\n  rendering: Partial<RenderingConfig>;\n  ui: Partial<UIConfig>;\n  compatibility: Partial<CompatibilityConfig>;\n  features: Partial<FeatureConfig>;\n  \n  // Integration settings\n  enableAllFeatures: boolean;\n  autoOptimization: boolean;\n  debugMode: boolean;\n  telemetryEnabled: boolean;\n}\n\nexport interface SystemStatus {\n  animation: 'ready' | 'loading' | 'error';\n  rendering: 'ready' | 'loading' | 'error';\n  ui: 'ready' | 'loading' | 'error';\n  compatibility: 'compatible' | 'limited' | 'incompatible';\n  features: 'ready' | 'loading' | 'error';\n  overall: 'ready' | 'initializing' | 'degraded' | 'error';\n}\n\nexport interface AnimationRequest {\n  equation: string;\n  options?: {\n    duration?: number;\n    quality?: 'low' | 'medium' | 'high' | 'ultra';\n    effects?: boolean;\n    stepByStep?: boolean;\n    exportFormat?: string;\n  };\n}\n\nexport interface AnimationResult {\n  success: boolean;\n  duration: number;\n  quality: string;\n  frames: number;\n  errors: string[];\n  warnings: string[];\n  performance: {\n    renderTime: number;\n    memoryUsed: number;\n    fps: number;\n  };\n}\n\nexport class CREBMasterEnhancementSystem {\n  private config: MasterConfig;\n  private animationController!: EnhancedAnimationController;\n  private molecularRenderer!: EnhancedMolecularRenderer;\n  private uiSystem!: EnhancedUI;\n  private compatibilityManager!: BrowserCompatibilityManager;\n  private featuresSystem!: EnhancedFeaturesSystem;\n  \n  private status: SystemStatus;\n  private container: HTMLElement;\n  private initialized: boolean = false;\n\n  constructor(container: HTMLElement, config: Partial<MasterConfig> = {}) {\n    this.container = container;\n    this.config = this.mergeConfig(config);\n    this.status = this.initializeStatus();\n    \n    // Initialize subsystems asynchronously\n    this.initializeSubsystems().catch(error => {\n      console.error('Subsystem initialization failed:', error);\n      this.handleInitializationError(error);\n    });\n  }\n\n  private mergeConfig(config: Partial<MasterConfig>): MasterConfig {\n    return {\n      // Animation defaults\n      animation: {\n        duration: 3000,\n        easing: 'power2.inOut',\n        qualityLevel: 'medium',\n        adaptiveQuality: true,\n        particleEffects: true,\n        ...config.animation\n      },\n      \n      // Rendering defaults\n      rendering: {\n        useExperimentalData: true,\n        validateGeometry: true,\n        materialQuality: 'high',\n        antialiasing: true,\n        shadows: true,\n        ...config.rendering\n      },\n      \n      // UI defaults\n      ui: {\n        theme: 'auto',\n        touchOptimized: this.detectTouch(),\n        keyboardNavigation: true,\n        screenReaderSupport: true,\n        animatedTransitions: true,\n        ...config.ui\n      },\n      \n      // Compatibility defaults\n      compatibility: {\n        webglFallback: 'canvas2d',\n        performanceMode: 'auto',\n        autoOptimize: true,\n        detectCapabilities: true,\n        ...config.compatibility\n      },\n      \n      // Features defaults\n      features: {\n        showStepByStep: true,\n        enableQuizMode: false,\n        provideInsights: true,\n        enableComparisons: true,\n        ...config.features\n      },\n      \n      // Integration defaults\n      enableAllFeatures: true,\n      autoOptimization: true,\n      debugMode: false,\n      telemetryEnabled: false,\n      \n      ...config\n    };\n  }\n\n  private detectTouch(): boolean {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  private initializeStatus(): SystemStatus {\n    return {\n      animation: 'loading',\n      rendering: 'loading',\n      ui: 'loading',\n      compatibility: 'compatible',\n      features: 'loading',\n      overall: 'initializing'\n    };\n  }\n\n  private async initializeSubsystems(): Promise<void> {\n    try {\n      // Initialize compatibility manager first\n      this.compatibilityManager = new BrowserCompatibilityManager(this.config.compatibility);\n      const capabilities = this.compatibilityManager.getCapabilities();\n      \n      // Check browser support\n      const supportCheck = this.compatibilityManager.checkBrowserSupport();\n      if (!supportCheck.supported) {\n        this.status.compatibility = 'incompatible';\n        throw new Error(`Browser not supported: ${supportCheck.issues.join(', ')}`);\n      }\n\n      // Optimize configuration based on capabilities\n      await this.optimizeConfigForDevice(capabilities);\n\n      // Initialize UI system\n      this.uiSystem = new EnhancedUI(this.container, this.config.ui);\n      this.setupUIEventHandlers();\n      this.status.ui = 'ready';\n\n      // Initialize rendering system\n      let renderContainer = this.container.querySelector('#molecular-viewer') as HTMLElement;\n      if (!renderContainer) {\n        // Create the molecular viewer container if it doesn't exist\n        renderContainer = document.createElement('div');\n        renderContainer.id = 'molecular-viewer';\n        renderContainer.style.width = '100%';\n        renderContainer.style.height = '100%';\n        renderContainer.style.position = 'relative';\n        this.container.appendChild(renderContainer);\n      }\n      \n      this.molecularRenderer = new EnhancedMolecularRenderer(renderContainer, this.config.rendering);\n      this.status.rendering = 'ready';\n\n      // Initialize animation controller\n      this.animationController = new EnhancedAnimationController(renderContainer, this.config.animation);\n      this.status.animation = 'ready';\n\n      // Initialize features system\n      this.featuresSystem = new EnhancedFeaturesSystem(this.config.features);\n      this.status.features = 'ready';\n\n      // Setup integration between systems\n      this.setupSystemIntegration();\n\n      this.status.overall = 'ready';\n      this.initialized = true;\n\n      this.showInitializationComplete();\n\n    } catch (error) {\n      this.handleInitializationError(error);\n    }\n  }\n\n  private async optimizeConfigForDevice(capabilities: any): Promise<void> {\n    // Optimize animation settings\n    if (!capabilities.webgl) {\n      this.config.animation.qualityLevel = 'low';\n      this.config.animation.particleEffects = false;\n    }\n\n    // Optimize rendering settings\n    if (!capabilities.gpu) {\n      this.config.rendering.materialQuality = 'medium';\n      this.config.rendering.shadows = false;\n      this.config.rendering.antialiasing = false;\n    }\n\n    // Optimize UI settings\n    if (capabilities.mobile) {\n      this.config.ui.compactMode = true;\n      this.config.ui.touchOptimized = true;\n    }\n\n    // Apply device-specific optimizations\n    this.compatibilityManager.optimizeForDevice();\n  }\n\n  private setupUIEventHandlers(): void {\n    // Connect UI events to system functions\n    this.uiSystem.onAnimationRequest = async (equation: string) => {\n      await this.animateReaction({ equation });\n    };\n\n    this.uiSystem.onPlaybackToggle = () => {\n      // Handle play/pause\n      if (this.animationController) {\n        // Implementation depends on animation state\n      }\n    };\n\n    this.uiSystem.onStop = () => {\n      if (this.animationController) {\n        this.animationController.stop();\n      }\n    };\n\n    this.uiSystem.onSeek = (progress: number) => {\n      // Handle seeking in animation\n    };\n\n    this.uiSystem.onSpeedChange = (speed: number) => {\n      if (this.animationController) {\n        this.animationController.setSpeed(speed);\n      }\n    };\n  }\n\n  private setupSystemIntegration(): void {\n    // Animation + Rendering Integration\n    // Connect animation events to renderer\n    \n    // UI + Features Integration\n    // Connect UI elements to feature system\n    \n    // Performance Monitoring Integration\n    this.setupPerformanceMonitoring();\n    \n    // Error Handling Integration\n    this.setupErrorHandling();\n  }\n\n  private setupPerformanceMonitoring(): void {\n    setInterval(() => {\n      const animationMetrics = this.animationController?.getPerformanceMetrics();\n      const compatibilityMetrics = this.compatibilityManager?.getPerformanceMetrics();\n      \n      if (this.config.autoOptimization) {\n        this.optimizePerformance(animationMetrics, compatibilityMetrics);\n      }\n    }, 5000); // Check every 5 seconds\n  }\n\n  private optimizePerformance(animationMetrics: any, compatibilityMetrics: any): void {\n    if (animationMetrics?.fps < 30) {\n      // Reduce quality automatically\n      this.reduceQuality();\n    }\n\n    if (compatibilityMetrics?.memoryUsage > 0.8) {\n      // Trigger memory cleanup\n      this.cleanupMemory();\n    }\n  }\n\n  private reduceQuality(): void {\n    // Coordinate quality reduction across all systems\n    this.uiSystem?.showMessage({\n      type: 'info',\n      message: 'Reducing quality to maintain performance',\n      duration: 3000\n    });\n  }\n\n  private cleanupMemory(): void {\n    // Trigger memory cleanup across all systems\n    this.uiSystem?.showMessage({\n      type: 'warning',\n      message: 'Cleaning up memory to prevent issues',\n      duration: 3000\n    });\n  }\n\n  private setupErrorHandling(): void {\n    // Global error handler for all subsystems\n    window.addEventListener('error', (event) => {\n      this.handleGlobalError(event.error);\n    });\n\n    window.addEventListener('unhandledrejection', (event) => {\n      this.handleGlobalError(event.reason);\n    });\n  }\n\n  private handleGlobalError(error: Error): void {\n    console.error('CREB System Error:', error);\n    \n    this.uiSystem?.showMessage({\n      type: 'error',\n      message: 'An unexpected error occurred. The system will attempt to recover.',\n      duration: 5000,\n      actions: [{\n        label: 'Reload',\n        action: () => window.location.reload()\n      }]\n    });\n\n    // Attempt recovery\n    this.attemptErrorRecovery(error);\n  }\n\n  private attemptErrorRecovery(error: Error): void {\n    // Try to recover from various error types\n    if (error.message.includes('WebGL')) {\n      // Switch to fallback renderer\n      this.compatibilityManager?.createCompatibleRenderer(this.container);\n    }\n    \n    if (error.message.includes('memory')) {\n      // Aggressive memory cleanup\n      this.cleanupMemory();\n    }\n  }\n\n  private showInitializationComplete(): void {\n    this.uiSystem?.showMessage({\n      type: 'success',\n      message: 'CREB Enhanced System initialized successfully!',\n      duration: 3000\n    });\n  }\n\n  private handleInitializationError(error: any): void {\n    console.error('CREB Initialization Error:', error);\n    \n    this.status.overall = 'error';\n    \n    // Show error in UI if possible\n    if (this.uiSystem) {\n      this.uiSystem.showMessage({\n        type: 'error',\n        message: `Initialization failed: ${error.message}`,\n        persistent: true,\n        actions: [{\n          label: 'Retry',\n          action: () => this.initializeSubsystems()\n        }]\n      });\n    } else {\n      // Fallback error display\n      const errorDiv = document.createElement('div');\n      errorDiv.innerHTML = `\n        <div style=\"padding: 20px; background: #ff4444; color: white; text-align: center;\">\n          <h3>CREB Initialization Failed</h3>\n          <p>${error.message}</p>\n          <button onclick=\"location.reload()\">Reload Page</button>\n        </div>\n      `;\n      this.container.appendChild(errorDiv);\n    }\n  }\n\n  // Public API\n  public async animateReaction(request: AnimationRequest): Promise<AnimationResult> {\n    if (!this.initialized) {\n      throw new Error('System not initialized');\n    }\n\n    try {\n      // Show loading state\n      this.uiSystem?.showMessage({\n        type: 'info',\n        message: 'Preparing animation...',\n        duration: 1000\n      });\n\n      // Parse and validate equation\n      const parseResult = await this.featuresSystem.parseEquation(request.equation);\n      \n      if (!parseResult || !parseResult.isValid) {\n        const errors = parseResult?.errors || ['Unknown parsing error'];\n        throw new Error(`Invalid equation: ${errors.join(', ')}`);\n      }\n\n      // Load molecular structures\n      const reactants = await Promise.all(\n        parseResult.reactants.map(r => \n          this.molecularRenderer.loadMolecule(r.formula)\n        )\n      );\n\n      const products = await Promise.all(\n        parseResult.products.map(p => \n          this.molecularRenderer.loadMolecule(p.formula)\n        )\n      );\n\n      // Create animation\n      const startTime = performance.now();\n      \n      // Enhanced animation with full pipeline\n      // For now, use a simplified approach with mock molecular data\n      // TODO: Integrate proper equation parsing when PubChem integration is complete\n      const mockReactants = [\n        { formula: 'H2', position: { x: -2, y: 0, z: 0 }, color: '#ffffff' },\n        { formula: 'O2', position: { x: 0, y: 0, z: 0 }, color: '#ff0000' }\n      ];\n      \n      const mockProducts = [\n        { formula: 'H2O', position: { x: 2, y: 0, z: 0 }, color: '#0080ff' }\n      ];\n      \n      await this.animationController.animateReaction(\n        mockReactants as any,\n        mockProducts as any,\n        {\n          duration: request.options?.duration || 3000,\n          quality: request.options?.quality || 'medium',\n          effects: request.options?.effects || true\n        }\n      );\n\n      const endTime = performance.now();\n      const duration = endTime - startTime;\n\n      // Get performance metrics\n      const performanceMetrics = this.animationController.getPerformanceMetrics();\n\n      // Show success message\n      this.uiSystem?.showMessage({\n        type: 'success',\n        message: 'Animation completed successfully!',\n        duration: 2000\n      });\n\n      return {\n        success: true,\n        duration,\n        quality: request.options?.quality || 'medium',\n        frames: Math.round(duration / 16.67), // Estimate at 60fps\n        errors: [],\n        warnings: parseResult?.warnings || [],\n        performance: {\n          renderTime: duration,\n          memoryUsed: performanceMetrics.memoryUsage || 0,\n          fps: performanceMetrics.fps || 60\n        }\n      };\n\n    } catch (error) {\n      console.error('Animation failed:', error);\n      \n      this.uiSystem?.showMessage({\n        type: 'error',\n        message: `Animation failed: ${(error as Error).message}`,\n        duration: 5000\n      });\n\n      return {\n        success: false,\n        duration: 0,\n        quality: 'none',\n        frames: 0,\n        errors: [(error as Error).message],\n        warnings: [],\n        performance: {\n          renderTime: 0,\n          memoryUsed: 0,\n          fps: 0\n        }\n      };\n    }\n  }\n\n  public getSystemStatus(): SystemStatus {\n    return { ...this.status };\n  }\n\n  public isReady(): boolean {\n    return this.initialized && this.status.overall === 'ready';\n  }\n\n  public getCapabilities(): any {\n    return this.compatibilityManager?.getCapabilities();\n  }\n\n  public async exportAnimation(format: 'gif' | 'mp4' | 'png'): Promise<Blob> {\n    // Implementation would depend on the specific export requirements\n    throw new Error('Export functionality not yet implemented');\n  }\n\n  public async importReaction(file: File): Promise<void> {\n    const importResult = await this.featuresSystem.importReaction(file);\n    \n    if (importResult.success && importResult.reaction) {\n      await this.animateReaction({ \n        equation: importResult.reaction.equation \n      });\n    } else {\n      throw new Error(`Import failed: ${importResult.errors.join(', ')}`);\n    }\n  }\n\n  public dispose(): void {\n    // Clean up all subsystems\n    this.animationController?.dispose();\n    this.molecularRenderer?.dispose();\n    this.uiSystem?.dispose();\n    this.compatibilityManager?.dispose();\n    this.featuresSystem?.dispose();\n    \n    this.initialized = false;\n  }\n}\n\n// Convenience factory function\nexport function createEnhancedCREB(\n  container: HTMLElement, \n  config: Partial<MasterConfig> = {}\n): CREBMasterEnhancementSystem {\n  return new CREBMasterEnhancementSystem(container, config);\n}\n\n// Export all enhancement systems for individual use\nexport {\n  EnhancedAnimationController,\n  EnhancedMolecularRenderer,\n  EnhancedUI,\n  BrowserCompatibilityManager,\n  EnhancedFeaturesSystem\n};\n","/**\n * Chemical elements and their atomic masses\n * Data from the original CREB project's Assets.py\n */\n\nexport const ELEMENTS_LIST: string[] = [\n  'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n  'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca',\n  'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n  'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr',\n  'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn',\n  'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd',\n  'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n  'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n  'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th',\n  'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm',\n  'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds',\n  'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og'\n];\n\nexport const PERIODIC_TABLE: Record<string, number> = {\n  'H': 1.008,\n  'He': 4.0026,\n  'Li': 6.94,\n  'Be': 9.0122,\n  'B': 10.81,\n  'C': 12.011,\n  'N': 14.007,\n  'O': 15.999,\n  'F': 18.998,\n  'Ne': 20.18,\n  'Na': 22.99,\n  'Mg': 24.305,\n  'Al': 26.982,\n  'Si': 28.085,\n  'P': 30.974,\n  'S': 32.06,\n  'Cl': 35.45,\n  'Ar': 39.948,\n  'K': 39.098,\n  'Ca': 40.078,\n  'Sc': 44.956,\n  'Ti': 47.867,\n  'V': 50.942,\n  'Cr': 51.996,\n  'Mn': 54.938,\n  'Fe': 55.845,\n  'Co': 58.933,\n  'Ni': 58.693,\n  'Cu': 63.546,\n  'Zn': 65.38,\n  'Ga': 69.723,\n  'Ge': 72.63,\n  'As': 74.922,\n  'Se': 78.971,\n  'Br': 79.904,\n  'Kr': 83.798,\n  'Rb': 85.468,\n  'Sr': 87.62,\n  'Y': 88.906,\n  'Zr': 91.224,\n  'Nb': 92.906,\n  'Mo': 95.95,\n  'Tc': 98.0,\n  'Ru': 101.07,\n  'Rh': 102.91,\n  'Pd': 106.42,\n  'Ag': 107.87,\n  'Cd': 112.41,\n  'In': 114.82,\n  'Sn': 118.71,\n  'Sb': 121.76,\n  'Te': 127.6,\n  'I': 126.9,\n  'Xe': 131.29,\n  'Cs': 132.91,\n  'Ba': 137.33,\n  'La': 138.91,\n  'Ce': 140.12,\n  'Pr': 140.91,\n  'Nd': 144.24,\n  'Pm': 145.0,\n  'Sm': 150.36,\n  'Eu': 151.96,\n  'Gd': 157.25,\n  'Tb': 158.93,\n  'Dy': 162.5,\n  'Ho': 164.93,\n  'Er': 167.26,\n  'Tm': 168.93,\n  'Yb': 173.04,\n  'Lu': 175.0,\n  'Hf': 178.49,\n  'Ta': 180.95,\n  'W': 183.84,\n  'Re': 186.21,\n  'Os': 190.23,\n  'Ir': 192.22,\n  'Pt': 195.08,\n  'Au': 196.97,\n  'Hg': 200.59,\n  'Tl': 204.38,\n  'Pb': 207.2,\n  'Bi': 208.98,\n  'Po': 209.0,\n  'At': 210.0,\n  'Rn': 222.0,\n  'Fr': 223.0,\n  'Ra': 226.0,\n  'Ac': 227.0,\n  'Th': 232.04,\n  'Pa': 231.04,\n  'U': 238.03,\n  'Np': 237.0,\n  'Pu': 244.0,\n  'Am': 243.0,\n  'Cm': 247.0,\n  'Bk': 247.0,\n  'Cf': 251.0,\n  'Es': 252.0,\n  'Fm': 257.0,\n  'Md': 258.0,\n  'No': 259.0,\n  'Lr': 262.0,\n  'Rf': 267.0,\n  'Db': 270.0,\n  'Sg': 271.0,\n  'Bh': 270.0,\n  'Hs': 277.0,\n  'Mt': 276.0,\n  'Ds': 281.0,\n  'Rg': 282.0,\n  'Cn': 285.0,\n  'Nh': 286.0,\n  'Fl': 289.0,\n  'Mc': 290.0,\n  'Lv': 293.0,\n  'Ts': 294.0,\n  'Og': 294.0\n};\n\nexport const PARAMETER_SYMBOLS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n","/**\n * Enhanced Error Handling for CREB-JS\n * Provides structured error types with context, stack traces, and error classification\n */\n\nexport enum ErrorCategory {\n  VALIDATION = 'VALIDATION',\n  NETWORK = 'NETWORK',\n  COMPUTATION = 'COMPUTATION',\n  DATA = 'DATA',\n  SYSTEM = 'SYSTEM',\n  EXTERNAL_API = 'EXTERNAL_API',\n  TIMEOUT = 'TIMEOUT',\n  RATE_LIMIT = 'RATE_LIMIT',\n  AUTHENTICATION = 'AUTHENTICATION',\n  PERMISSION = 'PERMISSION'\n}\n\nexport enum ErrorSeverity {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  CRITICAL = 'CRITICAL'\n}\n\nexport interface ErrorContext {\n  [key: string]: any;\n  timestamp?: Date;\n  correlationId?: string;\n  userId?: string;\n  operation?: string;\n  component?: string;\n  version?: string;\n}\n\nexport interface ErrorMetadata {\n  category: ErrorCategory;\n  severity: ErrorSeverity;\n  retryable: boolean;\n  errorCode: string;\n  correlationId: string;\n  context: ErrorContext;\n  timestamp: Date;\n  stackTrace?: string;\n  innerError?: Error;\n  sugggestedAction?: string;\n}\n\n/**\n * Base CREB Error class with enhanced context and metadata\n */\nexport class CREBError extends Error {\n  public readonly metadata: ErrorMetadata;\n\n  constructor(\n    message: string,\n    category: ErrorCategory,\n    severity: ErrorSeverity = ErrorSeverity.MEDIUM,\n    context: ErrorContext = {},\n    options: {\n      retryable?: boolean;\n      errorCode?: string;\n      correlationId?: string;\n      innerError?: Error;\n      suggestedAction?: string;\n    } = {}\n  ) {\n    super(message);\n    this.name = 'CREBError';\n\n    // Ensure proper prototype chain for instanceof checks\n    Object.setPrototypeOf(this, CREBError.prototype);\n\n    this.metadata = {\n      category,\n      severity,\n      retryable: options.retryable ?? this.isRetryableByDefault(category),\n      errorCode: options.errorCode ?? this.generateErrorCode(category),\n      correlationId: options.correlationId ?? this.generateCorrelationId(),\n      context: {\n        ...context,\n        timestamp: new Date(),\n        version: '1.6.0'\n      },\n      timestamp: new Date(),\n      stackTrace: this.stack,\n      innerError: options.innerError,\n      sugggestedAction: options.suggestedAction\n    };\n\n    // Capture stack trace for V8 engines\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CREBError);\n    }\n  }\n\n  /**\n   * Serialize error for logging and telemetry\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      name: this.name,\n      message: this.message,\n      metadata: {\n        ...this.metadata,\n        innerError: this.metadata.innerError?.message\n      }\n    };\n  }\n\n  /**\n   * Create a sanitized version for client-side consumption\n   */\n  public toClientSafe(): Record<string, any> {\n    return {\n      message: this.message,\n      category: this.metadata.category,\n      severity: this.metadata.severity,\n      errorCode: this.metadata.errorCode,\n      correlationId: this.metadata.correlationId,\n      retryable: this.metadata.retryable,\n      suggestedAction: this.metadata.sugggestedAction\n    };\n  }\n\n  /**\n   * Check if error is retryable based on category and context\n   */\n  public isRetryable(): boolean {\n    return this.metadata.retryable;\n  }\n\n  /**\n   * Get human-readable error description\n   */\n  public getDescription(): string {\n    const parts = [\n      `[${this.metadata.category}:${this.metadata.severity}]`,\n      this.message\n    ];\n\n    if (this.metadata.sugggestedAction) {\n      parts.push(`Suggestion: ${this.metadata.sugggestedAction}`);\n    }\n\n    return parts.join(' ');\n  }\n\n  private isRetryableByDefault(category: ErrorCategory): boolean {\n    const retryableCategories = [\n      ErrorCategory.NETWORK,\n      ErrorCategory.TIMEOUT,\n      ErrorCategory.RATE_LIMIT,\n      ErrorCategory.EXTERNAL_API\n    ];\n    return retryableCategories.includes(category);\n  }\n\n  private generateErrorCode(category: ErrorCategory): string {\n    const timestamp = Date.now().toString(36);\n    const random = Math.random().toString(36).substring(2, 8);\n    return `${category}_${timestamp}_${random}`.toUpperCase();\n  }\n\n  private generateCorrelationId(): string {\n    return `creb_${Date.now()}_${Math.random().toString(36).substring(2, 12)}`;\n  }\n}\n\n/**\n * Validation Error - for input validation failures\n */\nexport class ValidationError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: { field?: string; value?: any; constraint?: string } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.VALIDATION,\n      ErrorSeverity.MEDIUM,\n      {\n        ...context,\n        field: options.field,\n        value: options.value,\n        constraint: options.constraint\n      },\n      {\n        retryable: false,\n        suggestedAction: 'Please check the input parameters and try again'\n      }\n    );\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * Network Error - for network-related failures\n */\nexport class NetworkError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: { \n      statusCode?: number; \n      url?: string; \n      method?: string;\n      timeout?: number;\n    } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.NETWORK,\n      ErrorSeverity.HIGH,\n      {\n        ...context,\n        statusCode: options.statusCode,\n        url: options.url,\n        method: options.method,\n        timeout: options.timeout\n      },\n      {\n        retryable: true,\n        suggestedAction: 'Check network connectivity and try again'\n      }\n    );\n    this.name = 'NetworkError';\n  }\n}\n\n/**\n * External API Error - for third-party API failures\n */\nexport class ExternalAPIError extends CREBError {\n  constructor(\n    message: string,\n    apiName: string,\n    context: ErrorContext = {},\n    options: {\n      statusCode?: number;\n      responseBody?: string;\n      endpoint?: string;\n      rateLimited?: boolean;\n    } = {}\n  ) {\n    const severity = options.rateLimited ? ErrorSeverity.MEDIUM : ErrorSeverity.HIGH;\n    const category = options.rateLimited ? ErrorCategory.RATE_LIMIT : ErrorCategory.EXTERNAL_API;\n    \n    super(\n      message,\n      category,\n      severity,\n      {\n        ...context,\n        apiName,\n        statusCode: options.statusCode,\n        responseBody: options.responseBody,\n        endpoint: options.endpoint\n      },\n      {\n        retryable: options.rateLimited || (!!options.statusCode && options.statusCode >= 500),\n        suggestedAction: options.rateLimited \n          ? 'Rate limit exceeded. Please wait before retrying'\n          : 'External service unavailable. Please try again later'\n      }\n    );\n    this.name = 'ExternalAPIError';\n  }\n}\n\n/**\n * Computation Error - for calculation failures\n */\nexport class ComputationError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: {\n      algorithm?: string;\n      input?: any;\n      expectedRange?: string;\n    } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.COMPUTATION,\n      ErrorSeverity.MEDIUM,\n      {\n        ...context,\n        algorithm: options.algorithm,\n        input: options.input,\n        expectedRange: options.expectedRange\n      },\n      {\n        retryable: false,\n        suggestedAction: 'Please verify input parameters and calculation constraints'\n      }\n    );\n    this.name = 'ComputationError';\n  }\n}\n\n/**\n * System Error - for internal system failures\n */\nexport class SystemError extends CREBError {\n  constructor(\n    message: string,\n    context: ErrorContext = {},\n    options: {\n      subsystem?: string;\n      resource?: string;\n    } = {}\n  ) {\n    super(\n      message,\n      ErrorCategory.SYSTEM,\n      ErrorSeverity.CRITICAL,\n      {\n        ...context,\n        subsystem: options.subsystem,\n        resource: options.resource\n      },\n      {\n        retryable: false,\n        suggestedAction: 'Internal system error. Please contact support'\n      }\n    );\n    this.name = 'SystemError';\n  }\n}\n\n/**\n * Error aggregation utility for collecting and analyzing multiple errors\n */\nexport class ErrorAggregator {\n  private errors: CREBError[] = [];\n  private readonly maxErrors: number;\n\n  constructor(maxErrors: number = 100) {\n    this.maxErrors = maxErrors;\n  }\n\n  /**\n   * Add an error to the aggregator\n   */\n  public addError(error: CREBError): void {\n    this.errors.push(error);\n    \n    // Keep only the most recent errors\n    if (this.errors.length > this.maxErrors) {\n      this.errors.shift();\n    }\n  }\n\n  /**\n   * Get errors by category\n   */\n  public getErrorsByCategory(category: ErrorCategory): CREBError[] {\n    return this.errors.filter(error => error.metadata.category === category);\n  }\n\n  /**\n   * Get errors by severity\n   */\n  public getErrorsBySeverity(severity: ErrorSeverity): CREBError[] {\n    return this.errors.filter(error => error.metadata.severity === severity);\n  }\n\n  /**\n   * Get error statistics\n   */\n  public getStatistics(): {\n    total: number;\n    byCategory: Record<ErrorCategory, number>;\n    bySeverity: Record<ErrorSeverity, number>;\n    retryableCount: number;\n    recentErrors: CREBError[];\n  } {\n    const byCategory = {} as Record<ErrorCategory, number>;\n    const bySeverity = {} as Record<ErrorSeverity, number>;\n    let retryableCount = 0;\n\n    // Initialize counters\n    Object.values(ErrorCategory).forEach(cat => byCategory[cat] = 0);\n    Object.values(ErrorSeverity).forEach(sev => bySeverity[sev] = 0);\n\n    // Count errors\n    this.errors.forEach(error => {\n      byCategory[error.metadata.category]++;\n      bySeverity[error.metadata.severity]++;\n      if (error.isRetryable()) {\n        retryableCount++;\n      }\n    });\n\n    return {\n      total: this.errors.length,\n      byCategory,\n      bySeverity,\n      retryableCount,\n      recentErrors: this.errors.slice(-10) // Last 10 errors\n    };\n  }\n\n  /**\n   * Clear all collected errors\n   */\n  public clear(): void {\n    this.errors = [];\n  }\n\n  /**\n   * Get all errors as JSON for logging\n   */\n  public toJSON(): Record<string, any>[] {\n    return this.errors.map(error => error.toJSON());\n  }\n}\n\n/**\n * Utility functions for error handling\n */\nexport class ErrorUtils {\n  /**\n   * Wrap a function with error handling and transformation\n   */\n  static withErrorHandling<T extends any[], R>(\n    fn: (...args: T) => R,\n    errorTransformer?: (error: any) => CREBError\n  ): (...args: T) => R {\n    return (...args: T): R => {\n      try {\n        return fn(...args);\n      } catch (error) {\n        throw errorTransformer ? errorTransformer(error) : ErrorUtils.transformUnknownError(error);\n      }\n    };\n  }\n\n  /**\n   * Wrap an async function with error handling and transformation\n   */\n  static withAsyncErrorHandling<T extends any[], R>(\n    fn: (...args: T) => Promise<R>,\n    errorTransformer?: (error: any) => CREBError\n  ): (...args: T) => Promise<R> {\n    return async (...args: T): Promise<R> => {\n      try {\n        return await fn(...args);\n      } catch (error) {\n        throw errorTransformer ? errorTransformer(error) : ErrorUtils.transformUnknownError(error);\n      }\n    };\n  }\n\n  /**\n   * Transform unknown errors into CREBError instances\n   */\n  static transformUnknownError(error: any): CREBError {\n    if (error instanceof CREBError) {\n      return error;\n    }\n\n    if (error instanceof Error) {\n      return new SystemError(\n        error.message,\n        { originalError: error.name },\n        { subsystem: 'unknown' }\n      );\n    }\n\n    return new SystemError(\n      typeof error === 'string' ? error : 'Unknown error occurred',\n      { originalError: error }\n    );\n  }\n\n  /**\n   * Check if an error indicates a transient failure\n   */\n  static isTransientError(error: any): boolean {\n    if (error instanceof CREBError) {\n      return error.isRetryable();\n    }\n\n    // Common patterns for transient errors\n    const transientPatterns = [\n      /timeout/i,\n      /connection/i,\n      /network/i,\n      /503/,\n      /502/,\n      /504/,\n      /rate limit/i\n    ];\n\n    const message = error?.message || String(error);\n    return transientPatterns.some(pattern => pattern.test(message));\n  }\n}\n","import { PERIODIC_TABLE } from './constants';\nimport { ElementCount } from './types';\nimport { ValidationError } from './core/errors/CREBError';\n\n/**\n * Utility functions for chemical formula parsing and calculations\n */\n\n/**\n * Counts elements in a chemical formula\n * Based on the ElementCounter class from the original CREB project\n */\nexport class ElementCounter {\n  private formula: string;\n\n  constructor(chemicalFormula: string) {\n    this.formula = chemicalFormula;\n  }\n\n  /**\n   * Parses the chemical formula and returns element counts\n   * Handles parentheses and multipliers\n   */\n  parseFormula(): ElementCount {\n    let formula = this.formula;\n    \n    // Expand parentheses\n    while (formula.includes('(')) {\n      formula = formula.replace(/\\(([^()]+)\\)(\\d*)/g, (match, group, multiplier) => {\n        const mult = multiplier ? parseInt(multiplier) : 1;\n        return this.expandGroup(group, mult);\n      });\n    }\n\n    // Count elements\n    const elementCounts: ElementCount = {};\n    const matches = formula.match(/([A-Z][a-z]*)(\\d*)/g) || [];\n    \n    for (const match of matches) {\n      const elementMatch = match.match(/([A-Z][a-z]*)(\\d*)/);\n      if (elementMatch) {\n        const element = elementMatch[1];\n        const count = elementMatch[2] ? parseInt(elementMatch[2]) : 1;\n        elementCounts[element] = (elementCounts[element] || 0) + count;\n      }\n    }\n\n    return elementCounts;\n  }\n\n  private expandGroup(group: string, multiplier: number): string {\n    const matches = group.match(/([A-Z][a-z]*)(\\d*)/g) || [];\n    let expanded = '';\n    \n    for (const match of matches) {\n      const elementMatch = match.match(/([A-Z][a-z]*)(\\d*)/);\n      if (elementMatch) {\n        const element = elementMatch[1];\n        const count = elementMatch[2] ? parseInt(elementMatch[2]) : 1;\n        const newCount = count * multiplier;\n        expanded += element + (newCount > 1 ? newCount : '');\n      }\n    }\n    \n    return expanded;\n  }\n}\n\n/**\n * Parses a chemical equation into reactants and products\n * Based on the EquationParser class from the original CREB project\n */\nexport class EquationParser {\n  private equation: string;\n  private equationSplitter = '=';\n  private speciesSplitter = '+';\n\n  constructor(chemicalEquation: string) {\n    this.equation = chemicalEquation.replace(/\\s/g, ''); // Remove all spaces\n  }\n\n  /**\n   * Parses the equation and returns structured data\n   */\n  parse() {\n    const { reactants, products } = this.splitIntoSpecies();\n    const parsedReactants = this.parseSpecies(reactants);\n    const parsedProducts = this.parseSpecies(products);\n\n    return {\n      reactants,\n      products,\n      parsedReactants,\n      parsedProducts\n    };\n  }\n\n  private splitIntoSpecies() {\n    // Check if equation is empty or only whitespace\n    if (!this.equation || this.equation.length === 0) {\n      throw new ValidationError(\n        'Empty equation provided. Please enter a valid chemical equation.',\n        { equation: this.equation, operation: 'equation_parsing' }\n      );\n    }\n    \n    const sides = this.equation.split(this.equationSplitter);\n    if (sides.length !== 2) {\n      throw new ValidationError(\n        'Invalid equation format. Must contain exactly one \"=\" sign.',\n        { equation: this.equation, sides: sides.length, operation: 'equation_parsing' }\n      );\n    }\n    \n    // Check if either side is empty\n    if (!sides[0].trim() || !sides[1].trim()) {\n      throw new ValidationError(\n        'Both sides of the equation must contain chemical species.',\n        { equation: this.equation, leftSide: sides[0], rightSide: sides[1], operation: 'equation_parsing' }\n      );\n    }\n\n    const cleanSpecies = (speciesString: string): string[] => {\n      return speciesString.split(this.speciesSplitter)\n        .map(species => species.trim())\n        .filter(species => species.length > 0)\n        .map(species => {\n          // Remove existing coefficients (numbers at the beginning)\n          return species.replace(/^\\d+\\s*/, '');\n        });\n    };\n\n    const reactants = cleanSpecies(sides[0]);\n    const products = cleanSpecies(sides[1]);\n\n    return { reactants, products };\n  }\n\n  private parseSpecies(species: string[]) {\n    const parsed: { [species: string]: ElementCount } = {};\n    \n    for (const specie of species) {\n      const counter = new ElementCounter(specie);\n      parsed[specie] = counter.parseFormula();\n    }\n    \n    return parsed;\n  }\n}\n\n/**\n * Calculates molar weight of a chemical formula\n */\nexport function calculateMolarWeight(formula: string): number {\n  const counter = new ElementCounter(formula);\n  const elementCounts = counter.parseFormula();\n  \n  let molarWeight = 0;\n  for (const element in elementCounts) {\n    if (!(element in PERIODIC_TABLE)) {\n      throw new ValidationError(\n        `Unknown element: ${element}`,\n        { element, formula, operation: 'molar_weight_calculation' }\n      );\n    }\n    molarWeight += elementCounts[element] * PERIODIC_TABLE[element];\n  }\n  \n  return parseFloat(molarWeight.toFixed(3));\n}\n\n/**\n * Gets all unique elements present in a reaction\n */\nexport function getElementsInReaction(parsedReactants: any, parsedProducts: any): string[] {\n  const elements = new Set<string>();\n  \n  // Add elements from reactants\n  Object.values(parsedReactants).forEach((species: any) => {\n    Object.keys(species).forEach(element => elements.add(element));\n  });\n  \n  // Add elements from products\n  Object.values(parsedProducts).forEach((species: any) => {\n    Object.keys(species).forEach(element => elements.add(element));\n  });\n  \n  return Array.from(elements);\n}\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","/**\n * Injectable decorator and related types for dependency injection\n * \n * Provides decorators and metadata for automatic dependency injection\n * in the CREB-JS container system.\n * \n * @author Loganathane Virassamy\n * @version 1.6.0\n */\n\nimport 'reflect-metadata';\n\n/**\n * Service lifetime enumeration\n */\nexport enum ServiceLifetime {\n  Singleton = 'singleton',\n  Transient = 'transient',\n}\n\n/**\n * Injectable metadata interface\n */\nexport interface InjectableMetadata {\n  dependencies?: any[];\n  lifetime?: ServiceLifetime;\n  token?: string | symbol;\n}\n\n/**\n * Injectable decorator options\n */\nexport interface InjectableOptions {\n  lifetime?: ServiceLifetime;\n  token?: string | symbol;\n}\n\n/**\n * Metadata key for injectable services\n */\nexport const INJECTABLE_METADATA_KEY = Symbol.for('injectable');\n\n/**\n * Metadata key for constructor parameters\n */\nexport const PARAM_TYPES_METADATA_KEY = 'design:paramtypes';\n\n/**\n * Injectable class decorator\n * \n * Marks a class as injectable and provides metadata for dependency injection.\n * \n * @param options Optional configuration for the injectable service\n */\nexport function Injectable(options: InjectableOptions = {}) {\n  return function <T extends new (...args: any[]) => any>(constructor: T): T {\n    // Get constructor parameter types from TypeScript compiler\n    const paramTypes = Reflect.getMetadata(PARAM_TYPES_METADATA_KEY, constructor) || [];\n    \n    // Create injectable metadata\n    const metadata: InjectableMetadata = {\n      dependencies: paramTypes,\n      lifetime: options.lifetime || ServiceLifetime.Transient,\n      token: options.token,\n    };\n\n    // Store metadata on the constructor\n    Reflect.defineMetadata(INJECTABLE_METADATA_KEY, metadata, constructor);\n\n    return constructor;\n  };\n}\n\n/**\n * Inject decorator for constructor parameters\n * \n * Explicitly specifies the token to inject for a constructor parameter.\n * Useful when TypeScript reflection doesn't provide enough information.\n * \n * @param token The service token to inject\n */\nexport function Inject(token: any) {\n  return function (target: any, propertyKey: string | symbol | undefined, parameterIndex: number) {\n    const existingMetadata = Reflect.getMetadata(INJECTABLE_METADATA_KEY, target) || {};\n    const dependencies = existingMetadata.dependencies || [];\n    \n    // Ensure dependencies array is large enough\n    while (dependencies.length <= parameterIndex) {\n      dependencies.push(undefined);\n    }\n    \n    // Set the specific dependency\n    dependencies[parameterIndex] = token;\n    \n    // Update metadata\n    const updatedMetadata: InjectableMetadata = {\n      ...existingMetadata,\n      dependencies,\n    };\n    \n    Reflect.defineMetadata(INJECTABLE_METADATA_KEY, updatedMetadata, target);\n  };\n}\n\n/**\n * Optional decorator for constructor parameters\n * \n * Marks a dependency as optional, allowing injection to succeed\n * even if the service is not registered.\n * \n * @param defaultValue Optional default value to use if service is not found\n */\nexport function Optional(defaultValue?: any) {\n  return function (target: any, propertyKey: string | symbol | undefined, parameterIndex: number) {\n    const existingMetadata = Reflect.getMetadata(INJECTABLE_METADATA_KEY, target) || {};\n    const optionalDependencies = existingMetadata.optionalDependencies || new Set();\n    \n    optionalDependencies.add(parameterIndex);\n    \n    const updatedMetadata: InjectableMetadata = {\n      ...existingMetadata,\n      optionalDependencies,\n      defaultValues: {\n        ...existingMetadata.defaultValues,\n        [parameterIndex]: defaultValue,\n      },\n    };\n    \n    Reflect.defineMetadata(INJECTABLE_METADATA_KEY, updatedMetadata, target);\n  };\n}\n\n/**\n * Get injectable metadata from a constructor\n */\nexport function getInjectableMetadata(constructor: any): InjectableMetadata | undefined {\n  return Reflect.getMetadata(INJECTABLE_METADATA_KEY, constructor);\n}\n\n/**\n * Check if a constructor is marked as injectable\n */\nexport function isInjectable(constructor: any): boolean {\n  return Reflect.hasMetadata(INJECTABLE_METADATA_KEY, constructor);\n}\n\n/**\n * Helper function to extract dependency tokens from a constructor\n */\nexport function getDependencyTokens(constructor: any): any[] {\n  const metadata = getInjectableMetadata(constructor);\n  if (!metadata) {\n    return [];\n  }\n  \n  return metadata.dependencies || [];\n}\n\n/**\n * Self-binding token type for auto-registration\n */\nexport const SELF = Symbol('SELF');\n\n/**\n * Factory for creating injectable class decorators with specific lifetimes\n */\nexport const Singleton = (options: Omit<InjectableOptions, 'lifetime'> = {}) =>\n  Injectable({ ...options, lifetime: ServiceLifetime.Singleton });\n\nexport const Transient = (options: Omit<InjectableOptions, 'lifetime'> = {}) =>\n  Injectable({ ...options, lifetime: ServiceLifetime.Transient });\n\n/**\n * Auto-registration helper for common patterns\n */\nexport interface AutoRegisterOptions {\n  lifetime?: ServiceLifetime;\n  token?: any;\n  as?: any[];\n}\n\n/**\n * Auto-register decorator that combines Injectable with container registration\n * This is a convenience decorator for common registration patterns\n */\nexport function AutoRegister(options: AutoRegisterOptions = {}) {\n  return function <T extends new (...args: any[]) => any>(constructor: T): T {\n    // First make it injectable\n    const injectable = Injectable({\n      lifetime: options.lifetime,\n      token: options.token,\n    });\n    \n    const decoratedConstructor = injectable(constructor);\n    \n    // Store auto-registration metadata for later processing\n    const autoRegisterMetadata = {\n      constructor: decoratedConstructor,\n      options,\n    };\n    \n    Reflect.defineMetadata('auto-register', autoRegisterMetadata, decoratedConstructor);\n    \n    return decoratedConstructor;\n  };\n}\n\n/**\n * Get auto-registration metadata\n */\nexport function getAutoRegisterMetadata(constructor: any) {\n  return Reflect.getMetadata('auto-register', constructor);\n}\n\n/**\n * Type guard for checking if a value is a constructor\n */\nexport function isConstructor(value: any): value is new (...args: any[]) => any {\n  return typeof value === 'function' && value.prototype && value.prototype.constructor === value;\n}\n","import { EquationParser, getElementsInReaction } from './utils';\nimport { EquationData, LinearSystem, BalancedEquation } from './types';\nimport { ComputationError } from './core/errors/CREBError';\nimport { Injectable } from './core/decorators/Injectable';\n\n/**\n * Linear equation system generator and solver\n * Based on the Generator and FileMaker classes from the original CREB project\n */\nexport class LinearEquationSolver {\n  private equationData: EquationData;\n  private allSpecies: string[];\n  private elements: string[];\n\n  constructor(chemicalEquation: string) {\n    const parser = new EquationParser(chemicalEquation);\n    this.equationData = parser.parse();\n    this.allSpecies = [...this.equationData.reactants, ...this.equationData.products];\n    this.elements = getElementsInReaction(\n      this.equationData.parsedReactants,\n      this.equationData.parsedProducts\n    );\n  }\n\n  /**\n   * Generates the system of linear equations representing the chemical balance\n   */\n  generateLinearSystem(): LinearSystem {\n    const equations = [];\n    \n    // Create one equation for each element\n    for (const element of this.elements) {\n      const coefficients = [];\n      \n      // For each species in the reaction\n      for (const species of this.allSpecies) {\n        let coefficient = 0;\n        \n        // Check if this species contains the current element\n        if (this.equationData.reactants.includes(species)) {\n          // Reactants have positive coefficients\n          const elementCount = this.equationData.parsedReactants[species][element] || 0;\n          coefficient = elementCount;\n        } else if (this.equationData.products.includes(species)) {\n          // Products have negative coefficients\n          const elementCount = this.equationData.parsedProducts[species][element] || 0;\n          coefficient = -elementCount;\n        }\n        \n        coefficients.push(coefficient);\n      }\n      \n      equations.push({\n        coefficients,\n        constant: 0 // All equations equal zero (balanced)\n      });\n    }\n\n    return {\n      equations,\n      variables: this.allSpecies.map((_, i) => `x${i}`)\n    };\n  }\n\n  /**\n   * Solves the linear system to find coefficients\n   */\n  solve(): number[] {\n    const system = this.generateLinearSystem();\n    \n    // For simple equations, try a brute force approach with small integer coefficients\n    const maxCoeff = 10;\n    const numSpecies = this.allSpecies.length;\n    \n    // Try different combinations of coefficients\n    for (let attempt = 1; attempt <= maxCoeff; attempt++) {\n      const coefficients = this.findCoefficients(system, attempt);\n      if (coefficients) {\n        return coefficients;\n      }\n    }\n    \n    throw new ComputationError(\n      'Unable to balance equation: Could not find integer coefficients',\n      { maxCoeff, numSpecies, operation: 'equation_balancing' }\n    );\n  }\n\n  /**\n   * Tries to find valid coefficients using a systematic approach\n   */\n  private findCoefficients(system: LinearSystem, maxVal: number): number[] | null {\n    const numSpecies = this.allSpecies.length;\n    \n    // Generate all possible combinations\n    const generateCombinations = (length: number, max: number): number[][] => {\n      const results: number[][] = [];\n      \n      const generate = (current: number[], remaining: number) => {\n        if (remaining === 0) {\n          results.push([...current]);\n          return;\n        }\n        \n        for (let i = 1; i <= max; i++) {\n          current.push(i);\n          generate(current, remaining - 1);\n          current.pop();\n        }\n      };\n      \n      generate([], length);\n      return results;\n    };\n    \n    const combinations = generateCombinations(numSpecies, maxVal);\n    \n    for (const coeffs of combinations) {\n      if (this.checkBalance(system, coeffs)) {\n        return coeffs;\n      }\n    }\n    \n    return null;\n  }\n\n  /**\n   * Checks if given coefficients balance the equation\n   */\n  private checkBalance(system: LinearSystem, coefficients: number[]): boolean {\n    for (const equation of system.equations) {\n      let sum = 0;\n      for (let i = 0; i < coefficients.length; i++) {\n        sum += equation.coefficients[i] * coefficients[i];\n      }\n      if (Math.abs(sum) > 1e-10) { // Allow for small floating point errors\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Normalizes coefficients to positive integers\n   */\n  private normalizeCoefficients(coefficients: number[]): number[] {\n    // Convert to positive numbers\n    const positiveCoeffs = coefficients.map(c => Math.abs(c));\n    \n    // Find a common denominator and convert to integers\n    const precision = 1000; // For handling decimal coefficients\n    const intCoeffs = positiveCoeffs.map(c => Math.round(c * precision));\n    \n    // Find GCD and simplify\n    const gcd = this.findGCD(intCoeffs.filter(c => c !== 0));\n    const simplified = intCoeffs.map(c => c / gcd);\n    \n    // Ensure all coefficients are at least 1\n    const minCoeff = Math.min(...simplified.filter(c => c > 0));\n    const scaled = simplified.map(c => Math.round(c / minCoeff));\n    \n    return scaled.map(c => c === 0 ? 1 : c);\n  }\n\n  /**\n   * Finds the greatest common divisor of an array of numbers\n   */\n  private findGCD(numbers: number[]): number {\n    const gcdTwo = (a: number, b: number): number => {\n      return b === 0 ? a : gcdTwo(b, a % b);\n    };\n    \n    return numbers.reduce((acc, num) => gcdTwo(acc, Math.abs(num)));\n  }\n}\n\n/**\n * Chemical equation balancer\n * Based on the main CREB functionality\n */\n@Injectable()\nexport class ChemicalEquationBalancer {\n  /**\n   * Balances a chemical equation and returns the balanced equation string\n   */\n  balance(equation: string): string {\n    try {\n      const solver = new LinearEquationSolver(equation);\n      const coefficients = solver.solve();\n      \n      const parser = new EquationParser(equation);\n      const { reactants, products } = parser.parse();\n      \n      return this.formatBalancedEquation(reactants, products, coefficients);\n    } catch (error) {\n      throw new ComputationError(\n        `Failed to balance equation \"${equation}\": ${error}`,\n        { equation, operation: 'equation_balancing', originalError: error }\n      );\n    }\n  }\n\n  /**\n   * Balances a chemical equation and returns detailed result\n   */\n  balanceDetailed(equation: string): BalancedEquation {\n    const solver = new LinearEquationSolver(equation);\n    const coefficients = solver.solve();\n    \n    const parser = new EquationParser(equation);\n    const { reactants, products } = parser.parse();\n    \n    return {\n      equation: this.formatBalancedEquation(reactants, products, coefficients),\n      coefficients,\n      reactants,\n      products\n    };\n  }\n\n  private formatBalancedEquation(reactants: string[], products: string[], coefficients: number[]): string {\n    const formatSide = (species: string[], startIndex: number): string => {\n      return species.map((specie, index) => {\n        const coeff = coefficients[startIndex + index];\n        return coeff === 1 ? specie : `${coeff} ${specie}`;\n      }).join(' + ');\n    };\n\n    const reactantSide = formatSide(reactants, 0);\n    const productSide = formatSide(products, reactants.length);\n    \n    return `${reactantSide} = ${productSide}`;\n  }\n}\n","import { calculateMolarWeight, EquationParser } from './utils';\nimport { ChemicalEquationBalancer } from './balancer';\nimport { StoichiometryResult, SpeciesData } from './types';\nimport { ValidationError } from './core/errors/CREBError';\nimport { Injectable } from './core/decorators/Injectable';\n\n/**\n * Stoichiometry calculator\n * Based on the Stoichiometry class from the original CREB project\n */\n@Injectable()\nexport class Stoichiometry {\n  private equation?: string;\n  private reactants: string[] = [];\n  private products: string[] = [];\n  private coefficients: number[] = [];\n  private balancer: ChemicalEquationBalancer;\n\n  constructor(equation?: string) {\n    this.balancer = new ChemicalEquationBalancer();\n    \n    if (equation) {\n      this.equation = equation;\n      this.initializeFromEquation(equation);\n    }\n  }\n\n  private initializeFromEquation(equation: string) {\n    // First, parse the raw equation (without coefficients) to get species names\n    const rawParser = new EquationParser(equation);\n    const rawData = rawParser.parse();\n    \n    // Balance the equation to get coefficients\n    const balanced = this.balancer.balanceDetailed(equation);\n    this.reactants = rawData.reactants;\n    this.products = rawData.products;\n    this.coefficients = balanced.coefficients;\n  }\n\n  /**\n   * Calculates the molar weight of a chemical formula\n   */\n  calculateMolarWeight(formula: string): number {\n    return calculateMolarWeight(formula);\n  }\n\n  /**\n   * Calculates stoichiometric ratios relative to a selected species\n   */\n  calculateRatios(selectedSpecies: string): number[] {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided. Initialize with an equation first.',\n        { operation: 'calculateRatios', selectedSpecies },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n\n    const allSpecies = [...this.reactants, ...this.products];\n    const selectedIndex = allSpecies.indexOf(selectedSpecies);\n    \n    if (selectedIndex === -1) {\n      const availableSpecies = allSpecies.join(', ');\n      throw new ValidationError(\n        `Species \"${selectedSpecies}\" not found in the equation. Available species: ${availableSpecies}`,\n        { selectedSpecies, availableSpecies: allSpecies },\n        { field: 'selectedSpecies', value: selectedSpecies, constraint: `must be one of: ${availableSpecies}` }\n      );\n    }\n\n    const selectedCoefficient = this.coefficients[selectedIndex];\n    return this.coefficients.map(coeff => coeff / selectedCoefficient);\n  }\n\n  /**\n   * Performs stoichiometric calculations starting from moles\n   */\n  calculateFromMoles(selectedSpecies: string, moles: number): StoichiometryResult {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided. Initialize with an equation first.',\n        { operation: 'calculateFromMoles', selectedSpecies, moles },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n\n    const ratios = this.calculateRatios(selectedSpecies);\n    const allSpecies = [...this.reactants, ...this.products];\n    \n    const result: StoichiometryResult = {\n      reactants: {},\n      products: {},\n      totalMolarMass: { reactants: 0, products: 0 }\n    };\n\n    // Calculate for all species\n    allSpecies.forEach((species, index) => {\n      const speciesMoles = ratios[index] * moles;\n      const molarWeight = this.calculateMolarWeight(species);\n      const grams = speciesMoles * molarWeight;\n\n      const speciesData: SpeciesData = {\n        moles: parseFloat(speciesMoles.toFixed(3)),\n        grams: parseFloat(grams.toFixed(3)),\n        molarWeight: molarWeight\n      };\n\n      if (this.reactants.includes(species)) {\n        result.reactants[species] = speciesData;\n        result.totalMolarMass.reactants += grams;\n      } else {\n        result.products[species] = speciesData;\n        result.totalMolarMass.products += grams;\n      }\n    });\n\n    // Round total molar masses\n    result.totalMolarMass.reactants = parseFloat(result.totalMolarMass.reactants.toFixed(3));\n    result.totalMolarMass.products = parseFloat(result.totalMolarMass.products.toFixed(3));\n\n    return result;\n  }\n\n  /**\n   * Performs stoichiometric calculations starting from grams\n   */\n  calculateFromGrams(selectedSpecies: string, grams: number): StoichiometryResult {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided. Initialize with an equation first.',\n        { operation: 'calculateFromGrams', selectedSpecies, grams },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n\n    const molarWeight = this.calculateMolarWeight(selectedSpecies);\n    const moles = grams / molarWeight;\n    \n    return this.calculateFromMoles(selectedSpecies, moles);\n  }\n\n  /**\n   * Gets the balanced equation\n   */\n  getBalancedEquation(): string {\n    if (!this.equation) {\n      throw new ValidationError(\n        'No equation provided.',\n        { operation: 'getBalancedEquation' },\n        { field: 'equation', value: this.equation, constraint: 'must be initialized' }\n      );\n    }\n    return this.balancer.balance(this.equation);\n  }\n\n  /**\n   * Gets all species in the reaction with their molar weights\n   */\n  getSpeciesInfo(): { [species: string]: { molarWeight: number; type: 'reactant' | 'product' } } {\n    const result: { [species: string]: { molarWeight: number; type: 'reactant' | 'product' } } = {};\n    \n    this.reactants.forEach(species => {\n      result[species] = {\n        molarWeight: this.calculateMolarWeight(species),\n        type: 'reactant'\n      };\n    });\n\n    this.products.forEach(species => {\n      result[species] = {\n        molarWeight: this.calculateMolarWeight(species),\n        type: 'product'\n      };\n    });\n\n    return result;\n  }\n\n  /**\n   * Static method to calculate molar weight without instantiating the class\n   */\n  static calculateMolarWeight(formula: string): number {\n    return calculateMolarWeight(formula);\n  }\n}\n","/**\n * Advanced TypeScript Support for CREB Library\n * Enhanced type definitions with generic constraints and branded types\n * Provides superior IntelliSense and type safety for chemical data structures\n */\n\n// ============================================================================\n// Branded Types for Enhanced Type Safety\n// ============================================================================\n\n/**\n * Branded type for chemical formulas ensuring compile-time validation\n */\nexport type ChemicalFormula = string & { readonly __brand: 'ChemicalFormula' };\n\n/**\n * Branded type for valid element symbols\n */\nexport type ElementSymbol = string & { readonly __brand: 'ElementSymbol' };\n\n/**\n * Branded type for balanced chemical equations\n */\nexport type BalancedEquationString = string & { readonly __brand: 'BalancedEquation' };\n\n/**\n * Branded type for SMILES notation\n */\nexport type SMILESNotation = string & { readonly __brand: 'SMILES' };\n\n/**\n * Branded type for InChI notation\n */\nexport type InChINotation = string & { readonly __brand: 'InChI' };\n\n/**\n * Branded type for CAS numbers\n */\nexport type CASNumber = string & { readonly __brand: 'CAS' };\n\n// ============================================================================\n// Generic Constraints for Chemical Formulas\n// ============================================================================\n\n/**\n * Type constraint for valid chemical elements (Periodic Table)\n */\nexport type ValidElement = \n  | 'H' | 'He' | 'Li' | 'Be' | 'B' | 'C' | 'N' | 'O' | 'F' | 'Ne'\n  | 'Na' | 'Mg' | 'Al' | 'Si' | 'P' | 'S' | 'Cl' | 'Ar' | 'K' | 'Ca'\n  | 'Sc' | 'Ti' | 'V' | 'Cr' | 'Mn' | 'Fe' | 'Co' | 'Ni' | 'Cu' | 'Zn'\n  | 'Ga' | 'Ge' | 'As' | 'Se' | 'Br' | 'Kr' | 'Rb' | 'Sr' | 'Y' | 'Zr'\n  | 'Nb' | 'Mo' | 'Tc' | 'Ru' | 'Rh' | 'Pd' | 'Ag' | 'Cd' | 'In' | 'Sn'\n  | 'Sb' | 'Te' | 'I' | 'Xe' | 'Cs' | 'Ba' | 'La' | 'Ce' | 'Pr' | 'Nd'\n  | 'Pm' | 'Sm' | 'Eu' | 'Gd' | 'Tb' | 'Dy' | 'Ho' | 'Er' | 'Tm' | 'Yb'\n  | 'Lu' | 'Hf' | 'Ta' | 'W' | 'Re' | 'Os' | 'Ir' | 'Pt' | 'Au' | 'Hg'\n  | 'Tl' | 'Pb' | 'Bi' | 'Po' | 'At' | 'Rn' | 'Fr' | 'Ra' | 'Ac' | 'Th'\n  | 'Pa' | 'U' | 'Np' | 'Pu' | 'Am' | 'Cm' | 'Bk' | 'Cf' | 'Es' | 'Fm'\n  | 'Md' | 'No' | 'Lr' | 'Rf' | 'Db' | 'Sg' | 'Bh' | 'Hs' | 'Mt' | 'Ds'\n  | 'Rg' | 'Cn' | 'Nh' | 'Fl' | 'Mc' | 'Lv' | 'Ts' | 'Og';\n\n/**\n * Generic element count with typed element symbols\n */\n/**\n * Type-safe element count with generic constraints for elements\n */\nexport type TypedElementCount<T extends ValidElement = ValidElement> = {\n  [K in T]?: number;\n};\n\n/**\n * Generic compound composition with strict typing\n */\nexport type CompoundComposition<T extends ValidElement = ValidElement> = {\n  readonly elements: TypedElementCount<T>;\n  readonly molecularWeight: number;\n  readonly formula: ChemicalFormula;\n};\n\n// ============================================================================\n// Advanced Type Guards and Validation\n// ============================================================================\n\n/**\n * Type guard for chemical formulas\n */\nexport function isChemicalFormula(value: string): value is ChemicalFormula {\n  // More permissive validation - basic pattern for chemical formulas\n  const pattern = /^[A-Z][a-z]?(?:\\d*\\(?[A-Z][a-z]?\\d*\\)?)*\\d*$/;\n  return typeof value === 'string' && value.length > 0 && /[A-Z]/.test(value);\n}\n\n/**\n * Type guard for element symbols\n */\nexport function isElementSymbol(value: string): value is ElementSymbol {\n  const validElements: ReadonlySet<string> = new Set([\n    'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca',\n    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr',\n    'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn',\n    'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd',\n    'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n    'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th',\n    'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm',\n    'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds',\n    'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og'\n  ]);\n  return validElements.has(value);\n}\n\n/**\n * Type guard for balanced equations\n */\nexport function isBalancedEquation(value: string): value is BalancedEquationString {\n  return value.includes('->') || value.includes('→');\n}\n\n// ============================================================================\n// Type-Safe Chemical Data Structures\n// ============================================================================\n\n/**\n * Enhanced equation data with strict typing\n */\nexport interface TypedEquationData<TElements extends ValidElement = ValidElement> {\n  readonly reactants: readonly ChemicalFormula[];\n  readonly products: readonly ChemicalFormula[];\n  readonly parsedReactants: Record<ChemicalFormula, TypedElementCount<TElements>>;\n  readonly parsedProducts: Record<ChemicalFormula, TypedElementCount<TElements>>;\n  readonly elements: readonly TElements[];\n}\n\n/**\n * Enhanced balanced equation with type safety\n */\nexport interface TypedBalancedEquation<TElements extends ValidElement = ValidElement> {\n  readonly equation: BalancedEquationString;\n  readonly coefficients: readonly number[];\n  readonly reactants: readonly ChemicalFormula[];\n  readonly products: readonly ChemicalFormula[];\n  readonly elementalBalance: Record<TElements, number>;\n  readonly isBalanced: true; // Literal type for compile-time guarantee\n}\n\n/**\n * Type-safe species data with enhanced properties\n */\nexport interface TypedSpeciesData<TFormula extends ChemicalFormula = ChemicalFormula> {\n  readonly formula: TFormula;\n  readonly moles: number;\n  readonly grams: number;\n  readonly molarWeight: number;\n  readonly percentage: number;\n  readonly composition: CompoundComposition;\n}\n\n/**\n * Enhanced stoichiometry result with strict typing\n */\nexport interface TypedStoichiometryResult<\n  TReactants extends ChemicalFormula = ChemicalFormula,\n  TProducts extends ChemicalFormula = ChemicalFormula\n> {\n  readonly reactants: Record<TReactants, TypedSpeciesData<TReactants>>;\n  readonly products: Record<TProducts, TypedSpeciesData<TProducts>>;\n  readonly totalMolarMass: {\n    readonly reactants: number;\n    readonly products: number;\n  };\n  readonly massBalance: number; // Should be 1.0 for balanced equations\n  readonly equation: TypedBalancedEquation;\n}\n\n// ============================================================================\n// Advanced Reaction Types\n// ============================================================================\n\n/**\n * Reaction type classification with literal types\n */\nexport type ReactionType = \n  | 'synthesis'\n  | 'decomposition'\n  | 'single-replacement'\n  | 'double-replacement'\n  | 'combustion'\n  | 'acid-base'\n  | 'redox'\n  | 'precipitation'\n  | 'complex-formation';\n\n/**\n * Phase state with literal types\n */\nexport type PhaseState = 'solid' | 'liquid' | 'gas' | 'aqueous' | 'plasma';\n\n/**\n * Enhanced compound with phase information\n */\nexport interface TypedCompound<TFormula extends ChemicalFormula = ChemicalFormula> {\n  readonly formula: TFormula;\n  readonly name?: string;\n  readonly phase?: PhaseState;\n  readonly coefficient: number;\n  readonly composition: CompoundComposition;\n  readonly properties?: Readonly<{\n    molarMass: number;\n    density?: number;\n    meltingPoint?: number;\n    boilingPoint?: number;\n  }>;\n}\n\n/**\n * Type-safe reaction with enhanced metadata\n */\nexport interface TypedReaction<\n  TReactants extends ChemicalFormula = ChemicalFormula,\n  TProducts extends ChemicalFormula = ChemicalFormula\n> {\n  readonly reactants: readonly TypedCompound<TReactants>[];\n  readonly products: readonly TypedCompound<TProducts>[];\n  readonly type: ReactionType;\n  readonly isBalanced: boolean;\n  readonly balancedEquation?: TypedBalancedEquation;\n  readonly conditions?: Readonly<{\n    temperature?: number;\n    pressure?: number;\n    catalyst?: string;\n    solvent?: string;\n  }>;\n}\n\n// ============================================================================\n// Utility Types for Enhanced IntelliSense\n// ============================================================================\n\n/**\n * Extract element types from a chemical formula (compile-time)\n */\nexport type ExtractElements<T extends string> = \n  T extends `${infer Element}${infer Rest}`\n    ? Element extends ValidElement\n      ? Element | ExtractElements<Rest>\n      : ExtractElements<Rest>\n    : never;\n\n/**\n * Conditional type for organic vs inorganic compounds\n */\nexport type CompoundCategory<T extends ChemicalFormula> = \n  T extends ChemicalFormula\n    ? ExtractElements<T> extends 'C'\n      ? 'organic'\n      : 'inorganic'\n    : never;\n\n/**\n * Helper type for reaction participants\n */\nexport type ReactionParticipants<T extends TypedReaction> = \n  T extends TypedReaction<infer R, infer P> ? R | P : never;\n\n// ============================================================================\n// Factory Functions with Type Safety\n// ============================================================================\n\n/**\n * Create a chemical formula with compile-time validation\n */\nexport function createChemicalFormula(formula: string): ChemicalFormula {\n  if (!isChemicalFormula(formula)) {\n    throw new Error(`Invalid chemical formula: ${formula}`);\n  }\n  return formula;\n}\n\n/**\n * Create an element symbol with validation\n */\nexport function createElementSymbol(symbol: string): ElementSymbol {\n  if (!isElementSymbol(symbol)) {\n    throw new Error(`Invalid element symbol: ${symbol}`);\n  }\n  return symbol as ElementSymbol;\n}\n\n// ============================================================================\n// Template Literal Types for Formula Parsing\n// ============================================================================\n\n/**\n * Template literal type for common chemical formulas\n */\nexport type CommonFormulas = \n  | 'H2O' | 'CO2' | 'O2' | 'N2' | 'H2' | 'CH4' | 'C2H6' | 'C2H4' | 'C2H2'\n  | 'NH3' | 'HCl' | 'H2SO4' | 'NaOH' | 'Ca(OH)2' | 'CaCO3' | 'NaCl'\n  | 'C6H12O6' | 'C6H6' | 'C2H5OH' | 'CH3COOH' | 'C8H18';\n\n/**\n * Auto-completion helper for common chemical formulas\n */\nexport type FormulaAutoComplete<T extends string> = \n  T extends CommonFormulas ? T : T extends `${CommonFormulas}${string}` ? T : string;\n\n// ============================================================================\n// Advanced Generic Constraints\n// ============================================================================\n\n/**\n * Constraint for balanced chemical equations\n */\nexport interface BalancedEquationConstraint<T extends TypedReaction> {\n  readonly reaction: T;\n  readonly verify: T['isBalanced'] extends true ? true : false;\n}\n\n/**\n * Constraint for mass conservation\n */\nexport interface MassConservationConstraint<T extends TypedStoichiometryResult> {\n  readonly result: T;\n  readonly conserved: T['massBalance'] extends 1.0 ? true : false;\n}\n\n// ============================================================================\n// Utility Functions for Type-Safe Operations\n// ============================================================================\n\n/**\n * Parse a chemical formula into element counts\n */\nexport function parseFormula(formula: ChemicalFormula): TypedElementCount {\n  const result: TypedElementCount = {};\n  \n  // Handle parentheses first by expanding them\n  let expandedFormula = formula as string;\n  \n  // Find patterns like (OH)2 and expand them\n  const parenthesesPattern = /\\(([^)]+)\\)(\\d*)/g;\n  expandedFormula = expandedFormula.replace(parenthesesPattern, (match, group, multiplier) => {\n    const mult = multiplier ? parseInt(multiplier, 10) : 1;\n    let expanded = '';\n    for (let i = 0; i < mult; i++) {\n      expanded += group;\n    }\n    return expanded;\n  });\n  \n  // Now parse the expanded formula\n  const matches = expandedFormula.match(/([A-Z][a-z]?)(\\d*)/g);\n  if (matches) {\n    for (const match of matches) {\n      const elementMatch = match.match(/([A-Z][a-z]?)(\\d*)/);\n      if (elementMatch) {\n        const element = elementMatch[1];\n        const count = elementMatch[2] ? parseInt(elementMatch[2], 10) : 1;\n        \n        if (isElementSymbol(element)) {\n          result[element as ValidElement] = (result[element as ValidElement] || 0) + count;\n        }\n      }\n    }\n  }\n  \n  return result;\n}\n\n// ============================================================================\n// Enhanced Error Types\n// ============================================================================\n\n/**\n * Type-safe error for chemical formula validation\n */\nexport class ChemicalFormulaError extends Error {\n  constructor(\n    public readonly formula: string,\n    public readonly reason: 'invalid-syntax' | 'unknown-element' | 'invalid-structure'\n  ) {\n    super(`Invalid chemical formula \"${formula}\": ${reason}`);\n    this.name = 'ChemicalFormulaError';\n  }\n}\n\n/**\n * Type-safe error for equation balancing\n */\nexport class EquationBalancingError extends Error {\n  constructor(\n    public readonly equation: string,\n    public readonly reason: 'impossible-balance' | 'invalid-reactants' | 'invalid-products'\n  ) {\n    super(`Cannot balance equation \"${equation}\": ${reason}`);\n    this.name = 'EquationBalancingError';\n  }\n}\n\n// ============================================================================\n// Exports for Enhanced IntelliSense\n// ============================================================================\n\nexport {\n  // Re-export all types for better IntelliSense\n  type TypedElementCount as ElementCount,\n  type TypedEquationData as EquationData,\n  type TypedBalancedEquation as BalancedEquation,\n  type TypedSpeciesData as SpeciesData,\n  type TypedStoichiometryResult as StoichiometryResult,\n  type TypedCompound as Compound,\n  type TypedReaction as Reaction\n};\n","/**\n * Enhanced Chemical Equation Balancer with Advanced TypeScript Support\n * Simplified version that provides compound analysis and type safety\n */\n\nimport { ChemicalEquationBalancer } from './balancer';\nimport { ElementCounter } from './utils';\nimport { \n  ChemicalFormula, \n  ElementSymbol, \n  ValidElement,\n  TypedElementCount,\n  isChemicalFormula,\n  isElementSymbol,\n  parseFormula,\n  createChemicalFormula\n} from './advancedTypes';\n\n/**\n * Enhanced chemical compound information\n */\nexport interface EnhancedCompoundInfo {\n  formula: string;\n  molarMass: number;\n  elements: string[];\n  elementCount: Record<string, number>;\n}\n\n/**\n * Enhanced balanced equation result with compound analysis\n */\nexport interface EnhancedBalanceResult {\n  equation: string;\n  isBalanced: boolean;\n  compounds: EnhancedCompoundInfo[];\n  coefficients?: number[];\n  reactants?: string[];\n  products?: string[];\n}\n\n/**\n * Enhanced balancer with type-safe compound analysis\n */\nexport class EnhancedBalancer {\n  private balancer: ChemicalEquationBalancer;\n\n  constructor() {\n    this.balancer = new ChemicalEquationBalancer();\n  }\n\n  /**\n   * Balance equation with enhanced compound information\n   */\n  balance(equation: string): EnhancedBalanceResult {\n    try {\n      // Use the detailed balancer for more information\n      const result = this.balancer.balanceDetailed(equation);\n      \n      // Extract all unique formulas from reactants and products\n      const allFormulas = new Set<string>();\n      \n      // Add formulas from the result structure\n      if (result.reactants && result.reactants.length > 0) {\n        result.reactants.forEach((formula: string) => allFormulas.add(formula));\n      }\n      if (result.products && result.products.length > 0) {\n        result.products.forEach((formula: string) => allFormulas.add(formula));\n      }\n\n      // Analyze each compound\n      const compounds = Array.from(allFormulas).map(formula => \n        this.analyzeCompound(formula)\n      ).filter(compound => compound.formula !== ''); // Filter out empty results\n\n      // Determine if the equation was balanced by checking if it changed OR if coefficients are all 1 (already balanced)\n      const coefficientsAllOne = result.coefficients && result.coefficients.every(coeff => coeff === 1);\n      const wasBalanced = result.equation !== equation || coefficientsAllOne;\n\n      return {\n        equation: result.equation,\n        isBalanced: wasBalanced,\n        compounds,\n        coefficients: result.coefficients,\n        reactants: result.reactants,\n        products: result.products\n      };\n\n    } catch (error) {\n      // Note: Error in enhanced balancer - using fallback\n      return {\n        equation,\n        isBalanced: false,\n        compounds: [],\n        coefficients: [],\n        reactants: [],\n        products: []\n      };\n    }\n  }\n\n  /**\n   * Analyze a single compound for detailed information\n   */\n  private analyzeCompound(formula: string): EnhancedCompoundInfo {\n    try {\n      const elementCounter = new ElementCounter(formula);\n      const elementCount = elementCounter.parseFormula();\n      \n      const elements = Object.keys(elementCount);\n      const molarMass = this.calculateMolarMass(elementCount);\n\n      return {\n        formula,\n        molarMass,\n        elements,\n        elementCount\n      };\n    } catch (error) {\n      return {\n        formula,\n        molarMass: 0,\n        elements: [],\n        elementCount: {}\n      };\n    }\n  }\n\n  /**\n   * Calculate molar mass from element count\n   */\n  private calculateMolarMass(elementCount: Record<string, number>): number {\n    // Atomic masses (simplified)\n    const atomicMasses: Record<string, number> = {\n      'H': 1.008, 'He': 4.003, 'Li': 6.941, 'Be': 9.012, 'B': 10.811,\n      'C': 12.011, 'N': 14.007, 'O': 15.999, 'F': 18.998, 'Ne': 20.180,\n      'Na': 22.990, 'Mg': 24.305, 'Al': 26.982, 'Si': 28.086, 'P': 30.974,\n      'S': 32.065, 'Cl': 35.453, 'Ar': 39.948, 'K': 39.098, 'Ca': 40.078,\n      'Fe': 55.845, 'Cu': 63.546, 'Zn': 65.38, 'Ag': 107.868, 'Au': 196.966\n      // Add more as needed\n    };\n\n    let totalMass = 0;\n    for (const [element, count] of Object.entries(elementCount)) {\n      const atomicMass = atomicMasses[element];\n      if (atomicMass) {\n        totalMass += atomicMass * (count || 0);\n      }\n    }\n\n    return totalMass;\n  }\n\n  /**\n   * Simple formula validation\n   */\n  private isValidFormula(formula: string): boolean {\n    // Basic validation - contains at least one capital letter\n    return /[A-Z]/.test(formula) && formula.length > 0;\n  }\n}\n","/**\n * Cache Eviction Policies for CREB-JS\n * \n * Implements various cache eviction strategies including LRU, LFU, FIFO, TTL, and Random.\n * Each policy provides different trade-offs between performance and memory efficiency.\n */\n\nimport { EvictionPolicy, EvictionStrategy, CacheEntry, AdvancedCacheConfig } from './types';\n\n/**\n * Least Recently Used (LRU) eviction policy\n * Evicts entries that haven't been accessed for the longest time\n */\nexport class LRUEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'lru';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const candidates: Array<{ key: string; lastAccessed: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      candidates.push({ key, lastAccessed: entry.lastAccessed });\n    }\n    \n    // Sort by last accessed time (oldest first)\n    candidates.sort((a, b) => a.lastAccessed - b.lastAccessed);\n    \n    return candidates.slice(0, targetCount).map(c => c.key);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Least Frequently Used (LFU) eviction policy\n * Evicts entries with the lowest access frequency\n */\nexport class LFUEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'lfu';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const candidates: Array<{ key: string; accessCount: number; lastAccessed: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      candidates.push({ \n        key, \n        accessCount: entry.accessCount,\n        lastAccessed: entry.lastAccessed \n      });\n    }\n    \n    // Sort by access count (lowest first), then by last accessed for ties\n    candidates.sort((a, b) => {\n      if (a.accessCount !== b.accessCount) {\n        return a.accessCount - b.accessCount;\n      }\n      return a.lastAccessed - b.lastAccessed;\n    });\n    \n    return candidates.slice(0, targetCount).map(c => c.key);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * First In, First Out (FIFO) eviction policy\n * Evicts entries in the order they were inserted\n */\nexport class FIFOEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'fifo';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const candidates: Array<{ key: string; insertionOrder: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      candidates.push({ key, insertionOrder: entry.insertionOrder });\n    }\n    \n    // Sort by insertion order (oldest first)\n    candidates.sort((a, b) => a.insertionOrder - b.insertionOrder);\n    \n    return candidates.slice(0, targetCount).map(c => c.key);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Time To Live (TTL) eviction policy\n * Evicts expired entries first, then falls back to LRU\n */\nexport class TTLEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'ttl';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const now = Date.now();\n    const expired: string[] = [];\n    const nonExpired: Array<{ key: string; lastAccessed: number }> = [];\n    \n    for (const [key, entry] of entries.entries()) {\n      if (entry.ttl > 0 && now >= entry.expiresAt) {\n        expired.push(key);\n      } else {\n        nonExpired.push({ key, lastAccessed: entry.lastAccessed });\n      }\n    }\n    \n    // Return expired entries first\n    if (expired.length >= targetCount) {\n      return expired.slice(0, targetCount);\n    }\n    \n    // If not enough expired entries, use LRU for the rest\n    const remaining = targetCount - expired.length;\n    nonExpired.sort((a, b) => a.lastAccessed - b.lastAccessed);\n    \n    return [...expired, ...nonExpired.slice(0, remaining).map(c => c.key)];\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Random eviction policy\n * Evicts random entries (useful for testing and as fallback)\n */\nexport class RandomEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'random';\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    const keys = Array.from(entries.keys());\n    const candidates: string[] = [];\n    \n    // Fisher-Yates shuffle to get random keys\n    for (let i = 0; i < targetCount && i < keys.length; i++) {\n      const randomIndex = Math.floor(Math.random() * (keys.length - i)) + i;\n      [keys[i], keys[randomIndex]] = [keys[randomIndex], keys[i]];\n      candidates.push(keys[i]);\n    }\n    \n    return candidates;\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    entry.lastAccessed = Date.now();\n    entry.accessCount++;\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    const now = Date.now();\n    entry.lastAccessed = now;\n    entry.accessCount = 1;\n  }\n}\n\n/**\n * Eviction policy factory\n */\nexport class EvictionPolicyFactory {\n  private static policies = new Map<EvictionStrategy, EvictionPolicy>([\n    ['lru', new LRUEvictionPolicy()],\n    ['lfu', new LFUEvictionPolicy()],\n    ['fifo', new FIFOEvictionPolicy()],\n    ['ttl', new TTLEvictionPolicy()],\n    ['random', new RandomEvictionPolicy()]\n  ]);\n\n  /**\n   * Get eviction policy instance\n   */\n  static getPolicy(strategy: EvictionStrategy): EvictionPolicy {\n    const policy = this.policies.get(strategy);\n    if (!policy) {\n      throw new Error(`Unknown eviction strategy: ${strategy}`);\n    }\n    return policy;\n  }\n\n  /**\n   * Register custom eviction policy\n   */\n  static registerPolicy(policy: EvictionPolicy): void {\n    this.policies.set(policy.strategy, policy);\n  }\n\n  /**\n   * Get all available strategies\n   */\n  static getAvailableStrategies(): EvictionStrategy[] {\n    return Array.from(this.policies.keys());\n  }\n}\n\n/**\n * Adaptive eviction policy that switches strategies based on access patterns\n */\nexport class AdaptiveEvictionPolicy implements EvictionPolicy {\n  readonly strategy: EvictionStrategy = 'lru'; // Default fallback\n  \n  private currentPolicy: EvictionPolicy;\n  private performanceHistory: Map<EvictionStrategy, number[]> = new Map();\n  private evaluationWindow = 100; // Number of operations to evaluate\n  private operationCount = 0;\n  \n  constructor(private fallbackStrategy: EvictionStrategy = 'lru') {\n    this.currentPolicy = EvictionPolicyFactory.getPolicy(fallbackStrategy);\n    \n    // Initialize performance tracking\n    for (const strategy of EvictionPolicyFactory.getAvailableStrategies()) {\n      this.performanceHistory.set(strategy, []);\n    }\n  }\n\n  selectEvictionCandidates<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig,\n    targetCount: number\n  ): string[] {\n    this.operationCount++;\n    \n    // Periodically evaluate and potentially switch strategies\n    if (this.operationCount % this.evaluationWindow === 0) {\n      this.evaluateAndAdapt(entries, config);\n    }\n    \n    return this.currentPolicy.selectEvictionCandidates(entries, config, targetCount);\n  }\n\n  onAccess<T>(entry: CacheEntry<T>): void {\n    this.currentPolicy.onAccess(entry);\n  }\n\n  onInsert<T>(entry: CacheEntry<T>): void {\n    this.currentPolicy.onInsert(entry);\n  }\n\n  /**\n   * Evaluate current performance and adapt strategy if needed\n   */\n  private evaluateAndAdapt<T>(\n    entries: Map<string, CacheEntry<T>>,\n    config: AdvancedCacheConfig\n  ): void {\n    // Calculate access pattern metrics\n    const now = Date.now();\n    let totalAccesses = 0;\n    let recentAccesses = 0;\n    let accessVariance = 0;\n    let meanAccess = 0;\n    \n    const accessCounts: number[] = [];\n    \n    for (const entry of entries.values()) {\n      totalAccesses += entry.accessCount;\n      accessCounts.push(entry.accessCount);\n      \n      // Count recent accesses (last hour)\n      if (now - entry.lastAccessed < 3600000) {\n        recentAccesses++;\n      }\n    }\n    \n    if (accessCounts.length > 0) {\n      meanAccess = totalAccesses / accessCounts.length;\n      accessVariance = accessCounts.reduce((sum, count) => sum + Math.pow(count - meanAccess, 2), 0) / accessCounts.length;\n    }\n    \n    // Determine optimal strategy based on patterns\n    let optimalStrategy: EvictionStrategy;\n    \n    if (accessVariance > meanAccess * 2) {\n      // High variance suggests some items are much more popular -> LFU\n      optimalStrategy = 'lfu';\n    } else if (recentAccesses / entries.size > 0.8) {\n      // Most items accessed recently -> LRU\n      optimalStrategy = 'lru';\n    } else if (totalAccesses / entries.size < 2) {\n      // Low overall access -> FIFO\n      optimalStrategy = 'fifo';\n    } else {\n      // Mixed pattern -> TTL\n      optimalStrategy = 'ttl';\n    }\n    \n    // Switch strategy if different from current\n    if (optimalStrategy !== this.currentPolicy.strategy) {\n      this.currentPolicy = EvictionPolicyFactory.getPolicy(optimalStrategy);\n    }\n  }\n\n  /**\n   * Get current strategy being used\n   */\n  getCurrentStrategy(): EvictionStrategy {\n    return this.currentPolicy.strategy;\n  }\n}\n","/**\n * Cache Metrics Collection and Analysis for CREB-JS\n * \n * Provides comprehensive metrics collection, analysis, and reporting for cache performance.\n * Includes real-time monitoring, historical analysis, and performance recommendations.\n */\n\nimport { \n  CacheStats, \n  CacheMetrics, \n  EvictionStrategy, \n  CacheEvent, \n  CacheEventType \n} from './types';\n\n/**\n * Real-time cache metrics collector\n */\nexport class CacheMetricsCollector {\n  private stats!: CacheStats;\n  private history: CacheStats[] = [];\n  private maxHistorySize = 100;\n  private eventCounts = new Map<CacheEventType, number>();\n  private accessTimes: number[] = [];\n  private maxAccessTimeSamples = 1000;\n  \n  constructor() {\n    this.resetStats();\n  }\n\n  /**\n   * Reset all statistics\n   */\n  resetStats(): void {\n    this.stats = {\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      size: 0,\n      memoryUsage: 0,\n      memoryUtilization: 0,\n      evictions: 0,\n      expirations: 0,\n      averageAccessTime: 0,\n      evictionBreakdown: {\n        'lru': 0,\n        'lfu': 0,\n        'fifo': 0,\n        'ttl': 0,\n        'random': 0\n      },\n      lastUpdated: Date.now()\n    };\n    this.eventCounts.clear();\n    this.accessTimes = [];\n  }\n\n  /**\n   * Record a cache event\n   */\n  recordEvent(event: CacheEvent): void {\n    const currentCount = this.eventCounts.get(event.type) || 0;\n    this.eventCounts.set(event.type, currentCount + 1);\n\n    switch (event.type) {\n      case 'hit':\n        this.stats.hits++;\n        break;\n      case 'miss':\n        this.stats.misses++;\n        break;\n      case 'eviction':\n        this.stats.evictions++;\n        if (event.metadata?.strategy) {\n          this.stats.evictionBreakdown[event.metadata.strategy]++;\n        }\n        break;\n      case 'expiration':\n        this.stats.expirations++;\n        break;\n    }\n\n    // Record access time if available\n    if (event.metadata?.latency !== undefined) {\n      this.accessTimes.push(event.metadata.latency);\n      if (this.accessTimes.length > this.maxAccessTimeSamples) {\n        this.accessTimes.shift(); // Remove oldest sample\n      }\n    }\n\n    this.updateComputedStats();\n  }\n\n  /**\n   * Update cache size and memory usage\n   */\n  updateCacheInfo(size: number, memoryUsage: number, maxMemory: number): void {\n    this.stats.size = size;\n    this.stats.memoryUsage = memoryUsage;\n    this.stats.memoryUtilization = maxMemory > 0 ? (memoryUsage / maxMemory) * 100 : 0;\n    this.stats.lastUpdated = Date.now();\n  }\n\n  /**\n   * Get current statistics\n   */\n  getStats(): CacheStats {\n    return { ...this.stats };\n  }\n\n  /**\n   * Get comprehensive metrics with historical data and trends\n   */\n  getMetrics(): CacheMetrics {\n    const current = this.getStats();\n    \n    // Calculate trends\n    const trends = this.calculateTrends();\n    \n    // Calculate peaks\n    const peaks = this.calculatePeaks();\n    \n    return {\n      current,\n      history: [...this.history],\n      trends,\n      peaks\n    };\n  }\n\n  /**\n   * Take a snapshot of current stats for historical tracking\n   */\n  takeSnapshot(): void {\n    const snapshot = this.getStats();\n    this.history.push(snapshot);\n    \n    if (this.history.length > this.maxHistorySize) {\n      this.history.shift(); // Remove oldest snapshot\n    }\n  }\n\n  /**\n   * Get event counts\n   */\n  getEventCounts(): Map<CacheEventType, number> {\n    return new Map(this.eventCounts);\n  }\n\n  /**\n   * Get access time percentiles\n   */\n  getAccessTimePercentiles(): { p50: number; p90: number; p95: number; p99: number } {\n    if (this.accessTimes.length === 0) {\n      return { p50: 0, p90: 0, p95: 0, p99: 0 };\n    }\n\n    const sorted = [...this.accessTimes].sort((a, b) => a - b);\n    const n = sorted.length;\n\n    return {\n      p50: this.getPercentile(sorted, 50),\n      p90: this.getPercentile(sorted, 90),\n      p95: this.getPercentile(sorted, 95),\n      p99: this.getPercentile(sorted, 99)\n    };\n  }\n\n  /**\n   * Update computed statistics\n   */\n  private updateComputedStats(): void {\n    const total = this.stats.hits + this.stats.misses;\n    this.stats.hitRate = total > 0 ? (this.stats.hits / total) * 100 : 0;\n    \n    if (this.accessTimes.length > 0) {\n      this.stats.averageAccessTime = this.accessTimes.reduce((sum, time) => sum + time, 0) / this.accessTimes.length;\n    }\n    \n    this.stats.lastUpdated = Date.now();\n  }\n\n  /**\n   * Calculate performance trends\n   */\n  private calculateTrends(): CacheMetrics['trends'] {\n    if (this.history.length < 3) {\n      return {\n        hitRateTrend: 'stable',\n        memoryTrend: 'stable',\n        latencyTrend: 'stable'\n      };\n    }\n\n    const recent = this.history.slice(-3);\n    \n    // Hit rate trend\n    const hitRateChange = recent[2].hitRate - recent[0].hitRate;\n    const hitRateTrend = Math.abs(hitRateChange) < 1 ? 'stable' : \n                        hitRateChange > 0 ? 'improving' : 'declining';\n    \n    // Memory trend\n    const memoryChange = recent[2].memoryUtilization - recent[0].memoryUtilization;\n    const memoryTrend = Math.abs(memoryChange) < 5 ? 'stable' :\n                        memoryChange > 0 ? 'increasing' : 'decreasing';\n    \n    // Latency trend\n    const latencyChange = recent[2].averageAccessTime - recent[0].averageAccessTime;\n    const latencyTrend = Math.abs(latencyChange) < 0.1 ? 'stable' :\n                         latencyChange < 0 ? 'improving' : 'degrading';\n\n    return {\n      hitRateTrend,\n      memoryTrend,\n      latencyTrend\n    };\n  }\n\n  /**\n   * Calculate peak performance metrics\n   */\n  private calculatePeaks(): CacheMetrics['peaks'] {\n    if (this.history.length === 0) {\n      return {\n        maxHitRate: this.stats.hitRate,\n        maxMemoryUsage: this.stats.memoryUsage,\n        minLatency: this.stats.averageAccessTime\n      };\n    }\n\n    const allStats = [...this.history, this.stats];\n    \n    return {\n      maxHitRate: Math.max(...allStats.map(s => s.hitRate)),\n      maxMemoryUsage: Math.max(...allStats.map(s => s.memoryUsage)),\n      minLatency: Math.min(...allStats.map(s => s.averageAccessTime))\n    };\n  }\n\n  /**\n   * Get percentile value from sorted array\n   */\n  private getPercentile(sorted: number[], percentile: number): number {\n    const index = Math.ceil((percentile / 100) * sorted.length) - 1;\n    return sorted[Math.max(0, Math.min(index, sorted.length - 1))];\n  }\n}\n\n/**\n * Cache performance analyzer\n */\nexport class CachePerformanceAnalyzer {\n  /**\n   * Analyze cache performance and provide recommendations\n   */\n  static analyze(metrics: CacheMetrics): {\n    score: number;\n    issues: string[];\n    recommendations: string[];\n    insights: string[];\n  } {\n    const { current, trends, history } = metrics;\n    const issues: string[] = [];\n    const recommendations: string[] = [];\n    const insights: string[] = [];\n    let score = 100;\n\n    // Analyze hit rate\n    if (current.hitRate < 50) {\n      score -= 30;\n      issues.push('Low cache hit rate');\n      recommendations.push('Consider increasing cache size or optimizing access patterns');\n    } else if (current.hitRate < 70) {\n      score -= 15;\n      issues.push('Moderate cache hit rate');\n      recommendations.push('Review cache eviction strategy');\n    }\n\n    // Analyze memory utilization\n    if (current.memoryUtilization > 90) {\n      score -= 20;\n      issues.push('High memory utilization');\n      recommendations.push('Increase memory limit or improve eviction policy');\n    } else if (current.memoryUtilization < 30) {\n      insights.push('Low memory utilization - cache size could be reduced');\n    }\n\n    // Analyze access time\n    if (current.averageAccessTime > 5) {\n      score -= 15;\n      issues.push('High average access time');\n      recommendations.push('Check for lock contention or optimize data structures');\n    }\n\n    // Analyze trends\n    if (trends.hitRateTrend === 'declining') {\n      score -= 10;\n      issues.push('Declining hit rate trend');\n      recommendations.push('Monitor access patterns and consider adaptive caching');\n    }\n\n    if (trends.latencyTrend === 'degrading') {\n      score -= 10;\n      issues.push('Increasing access latency');\n      recommendations.push('Profile cache operations for performance bottlenecks');\n    }\n\n    // Analyze eviction distribution\n    const totalEvictions = Object.values(current.evictionBreakdown).reduce((sum, count) => sum + count, 0);\n    if (totalEvictions > 0) {\n      const dominantStrategy = Object.entries(current.evictionBreakdown)\n        .reduce((max, [strategy, count]) => count > max.count ? { strategy, count } : max, { strategy: '', count: 0 });\n      \n      if (dominantStrategy.count / totalEvictions > 0.8) {\n        insights.push(`Cache primarily using ${dominantStrategy.strategy} eviction`);\n      } else {\n        insights.push('Cache using mixed eviction strategies - consider adaptive policy');\n      }\n    }\n\n    // Historical comparison\n    if (history.length > 0) {\n      const baseline = history[0];\n      const hitRateImprovement = current.hitRate - baseline.hitRate;\n      if (hitRateImprovement > 10) {\n        insights.push('Significant hit rate improvement observed');\n      } else if (hitRateImprovement < -10) {\n        issues.push('Hit rate has declined significantly');\n        recommendations.push('Review recent changes to access patterns or cache configuration');\n      }\n    }\n\n    return {\n      score: Math.max(0, score),\n      issues,\n      recommendations,\n      insights\n    };\n  }\n\n  /**\n   * Generate performance report\n   */\n  static generateReport(metrics: CacheMetrics): string {\n    const analysis = this.analyze(metrics);\n    const { current } = metrics;\n\n    let report = '# Cache Performance Report\\n\\n';\n    \n    report += `## Overall Score: ${analysis.score}/100\\n\\n`;\n    \n    report += '## Current Statistics\\n';\n    report += `- Hit Rate: ${current.hitRate.toFixed(2)}%\\n`;\n    report += `- Cache Size: ${current.size} entries\\n`;\n    report += `- Memory Usage: ${(current.memoryUsage / 1024 / 1024).toFixed(2)} MB (${current.memoryUtilization.toFixed(1)}%)\\n`;\n    report += `- Average Access Time: ${current.averageAccessTime.toFixed(2)}ms\\n`;\n    report += `- Evictions: ${current.evictions}\\n`;\n    report += `- Expirations: ${current.expirations}\\n\\n`;\n\n    report += '## Trends\\n';\n    report += `- Hit Rate: ${metrics.trends.hitRateTrend}\\n`;\n    report += `- Memory Usage: ${metrics.trends.memoryTrend}\\n`;\n    report += `- Latency: ${metrics.trends.latencyTrend}\\n\\n`;\n\n    if (analysis.issues.length > 0) {\n      report += '## Issues\\n';\n      analysis.issues.forEach(issue => {\n        report += `- ${issue}\\n`;\n      });\n      report += '\\n';\n    }\n\n    if (analysis.recommendations.length > 0) {\n      report += '## Recommendations\\n';\n      analysis.recommendations.forEach(rec => {\n        report += `- ${rec}\\n`;\n      });\n      report += '\\n';\n    }\n\n    if (analysis.insights.length > 0) {\n      report += '## Insights\\n';\n      analysis.insights.forEach(insight => {\n        report += `- ${insight}\\n`;\n      });\n      report += '\\n';\n    }\n\n    return report;\n  }\n}\n","/**\n * Advanced Cache Implementation for CREB-JS\n * \n * Production-ready cache with TTL, multiple eviction policies, metrics,\n * memory management, and thread safety.\n */\n\nimport { \n  IAdvancedCache, \n  CacheEntry, \n  AdvancedCacheConfig, \n  CacheResult, \n  CacheStats, \n  CacheMetrics,\n  CacheEvent,\n  CacheEventType,\n  CacheEventListener,\n  EvictionStrategy\n} from './types';\nimport { EvictionPolicyFactory } from './EvictionPolicies';\nimport { CacheMetricsCollector, CachePerformanceAnalyzer } from './CacheMetrics';\nimport { Injectable } from '../../core/decorators/Injectable';\n\n/**\n * Default cache configuration\n */\nconst DEFAULT_CONFIG: AdvancedCacheConfig = {\n  maxSize: 1000,\n  defaultTtl: 3600000, // 1 hour\n  evictionStrategy: 'lru',\n  fallbackStrategy: 'fifo',\n  maxMemoryBytes: 100 * 1024 * 1024, // 100MB\n  enableMetrics: true,\n  metricsInterval: 60000, // 1 minute\n  autoCleanup: true,\n  cleanupInterval: 300000, // 5 minutes\n  threadSafe: true\n};\n\n/**\n * Advanced cache implementation with comprehensive features\n */\n@Injectable()\nexport class AdvancedCache<T = any> implements IAdvancedCache<T> {\n  private entries = new Map<string, CacheEntry<T>>();\n  private config: AdvancedCacheConfig;\n  private metrics: CacheMetricsCollector;\n  private listeners = new Map<CacheEventType, Set<CacheEventListener<T>>>();\n  private insertionCounter = 0;\n  private cleanupTimer?: NodeJS.Timeout;\n  private metricsTimer?: NodeJS.Timeout;\n  private mutex = new AsyncMutex();\n\n  constructor(config: Partial<AdvancedCacheConfig> = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.metrics = new CacheMetricsCollector();\n    \n    // Start background tasks\n    if (this.config.autoCleanup) {\n      this.startCleanupTimer();\n    }\n    \n    if (this.config.enableMetrics) {\n      this.startMetricsTimer();\n    }\n  }\n\n  /**\n   * Get value from cache\n   */\n  async get(key: string): Promise<CacheResult<T>> {\n    const startTime = Date.now();\n    \n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.getInternal(key, startTime));\n    } else {\n      return this.getInternal(key, startTime);\n    }\n  }\n\n  /**\n   * Set value in cache\n   */\n  async set(key: string, value: T, ttl?: number): Promise<CacheResult<void>> {\n    const startTime = Date.now();\n    \n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.setInternal(key, value, ttl, startTime));\n    } else {\n      return this.setInternal(key, value, ttl, startTime);\n    }\n  }\n\n  /**\n   * Check if key exists in cache\n   */\n  async has(key: string): Promise<boolean> {\n    const entry = this.entries.get(key);\n    if (!entry) return false;\n    \n    // Check if expired\n    const now = Date.now();\n    if (entry.ttl > 0 && now >= entry.expiresAt) {\n      await this.deleteInternal(key);\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Delete entry from cache\n   */\n  async delete(key: string): Promise<boolean> {\n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.deleteInternal(key));\n    } else {\n      return this.deleteInternal(key);\n    }\n  }\n\n  /**\n   * Clear all entries\n   */\n  async clear(): Promise<void> {\n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.clearInternal());\n    } else {\n      return this.clearInternal();\n    }\n  }\n\n  /**\n   * Get current cache statistics\n   */\n  getStats(): CacheStats {\n    this.updateMetrics();\n    return this.metrics.getStats();\n  }\n\n  /**\n   * Get detailed metrics\n   */\n  getMetrics(): CacheMetrics {\n    this.metrics.takeSnapshot();\n    return this.metrics.getMetrics();\n  }\n\n  /**\n   * Force cleanup of expired entries\n   */\n  async cleanup(): Promise<number> {\n    if (this.config.threadSafe) {\n      return this.mutex.runExclusive(() => this.cleanupInternal());\n    } else {\n      return this.cleanupInternal();\n    }\n  }\n\n  /**\n   * Add event listener\n   */\n  addEventListener(type: CacheEventType, listener: CacheEventListener<T>): void {\n    if (!this.listeners.has(type)) {\n      this.listeners.set(type, new Set());\n    }\n    this.listeners.get(type)!.add(listener);\n  }\n\n  /**\n   * Remove event listener\n   */\n  removeEventListener(type: CacheEventType, listener: CacheEventListener<T>): void {\n    const typeListeners = this.listeners.get(type);\n    if (typeListeners) {\n      typeListeners.delete(listener);\n    }\n  }\n\n  /**\n   * Get all keys\n   */\n  keys(): string[] {\n    return Array.from(this.entries.keys());\n  }\n\n  /**\n   * Get cache size\n   */\n  size(): number {\n    return this.entries.size;\n  }\n\n  /**\n   * Get memory usage in bytes\n   */\n  memoryUsage(): number {\n    let total = 0;\n    for (const entry of this.entries.values()) {\n      total += entry.sizeBytes;\n    }\n    return total;\n  }\n\n  /**\n   * Check if cache is healthy\n   */\n  async healthCheck(): Promise<{\n    healthy: boolean;\n    issues: string[];\n    recommendations: string[];\n  }> {\n    const metrics = this.getMetrics();\n    const analysis = CachePerformanceAnalyzer.analyze(metrics);\n    \n    return {\n      healthy: analysis.score >= 70,\n      issues: analysis.issues,\n      recommendations: analysis.recommendations\n    };\n  }\n\n  /**\n   * Shutdown cache and cleanup resources\n   */\n  shutdown(): void {\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n    }\n    if (this.metricsTimer) {\n      clearInterval(this.metricsTimer);\n    }\n  }\n\n  // Internal implementation methods\n\n  private async getInternal(key: string, startTime: number): Promise<CacheResult<T>> {\n    const entry = this.entries.get(key);\n    const latency = Date.now() - startTime;\n    \n    if (!entry) {\n      this.emitEvent('miss', key, undefined, { latency });\n      return { success: true, hit: false, latency };\n    }\n    \n    // Check if expired\n    const now = Date.now();\n    if (entry.ttl > 0 && now >= entry.expiresAt) {\n      await this.deleteInternal(key);\n      this.emitEvent('miss', key, undefined, { latency, expired: true });\n      return { success: true, hit: false, latency, metadata: { expired: true } };\n    }\n    \n    // Update access metadata\n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    policy.onAccess(entry);\n    \n    this.emitEvent('hit', key, entry.value, { latency });\n    return { success: true, value: entry.value, hit: true, latency };\n  }\n\n  private async setInternal(key: string, value: T, ttl?: number, startTime?: number): Promise<CacheResult<void>> {\n    const now = Date.now();\n    const entryTtl = ttl ?? this.config.defaultTtl;\n    const latency = startTime ? now - startTime : 0;\n    \n    // Calculate size estimate\n    const sizeBytes = this.estimateSize(value);\n    \n    // Check memory constraints before adding\n    const currentMemory = this.memoryUsage();\n    if (this.config.maxMemoryBytes > 0 && currentMemory + sizeBytes > this.config.maxMemoryBytes) {\n      await this.evictForMemory(sizeBytes);\n    }\n    \n    // Check size constraints and evict if necessary\n    if (this.entries.size >= this.config.maxSize) {\n      await this.evictEntries(1);\n    }\n    \n    // Create new entry\n    const entry: CacheEntry<T> = {\n      value,\n      createdAt: now,\n      lastAccessed: now,\n      accessCount: 1,\n      ttl: entryTtl,\n      expiresAt: entryTtl > 0 ? now + entryTtl : 0,\n      sizeBytes,\n      insertionOrder: this.insertionCounter++\n    };\n    \n    // Update access metadata\n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    policy.onInsert(entry);\n    \n    // Store entry\n    this.entries.set(key, entry);\n    \n    this.emitEvent('set', key, value, { latency });\n    return { success: true, hit: false, latency };\n  }\n\n  private async deleteInternal(key: string): Promise<boolean> {\n    const entry = this.entries.get(key);\n    if (!entry) return false;\n    \n    this.entries.delete(key);\n    this.emitEvent('delete', key, entry.value);\n    return true;\n  }\n\n  private async clearInternal(): Promise<void> {\n    this.entries.clear();\n    this.insertionCounter = 0;\n    this.emitEvent('clear');\n  }\n\n  private async cleanupInternal(): Promise<number> {\n    const now = Date.now();\n    const expiredKeys: string[] = [];\n    \n    for (const [key, entry] of this.entries.entries()) {\n      if (entry.ttl > 0 && now >= entry.expiresAt) {\n        expiredKeys.push(key);\n      }\n    }\n    \n    for (const key of expiredKeys) {\n      this.entries.delete(key);\n      this.emitEvent('expiration', key);\n    }\n    \n    return expiredKeys.length;\n  }\n\n  private async evictEntries(count: number): Promise<void> {\n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    const candidates = policy.selectEvictionCandidates(this.entries, this.config, count);\n    \n    for (const key of candidates) {\n      const entry = this.entries.get(key);\n      if (entry) {\n        this.entries.delete(key);\n        this.emitEvent('eviction', key, entry.value, { \n          strategy: this.config.evictionStrategy \n        });\n      }\n    }\n  }\n\n  private async evictForMemory(requiredBytes: number): Promise<void> {\n    const currentMemory = this.memoryUsage();\n    const targetMemory = this.config.maxMemoryBytes - requiredBytes;\n    \n    if (currentMemory <= targetMemory) return;\n    \n    const bytesToEvict = currentMemory - targetMemory;\n    let evictedBytes = 0;\n    let evictedCount = 0;\n    \n    const policy = EvictionPolicyFactory.getPolicy(this.config.evictionStrategy);\n    \n    while (evictedBytes < bytesToEvict && this.entries.size > 0) {\n      const candidates = policy.selectEvictionCandidates(this.entries, this.config, 1);\n      if (candidates.length === 0) break;\n      \n      const key = candidates[0];\n      const entry = this.entries.get(key);\n      if (entry) {\n        evictedBytes += entry.sizeBytes;\n        evictedCount++;\n        this.entries.delete(key);\n        this.emitEvent('eviction', key, entry.value, { \n          strategy: this.config.evictionStrategy,\n          reason: 'memory-pressure',\n          memoryBefore: currentMemory,\n          memoryAfter: currentMemory - evictedBytes\n        });\n      }\n    }\n    \n    if (evictedBytes < bytesToEvict) {\n      this.emitEvent('memory-pressure', undefined, undefined, {\n        reason: 'Unable to free sufficient memory'\n      });\n    }\n  }\n\n  private estimateSize(value: T): number {\n    // Simple size estimation - could be improved with more sophisticated analysis\n    const str = JSON.stringify(value);\n    return str.length * 2; // Rough estimate for UTF-16 encoding\n  }\n\n  private emitEvent(type: CacheEventType, key?: string, value?: T, metadata?: any): void {\n    const event: CacheEvent<T> = {\n      type,\n      key,\n      value,\n      timestamp: Date.now(),\n      metadata\n    };\n    \n    // Record in metrics\n    this.metrics.recordEvent(event);\n    \n    // Notify listeners\n    const typeListeners = this.listeners.get(type);\n    if (typeListeners) {\n      for (const listener of typeListeners) {\n        try {\n          listener(event);\n        } catch (error) {\n          console.warn('Cache event listener error:', error);\n        }\n      }\n    }\n  }\n\n  private updateMetrics(): void {\n    const size = this.entries.size;\n    const memory = this.memoryUsage();\n    this.metrics.updateCacheInfo(size, memory, this.config.maxMemoryBytes);\n  }\n\n  private startCleanupTimer(): void {\n    this.cleanupTimer = setInterval(async () => {\n      try {\n        await this.cleanup();\n      } catch (error) {\n        console.warn('Cache cleanup error:', error);\n      }\n    }, this.config.cleanupInterval);\n  }\n\n  private startMetricsTimer(): void {\n    this.metricsTimer = setInterval(() => {\n      this.metrics.takeSnapshot();\n      this.emitEvent('stats-update');\n    }, this.config.metricsInterval);\n  }\n}\n\n/**\n * Simple async mutex for thread safety\n */\nclass AsyncMutex {\n  private locked = false;\n  private queue: Array<() => void> = [];\n\n  async runExclusive<R>(fn: () => R | Promise<R>): Promise<R> {\n    return new Promise((resolve, reject) => {\n      const run = async () => {\n        this.locked = true;\n        try {\n          const result = await fn();\n          resolve(result);\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.locked = false;\n          const next = this.queue.shift();\n          if (next) {\n            next();\n          }\n        }\n      };\n\n      if (this.locked) {\n        this.queue.push(run);\n      } else {\n        run();\n      }\n    });\n  }\n}\n\n/**\n * Cache factory for creating configured cache instances\n */\nexport class CacheFactory {\n  private static presets: Record<string, Partial<AdvancedCacheConfig>> = {\n    'small': {\n      maxSize: 100,\n      maxMemoryBytes: 10 * 1024 * 1024, // 10MB\n      defaultTtl: 1800000, // 30 minutes\n      evictionStrategy: 'lru'\n    },\n    'medium': {\n      maxSize: 1000,\n      maxMemoryBytes: 50 * 1024 * 1024, // 50MB\n      defaultTtl: 3600000, // 1 hour\n      evictionStrategy: 'lru'\n    },\n    'large': {\n      maxSize: 10000,\n      maxMemoryBytes: 200 * 1024 * 1024, // 200MB\n      defaultTtl: 7200000, // 2 hours\n      evictionStrategy: 'lfu'\n    },\n    'memory-optimized': {\n      maxSize: 500,\n      maxMemoryBytes: 25 * 1024 * 1024, // 25MB\n      defaultTtl: 1800000, // 30 minutes\n      evictionStrategy: 'lfu',\n      autoCleanup: true,\n      cleanupInterval: 60000 // 1 minute\n    },\n    'performance-optimized': {\n      maxSize: 5000,\n      maxMemoryBytes: 100 * 1024 * 1024, // 100MB\n      defaultTtl: 3600000, // 1 hour\n      evictionStrategy: 'lru',\n      threadSafe: false, // Better performance but not thread-safe\n      enableMetrics: false // Better performance\n    }\n  };\n\n  /**\n   * Create cache with preset configuration\n   */\n  static create<T = any>(preset: keyof typeof CacheFactory.presets): AdvancedCache<T>;\n  static create<T = any>(config: Partial<AdvancedCacheConfig>): AdvancedCache<T>;\n  static create<T = any>(configOrPreset: keyof typeof CacheFactory.presets | Partial<AdvancedCacheConfig>): AdvancedCache<T> {\n    if (typeof configOrPreset === 'string') {\n      const presetConfig = this.presets[configOrPreset];\n      if (!presetConfig) {\n        throw new Error(`Unknown cache preset: ${configOrPreset}`);\n      }\n      return new AdvancedCache<T>(presetConfig);\n    } else {\n      return new AdvancedCache<T>(configOrPreset);\n    }\n  }\n\n  /**\n   * Register custom preset\n   */\n  static registerPreset(name: string, config: Partial<AdvancedCacheConfig>): void {\n    this.presets[name] = config;\n  }\n\n  /**\n   * Get available presets\n   */\n  static getPresets(): string[] {\n    return Object.keys(this.presets);\n  }\n}\n","/**\n * Browser-compatible chemical formula validation\n * Simplified version that doesn't depend on ValidationPipeline or events\n */\n\n/**\n * Basic validation result interface\n */\nexport interface SimpleValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\n/**\n * Simple chemical formula validator for browser use\n */\nexport function validateChemicalFormula(formula: string): SimpleValidationResult {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n  \n  // Basic validation rules\n  if (!formula || typeof formula !== 'string') {\n    errors.push('Formula must be a non-empty string');\n    return { isValid: false, errors, warnings };\n  }\n  \n  if (formula.trim().length === 0) {\n    errors.push('Formula cannot be empty');\n    return { isValid: false, errors, warnings };\n  }\n  \n  // Check for valid chemical formula pattern\n  const formulaPattern = /^[A-Z][a-z]?(\\d+)?(\\([A-Z][a-z]?(\\d+)?\\)\\d*)*$/;\n  if (!formulaPattern.test(formula.replace(/\\s+/g, ''))) {\n    // More lenient check for complex formulas\n    const basicElementPattern = /^[A-Z][a-z]?\\d*$/;\n    const complexPattern = /^([A-Z][a-z]?\\d*)+(\\([A-Z][a-z]?\\d*\\)\\d*)*$/;\n    const cleanFormula = formula.replace(/\\s+/g, '');\n    \n    if (!basicElementPattern.test(cleanFormula) && !complexPattern.test(cleanFormula)) {\n      warnings.push('Formula may not follow standard chemical notation');\n    }\n  }\n  \n  // Check for common issues\n  if (formula.includes('..')) {\n    errors.push('Formula contains invalid character sequence (..)');\n  }\n  \n  if (formula.match(/\\d{4,}/)) {\n    warnings.push('Formula contains unusually large numbers');\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings\n  };\n}\n\n/**\n * ValidationResult type alias for compatibility\n */\nexport type ValidationResult = SimpleValidationResult;\n","/**\n * Enhanced Chemical Equation Balancer with PubChem integration\n * Provides compound validation, molecular weight verification, and enriched data\n */\n\nimport { ChemicalEquationBalancer } from './balancer';\nimport { BalancedEquation } from './types';\nimport { \n  ComputationError, \n  ValidationError, \n  ErrorCategory, \n  ErrorSeverity,\n  ErrorUtils \n} from './core/errors/CREBError';\nimport { Injectable } from './core/decorators/Injectable';\nimport { AdvancedCache } from './performance/cache/AdvancedCache';\nimport { validateChemicalFormula, ValidationResult } from './validation/browserValidation';\n\n// Import type definitions for PubChem integration\n// Note: In production, this would import from 'creb-pubchem-js'\ninterface PubChemCompound {\n  cid: number;\n  molecularWeight: number | null;\n  molecularFormula: string | null;\n  iupacName: string | null;\n  isomericSmiles?: string | null;\n}\n\nexport interface EnhancedBalancedEquation extends BalancedEquation {\n  compoundData?: Record<string, CompoundInfo>;\n  validation?: {\n    massBalanced: boolean;\n    chargeBalanced: boolean;\n    warnings: string[];\n    formulaValidation?: Record<string, ValidationResult>;\n  };\n  safetyWarnings?: SafetyWarning[];\n}\n\nexport interface SafetyWarning {\n  compound: string;\n  hazard: string;\n  severity: 'low' | 'medium' | 'high' | 'extreme';\n  ghsClassification?: string;\n  precautionaryStatements?: string[];\n}\n\nexport interface CompoundInfo {\n  name: string;\n  cid?: number;\n  molecularWeight?: number;\n  molecularFormula?: string;\n  iupacName?: string;\n  canonicalSmiles?: string;\n  isValid: boolean;\n  error?: string;\n  pubchemData?: PubChemCompound;\n  originalName?: string; // For name-based balancing\n  safetyInfo?: SafetyInfo;\n}\n\nexport interface SafetyInfo {\n  ghsClassifications: string[];\n  hazardStatements: string[];\n  precautionaryStatements: string[];\n  physicalHazards: string[];\n  healthHazards: string[];\n  environmentalHazards: string[];\n  signalWord?: 'Danger' | 'Warning';\n}\n\n@Injectable()\nexport class EnhancedChemicalEquationBalancer extends ChemicalEquationBalancer {\n  private compoundCache = new AdvancedCache<CompoundInfo>({\n    maxSize: 1000,\n    defaultTtl: 7200000, // 2 hours\n    evictionStrategy: 'lru'\n  });\n\n  /**\n   * Balance equation with safety and hazard information\n   */\n  async balanceWithSafety(equation: string): Promise<EnhancedBalancedEquation> {\n    // First get the enhanced balance with PubChem data\n    const enhanced = await this.balanceWithPubChemData(equation);\n    \n    // Add safety information for each compound\n    const safetyWarnings: SafetyWarning[] = [];\n    \n    if (enhanced.compoundData) {\n      for (const [species, compoundInfo] of Object.entries(enhanced.compoundData)) {\n        if (compoundInfo.isValid) {\n          try {\n            // Get safety information for the compound\n            const safetyInfo = await this.getSafetyInfo(compoundInfo);\n            compoundInfo.safetyInfo = safetyInfo;\n            \n            // Generate safety warnings\n            const warnings = this.generateSafetyWarnings(species, safetyInfo);\n            safetyWarnings.push(...warnings);\n          } catch (error) {\n            enhanced.validation?.warnings.push(`Could not retrieve safety data for ${species}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n          }\n        }\n      }\n    }\n    \n    // Add safety warnings to the result\n    enhanced.safetyWarnings = safetyWarnings;\n    \n    return enhanced;\n  }\n\n  /**\n   * Get safety information for a compound\n   */\n  private async getSafetyInfo(compoundInfo: CompoundInfo): Promise<SafetyInfo> {\n    // For now, use a knowledge base of common chemical hazards\n    // In a full implementation, this would query PubChem's safety data\n    const safetyKnowledgeBase = this.getKnownSafetyInfo();\n    \n    const formula = compoundInfo.molecularFormula;\n    const name = compoundInfo.iupacName?.toLowerCase() || compoundInfo.name.toLowerCase();\n    \n    // Check known safety data\n    let safetyInfo = safetyKnowledgeBase[formula || ''] || \n                     safetyKnowledgeBase[name] ||\n                     safetyKnowledgeBase[compoundInfo.name.toLowerCase()];\n    \n    if (!safetyInfo) {\n      // Try to infer basic safety information from chemical properties\n      safetyInfo = this.inferSafetyFromProperties(compoundInfo);\n    }\n    \n    return safetyInfo || {\n      ghsClassifications: [],\n      hazardStatements: [],\n      precautionaryStatements: [],\n      physicalHazards: [],\n      healthHazards: [],\n      environmentalHazards: []\n    };\n  }\n\n  /**\n   * Generate safety warnings from safety information\n   */\n  private generateSafetyWarnings(compound: string, safetyInfo: SafetyInfo): SafetyWarning[] {\n    const warnings: SafetyWarning[] = [];\n    \n    // Process health hazards\n    for (const hazard of safetyInfo.healthHazards) {\n      warnings.push({\n        compound,\n        hazard,\n        severity: this.determineSeverity(hazard),\n        ghsClassification: safetyInfo.ghsClassifications.join(', ') || undefined,\n        precautionaryStatements: safetyInfo.precautionaryStatements.length > 0 ? safetyInfo.precautionaryStatements : undefined\n      });\n    }\n    \n    // Process physical hazards\n    for (const hazard of safetyInfo.physicalHazards) {\n      warnings.push({\n        compound,\n        hazard,\n        severity: this.determineSeverity(hazard),\n        ghsClassification: safetyInfo.ghsClassifications.join(', ') || undefined\n      });\n    }\n    \n    // Process environmental hazards\n    for (const hazard of safetyInfo.environmentalHazards) {\n      warnings.push({\n        compound,\n        hazard,\n        severity: this.determineSeverity(hazard),\n        ghsClassification: safetyInfo.ghsClassifications.join(', ') || undefined\n      });\n    }\n    \n    return warnings;\n  }\n\n  /**\n   * Determine severity level from hazard description\n   */\n  private determineSeverity(hazard: string): 'low' | 'medium' | 'high' | 'extreme' {\n    const hazardLower = hazard.toLowerCase();\n    \n    if (hazardLower.includes('fatal') || hazardLower.includes('death') || hazardLower.includes('severe')) {\n      return 'extreme';\n    }\n    if (hazardLower.includes('serious') || hazardLower.includes('burn') || hazardLower.includes('corrosive')) {\n      return 'high';\n    }\n    if (hazardLower.includes('harmful') || hazardLower.includes('irritant') || hazardLower.includes('toxic')) {\n      return 'medium';\n    }\n    return 'low';\n  }\n\n  /**\n   * Knowledge base of known chemical safety information\n   */\n  private getKnownSafetyInfo(): Record<string, SafetyInfo> {\n    return {\n      'H2SO4': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'sulfuric acid': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'NaOH': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'sodium hydroxide': {\n        ghsClassifications: ['H314', 'H290'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May be corrosive to metals'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Do not breathe dust/fume/gas/mist/vapours/spray'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'HCl': {\n        ghsClassifications: ['H314', 'H335'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Use only outdoors or in a well-ventilated area'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'hydrochloric acid': {\n        ghsClassifications: ['H314', 'H335'],\n        hazardStatements: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        precautionaryStatements: ['Wear protective gloves/protective clothing/eye protection/face protection', 'Use only outdoors or in a well-ventilated area'],\n        physicalHazards: ['Corrosive to metals'],\n        healthHazards: ['Causes severe skin burns and eye damage', 'May cause respiratory irritation'],\n        environmentalHazards: [],\n        signalWord: 'Danger'\n      },\n      'NH3': {\n        ghsClassifications: ['H221', 'H314', 'H400'],\n        hazardStatements: ['Flammable gas', 'Causes severe skin burns and eye damage', 'Very toxic to aquatic life'],\n        precautionaryStatements: ['Keep away from heat/sparks/open flames/hot surfaces', 'Wear protective gloves/protective clothing/eye protection/face protection'],\n        physicalHazards: ['Flammable gas'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: ['Very toxic to aquatic life'],\n        signalWord: 'Danger'\n      },\n      'ammonia': {\n        ghsClassifications: ['H221', 'H314', 'H400'],\n        hazardStatements: ['Flammable gas', 'Causes severe skin burns and eye damage', 'Very toxic to aquatic life'],\n        precautionaryStatements: ['Keep away from heat/sparks/open flames/hot surfaces', 'Wear protective gloves/protective clothing/eye protection/face protection'],\n        physicalHazards: ['Flammable gas'],\n        healthHazards: ['Causes severe skin burns and eye damage'],\n        environmentalHazards: ['Very toxic to aquatic life'],\n        signalWord: 'Danger'\n      },\n      'H2O': {\n        ghsClassifications: [],\n        hazardStatements: [],\n        precautionaryStatements: [],\n        physicalHazards: [],\n        healthHazards: [],\n        environmentalHazards: []\n      },\n      'water': {\n        ghsClassifications: [],\n        hazardStatements: [],\n        precautionaryStatements: [],\n        physicalHazards: [],\n        healthHazards: [],\n        environmentalHazards: []\n      }\n    };\n  }\n\n  /**\n   * Infer basic safety information from compound properties\n   */\n  private inferSafetyFromProperties(compoundInfo: CompoundInfo): SafetyInfo {\n    const safetyInfo: SafetyInfo = {\n      ghsClassifications: [],\n      hazardStatements: [],\n      precautionaryStatements: ['Handle with care', 'Use proper ventilation'],\n      physicalHazards: [],\n      healthHazards: [],\n      environmentalHazards: []\n    };\n    \n    const formula = compoundInfo.molecularFormula || '';\n    const name = compoundInfo.name.toLowerCase();\n    \n    // Infer based on common patterns\n    if (formula.includes('O') && formula.includes('H') && (name.includes('acid') || formula.match(/H\\d*[A-Z]/))) {\n      safetyInfo.healthHazards.push('May cause skin and eye irritation');\n      safetyInfo.precautionaryStatements.push('Avoid contact with skin and eyes');\n    }\n    \n    if (name.includes('chloride') || formula.includes('Cl')) {\n      safetyInfo.healthHazards.push('May be harmful if inhaled');\n      safetyInfo.precautionaryStatements.push('Use in well-ventilated area');\n    }\n    \n    if (name.includes('sulfate') || name.includes('nitrate')) {\n      safetyInfo.healthHazards.push('May cause irritation');\n    }\n    \n    // Default precautionary statement for unknown compounds\n    if (safetyInfo.healthHazards.length === 0 && formula !== 'H2O') {\n      safetyInfo.healthHazards.push('Safety data not available - handle with caution');\n    }\n    \n    return safetyInfo;\n  }\n\n  /**\n   * Balance equation using common chemical names\n   * Converts compound names to formulas using PubChem, then balances\n   */\n  async balanceByName(commonNameEquation: string): Promise<EnhancedBalancedEquation> {\n    try {\n      // Step 1: Parse equation to extract compound names\n      const { reactantNames, productNames } = this.parseEquationNames(commonNameEquation);\n      \n      // Step 2: Resolve each compound name to chemical formula\n      const nameToFormulaMap: Record<string, string> = {};\n      const compoundDataMap: Record<string, CompoundInfo> = {};\n      \n      const allNames = [...reactantNames, ...productNames];\n      \n      for (const name of allNames) {\n        const compoundInfo = await this.getCompoundInfo(name);\n        compoundDataMap[name] = compoundInfo;\n        \n        if (compoundInfo.isValid && compoundInfo.molecularFormula) {\n          nameToFormulaMap[name] = compoundInfo.molecularFormula;\n        } else {\n          // Try common name alternatives\n          const alternatives = this.getCommonNames(name);\n          let found = false;\n          \n          for (const alt of alternatives) {\n            const altInfo = await this.getCompoundInfo(alt);\n            if (altInfo.isValid && altInfo.molecularFormula) {\n              nameToFormulaMap[name] = altInfo.molecularFormula;\n              compoundDataMap[name] = altInfo;\n              found = true;\n              break;\n            }\n          }\n          \n          if (!found) {\n            throw new ComputationError(\n              `Could not resolve compound name: \"${name}\". Try using the chemical formula instead.`,\n              { compoundName: name, operation: 'compound_resolution' }\n            );\n          }\n        }\n      }\n      \n      // Step 3: Reconstruct equation with chemical formulas\n      const formulaEquation = this.reconstructEquationWithFormulas(\n        commonNameEquation, nameToFormulaMap\n      );\n      \n      // Step 4: Balance the reconstructed equation\n      const balanced = this.balanceDetailed(formulaEquation);\n      \n      // Step 5: Create enhanced result with both names and formulas\n      const enhanced: EnhancedBalancedEquation = {\n        ...balanced,\n        compoundData: {},\n        validation: {\n          massBalanced: true,\n          chargeBalanced: true,\n          warnings: []\n        }\n      };\n      \n      // Add compound data for both original names and formulas\n      for (const [name, info] of Object.entries(compoundDataMap)) {\n        if (info.molecularFormula && balanced.reactants.includes(info.molecularFormula)) {\n          enhanced.compoundData![info.molecularFormula] = {\n            ...info,\n            name: info.molecularFormula, // Use formula as key\n            originalName: name // Keep original name\n          };\n        }\n        if (info.molecularFormula && balanced.products.includes(info.molecularFormula)) {\n          enhanced.compoundData![info.molecularFormula] = {\n            ...info,\n            name: info.molecularFormula,\n            originalName: name\n          };\n        }\n      }\n      \n      // Validate mass balance using PubChem molecular weights\n      try {\n        const massValidation = this.validateMassBalance(balanced, enhanced.compoundData!);\n        enhanced.validation!.massBalanced = massValidation.balanced;\n        if (!massValidation.balanced) {\n          enhanced.validation!.warnings.push(`Mass balance discrepancy: ${massValidation.discrepancy.toFixed(4)} g/mol`);\n        }\n      } catch (error) {\n        enhanced.validation!.warnings.push(`Could not validate mass balance: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n      \n      return enhanced;\n      \n    } catch (error) {\n      throw new ComputationError(\n        `Failed to balance equation by name: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        { equation: commonNameEquation, operation: 'balance_by_name' }\n      );\n    }\n  }\n\n  /**\n   * Balance equation with PubChem data enrichment\n   */\n  async balanceWithPubChemData(equation: string): Promise<EnhancedBalancedEquation> {\n    // First balance the equation normally\n    const balanced = this.balanceDetailed(equation);\n    \n    // Enhance with PubChem data\n    const enhanced: EnhancedBalancedEquation = {\n      ...balanced,\n      compoundData: {},\n      validation: {\n        massBalanced: true,\n        chargeBalanced: true,\n        warnings: [],\n        formulaValidation: {}\n      }\n    };\n\n    // Get all unique species from the equation\n    const allSpecies = [...new Set([...balanced.reactants, ...balanced.products])];\n    \n    // Validate chemical formulas using the browser validation\n    for (const species of allSpecies) {\n      try {\n        const formulaValidation = validateChemicalFormula(species);\n        enhanced.validation!.formulaValidation![species] = formulaValidation;\n        \n        if (!formulaValidation.isValid) {\n          enhanced.validation!.warnings.push(`Invalid formula ${species}: ${formulaValidation.errors.join(', ')}`);\n        }\n      } catch (error) {\n        enhanced.validation!.warnings.push(`Formula validation failed for ${species}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n    \n    // Fetch PubChem data for each compound\n    for (const species of allSpecies) {\n      try {\n        const compoundInfo = await this.getCompoundInfo(species);\n        enhanced.compoundData![species] = compoundInfo;\n        \n        if (!compoundInfo.isValid && compoundInfo.error) {\n          enhanced.validation!.warnings.push(`${species}: ${compoundInfo.error}`);\n        }\n      } catch (error) {\n        enhanced.validation!.warnings.push(`Failed to fetch data for ${species}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n    }\n\n    // Validate mass balance using PubChem molecular weights\n    try {\n      const massValidation = this.validateMassBalance(balanced, enhanced.compoundData!);\n      enhanced.validation!.massBalanced = massValidation.balanced;\n      if (!massValidation.balanced) {\n        enhanced.validation!.warnings.push(`Mass balance discrepancy: ${massValidation.discrepancy.toFixed(4)} g/mol`);\n      }\n    } catch (error) {\n      enhanced.validation!.warnings.push(`Could not validate mass balance: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n\n    return enhanced;\n  }\n\n  /**\n   * Get compound information from PubChem\n   */\n  async getCompoundInfo(compoundName: string): Promise<CompoundInfo> {\n    // Check cache first\n    const cached = await this.compoundCache.get(compoundName);\n    if (cached.hit && cached.value) {\n      return cached.value;\n    }\n\n    const result: CompoundInfo = {\n      name: compoundName,\n      isValid: false\n    };\n\n    try {\n      // Dynamic import of PubChem functionality\n      const pubchemModule = await this.loadPubChemModule();\n      if (!pubchemModule) {\n        result.error = 'PubChem module not available. Install creb-pubchem-js for enhanced functionality.';\n        await this.compoundCache.set(compoundName, result);\n        return result;\n      }\n\n      // Try to find compound by name\n      let compounds: PubChemCompound[] = [];\n      \n      // First try exact name match\n      try {\n        compounds = await pubchemModule.fromName(compoundName);\n      } catch (error) {\n        // If name search fails and it looks like a formula, try CID search\n        if (this.isLikelyFormula(compoundName)) {\n          try {\n            // For simple cases, try to find by common names\n            const commonNames = this.getCommonNames(compoundName);\n            for (const name of commonNames) {\n              try {\n                compounds = await pubchemModule.fromName(name);\n                if (compounds.length > 0) break;\n              } catch {\n                // Continue to next name\n              }\n            }\n          } catch (formulaError) {\n            result.error = `Not found by name or common formula names: ${error instanceof Error ? error.message : 'Unknown error'}`;\n          }\n        } else {\n          result.error = `Not found by name: ${error instanceof Error ? error.message : 'Unknown error'}`;\n        }\n      }\n\n      if (compounds.length > 0) {\n        const compound = compounds[0]; // Use first match\n        \n        result.cid = compound.cid;\n        result.molecularWeight = compound.molecularWeight || undefined;\n        result.molecularFormula = compound.molecularFormula || undefined;\n        result.iupacName = compound.iupacName || undefined;\n        result.canonicalSmiles = compound.isomericSmiles || undefined;\n        result.isValid = true;\n        result.pubchemData = compound;\n      } else if (!result.error) {\n        result.error = 'No compounds found';\n      }\n    } catch (error) {\n      result.error = `Search failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n    }\n\n    // Cache the result\n    await this.compoundCache.set(compoundName, result);\n    return result;\n  }\n\n  /**\n   * Dynamically load PubChem module if available\n   */\n  private async loadPubChemModule(): Promise<any> {\n    try {\n      // Try to import the PubChem module\n      // In browser environment, check for global PubChemJS\n      if (typeof globalThis !== 'undefined' && (globalThis as any).PubChemJS) {\n        return (globalThis as any).PubChemJS.Compound;\n      }\n      \n      // Also check window for browser compatibility\n      if (typeof globalThis !== 'undefined' && typeof (globalThis as any).window !== 'undefined' && (globalThis as any).window.PubChemJS) {\n        return (globalThis as any).window.PubChemJS.Compound;\n      }\n      \n      // Legacy check for CREBPubChem (for backwards compatibility)\n      if (typeof globalThis !== 'undefined' && (globalThis as any).CREBPubChem) {\n        return (globalThis as any).CREBPubChem.Compound;\n      }\n      \n      // In Node.js environment, try dynamic import with error handling\n      try {\n        // Use eval to avoid TypeScript compile-time module resolution\n        const importFn = new Function('specifier', 'return import(specifier)');\n        const pubchemModule = await importFn('creb-pubchem-js');\n        return pubchemModule.Compound;\n      } catch (importError) {\n        // Module not available\n        return null;\n      }\n    } catch (error) {\n      // PubChem module not available\n      return null;\n    }\n  }\n\n  /**\n   * Parse equation with compound names to extract reactant and product names\n   */\n  private parseEquationNames(equation: string): { reactantNames: string[], productNames: string[] } {\n    // Clean up the equation\n    const cleanEquation = equation.trim().replace(/\\s+/g, ' ');\n    \n    // Split by = or -> or →\n    const parts = cleanEquation.split(/\\s*(?:=|->|→)\\s*/);\n    if (parts.length !== 2) {\n      throw new ValidationError(\n        'Invalid equation format. Expected format: \"reactants = products\"',\n        { equation: cleanEquation, operation: 'parse_equation' }\n      );\n    }\n    \n    const [reactantsPart, productsPart] = parts;\n    \n    // Parse reactants and products (split by + and clean up)\n    const reactantNames = reactantsPart.split(/\\s*\\+\\s*/)\n      .map(name => name.trim())\n      .filter(name => name.length > 0)\n      .map(name => this.cleanCompoundName(name));\n    \n    const productNames = productsPart.split(/\\s*\\+\\s*/)\n      .map(name => name.trim())\n      .filter(name => name.length > 0)\n      .map(name => this.cleanCompoundName(name));\n    \n    if (reactantNames.length === 0 || productNames.length === 0) {\n      throw new ValidationError(\n        'Invalid equation: must have at least one reactant and one product',\n        { reactantCount: reactantNames.length, productCount: productNames.length, operation: 'parse_equation' }\n      );\n    }\n    \n    return { reactantNames, productNames };\n  }\n\n  /**\n   * Clean compound name by removing coefficients and standardizing format\n   */\n  private cleanCompoundName(name: string): string {\n    // Remove leading numbers (coefficients)\n    let cleaned = name.replace(/^\\d+\\s*/, '').trim();\n    \n    // Handle common variations\n    cleaned = cleaned.toLowerCase().trim();\n    \n    // Standardize common names\n    const standardNames: Record<string, string> = {\n      'water': 'water',\n      'h2o': 'water',\n      'sulfuric acid': 'sulfuric acid',\n      'sulphuric acid': 'sulfuric acid',\n      'sodium hydroxide': 'sodium hydroxide',\n      'caustic soda': 'sodium hydroxide',\n      'sodium sulfate': 'sodium sulfate',\n      'sodium sulphate': 'sodium sulfate',\n      'hydrochloric acid': 'hydrochloric acid',\n      'muriatic acid': 'hydrochloric acid',\n      'ammonia': 'ammonia',\n      'carbon dioxide': 'carbon dioxide',\n      'glucose': 'glucose',\n      'ethanol': 'ethanol',\n      'ethyl alcohol': 'ethanol',\n      'methane': 'methane',\n      'oxygen': 'oxygen',\n      'hydrogen': 'hydrogen',\n      'nitrogen': 'nitrogen'\n    };\n    \n    return standardNames[cleaned] || cleaned;\n  }\n\n  /**\n   * Reconstruct equation using chemical formulas instead of names\n   */\n  private reconstructEquationWithFormulas(\n    originalEquation: string, \n    nameToFormulaMap: Record<string, string>\n  ): string {\n    let formulaEquation = originalEquation;\n    \n    // Replace each compound name with its formula\n    for (const [name, formula] of Object.entries(nameToFormulaMap)) {\n      // Create regex to match the compound name (case insensitive, word boundaries)\n      const nameRegex = new RegExp(`\\\\b${name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')}\\\\b`, 'gi');\n      formulaEquation = formulaEquation.replace(nameRegex, formula);\n    }\n    \n    return formulaEquation;\n  }\n\n  /**\n   * Get common names for simple chemical formulas or alternative names for compounds\n   */\n  private getCommonNames(input: string): string[] {\n    const commonNames: Record<string, string[]> = {\n      'H2O': ['water'],\n      'water': ['H2O', 'dihydrogen monoxide'],\n      'CO2': ['carbon dioxide'],\n      'carbon dioxide': ['CO2'],\n      'NaCl': ['sodium chloride', 'salt'],\n      'sodium chloride': ['NaCl', 'salt'],\n      'salt': ['NaCl', 'sodium chloride'],\n      'H2SO4': ['sulfuric acid', 'sulphuric acid'],\n      'sulfuric acid': ['H2SO4', 'sulphuric acid'],\n      'sulphuric acid': ['H2SO4', 'sulfuric acid'],\n      'HCl': ['hydrochloric acid', 'muriatic acid'],\n      'hydrochloric acid': ['HCl', 'muriatic acid'],\n      'muriatic acid': ['HCl', 'hydrochloric acid'],\n      'NH3': ['ammonia'],\n      'ammonia': ['NH3'],\n      'CH4': ['methane'],\n      'methane': ['CH4'],\n      'C2H5OH': ['ethanol', 'ethyl alcohol'],\n      'ethanol': ['C2H5OH', 'ethyl alcohol'],\n      'ethyl alcohol': ['C2H5OH', 'ethanol'],\n      'C6H12O6': ['glucose', 'dextrose'],\n      'glucose': ['C6H12O6', 'dextrose'],\n      'dextrose': ['C6H12O6', 'glucose'],\n      'CaCO3': ['calcium carbonate'],\n      'calcium carbonate': ['CaCO3'],\n      'NaOH': ['sodium hydroxide', 'caustic soda'],\n      'sodium hydroxide': ['NaOH', 'caustic soda'],\n      'caustic soda': ['NaOH', 'sodium hydroxide'],\n      'KOH': ['potassium hydroxide'],\n      'potassium hydroxide': ['KOH'],\n      'Na2SO4': ['sodium sulfate', 'sodium sulphate'],\n      'sodium sulfate': ['Na2SO4', 'sodium sulphate'],\n      'sodium sulphate': ['Na2SO4', 'sodium sulfate'],\n      'Mg': ['magnesium'],\n      'magnesium': ['Mg'],\n      'Al': ['aluminum', 'aluminium'],\n      'aluminum': ['Al'],\n      'aluminium': ['Al'],\n      'Fe': ['iron'],\n      'iron': ['Fe'],\n      'Cu': ['copper'],\n      'copper': ['Cu'],\n      'Zn': ['zinc'],\n      'zinc': ['Zn'],\n      'O2': ['oxygen'],\n      'oxygen': ['O2'],\n      'N2': ['nitrogen'],\n      'nitrogen': ['N2'],\n      'H2': ['hydrogen'],\n      'hydrogen': ['H2']\n    };\n\n    return commonNames[input] || commonNames[input.toLowerCase()] || [];\n  }\n\n  /**\n   * Check if a string looks like a chemical formula\n   */\n  private isLikelyFormula(str: string): boolean {\n    // Simple heuristic: contains only letters, numbers, parentheses, and common symbols\n    return /^[A-Za-z0-9()[\\]+-]+$/.test(str) && /[A-Z]/.test(str);\n  }\n\n  /**\n   * Validate mass balance using PubChem molecular weights\n   */\n  private validateMassBalance(\n    balanced: BalancedEquation, \n    compoundData: Record<string, CompoundInfo>\n  ): { balanced: boolean; discrepancy: number } {\n    let reactantMass = 0;\n    let productMass = 0;\n\n    // Calculate reactant mass\n    for (let i = 0; i < balanced.reactants.length; i++) {\n      const species = balanced.reactants[i];\n      const coefficient = balanced.coefficients[i];\n      const compound = compoundData[species];\n      \n      if (compound?.molecularWeight) {\n        reactantMass += coefficient * compound.molecularWeight;\n      } else {\n        throw new ComputationError(\n          `Missing molecular weight for reactant: ${species}`,\n          { species, coefficient, operation: 'mass_balance_validation' }\n        );\n      }\n    }\n\n    // Calculate product mass\n    for (let i = 0; i < balanced.products.length; i++) {\n      const species = balanced.products[i];\n      const coefficient = balanced.coefficients[balanced.reactants.length + i];\n      const compound = compoundData[species];\n      \n      if (compound?.molecularWeight) {\n        productMass += coefficient * compound.molecularWeight;\n      } else {\n        throw new ComputationError(\n          `Missing molecular weight for product: ${species}`,\n          { species, coefficient, operation: 'mass_balance_validation' }\n        );\n      }\n    }\n\n    const discrepancy = Math.abs(reactantMass - productMass);\n    const tolerance = 0.01; // 0.01 g/mol tolerance\n    \n    return {\n      balanced: discrepancy <= tolerance,\n      discrepancy\n    };\n  }\n\n  /**\n   * Suggest alternative compound names or formulas\n   */\n  async suggestAlternatives(compoundName: string): Promise<string[]> {\n    const suggestions: string[] = [];\n    \n    try {\n      const pubchemModule = await this.loadPubChemModule();\n      if (!pubchemModule) {\n        return suggestions;\n      }\n\n      // Try various search strategies\n      const searchTerms = [\n        compoundName.toLowerCase(),\n        compoundName.toUpperCase(),\n        compoundName.replace(/\\s+/g, ''),\n        compoundName.replace(/\\s+/g, '-'),\n        compoundName.replace(/-/g, ' '),\n      ];\n\n      for (const term of searchTerms) {\n        if (term !== compoundName) {\n          try {\n            const compounds = await pubchemModule.fromName(term);\n            if (compounds.length > 0) {\n              suggestions.push(term);\n            }\n          } catch {\n            // Ignore errors for suggestions\n          }\n        }\n      }\n    } catch (error) {\n      // Return empty suggestions if search fails\n    }\n\n    return [...new Set(suggestions)]; // Remove duplicates\n  }\n\n  /**\n   * Clear the compound cache\n   */\n  async clearCache(): Promise<void> {\n    await this.compoundCache.clear();\n  }\n\n  /**\n   * Get cached compound info without making new requests\n   */\n  async getCachedCompoundInfo(compoundName: string): Promise<CompoundInfo | undefined> {\n    const result = await this.compoundCache.get(compoundName);\n    return result.hit ? result.value : undefined;\n  }\n}\n","/**\n * Advanced 2D Molecular Structure Generator\n * Generates chemically accurate 2D coordinates for molecular visualization\n */\n\nexport interface Atom3D {\n  element: string;\n  x: number;\n  y: number;\n  z: number;\n  hybridization?: 'sp' | 'sp2' | 'sp3';\n  aromatic?: boolean;\n}\n\nexport interface Bond3D {\n  atom1: number;\n  atom2: number;\n  order: 1 | 2 | 3;\n  type: 'single' | 'double' | 'triple' | 'aromatic';\n  stereo?: 'up' | 'down' | 'either';\n}\n\nexport interface Ring {\n  atoms: number[];\n  aromatic: boolean;\n  size: number;\n}\n\n/**\n * Professional 2D molecular coordinate generator\n * Following standard chemical drawing conventions\n */\nexport class Molecular2DGenerator {\n  private static readonly BOND_LENGTH = 40; // Standard bond length in pixels\n  private static readonly AROMATIC_RING_RADIUS = 25;\n  private static readonly ANGLE_120 = (2 * Math.PI) / 3; // 120° for aromatic\n  private static readonly ANGLE_109 = 1.9106; // 109.5° tetrahedral angle\n\n  /**\n   * Generate caffeine structure with proper coordinates\n   */\n  static generateCaffeine(): { atoms: Atom3D[]; bonds: Bond3D[]; rings: Ring[] } {\n    const bondLength = this.BOND_LENGTH;\n    \n    // Caffeine: C8H10N4O2 - purine ring system with methyl substituents\n    const atoms: Atom3D[] = [\n      // Purine ring system (6-membered ring fused with 5-membered ring)\n      // 6-membered ring\n      { element: 'N', x: 200, y: 150, z: 0, hybridization: 'sp2', aromatic: true }, // 0\n      { element: 'C', x: 240, y: 130, z: 0, hybridization: 'sp2', aromatic: true }, // 1\n      { element: 'N', x: 280, y: 150, z: 0, hybridization: 'sp2', aromatic: true }, // 2\n      { element: 'C', x: 280, y: 190, z: 0, hybridization: 'sp2', aromatic: true }, // 3\n      { element: 'C', x: 240, y: 210, z: 0, hybridization: 'sp2', aromatic: true }, // 4\n      { element: 'C', x: 200, y: 190, z: 0, hybridization: 'sp2', aromatic: true }, // 5\n      \n      // 5-membered ring (fused)\n      { element: 'N', x: 160, y: 170, z: 0, hybridization: 'sp2', aromatic: true }, // 6\n      { element: 'C', x: 160, y: 210, z: 0, hybridization: 'sp2', aromatic: true }, // 7\n      { element: 'N', x: 200, y: 230, z: 0, hybridization: 'sp2', aromatic: true }, // 8\n      \n      // Carbonyl oxygens\n      { element: 'O', x: 240, y: 100, z: 0, hybridization: 'sp2' }, // 9 (C=O at position 2)\n      { element: 'O', x: 320, y: 200, z: 0, hybridization: 'sp2' }, // 10 (C=O at position 6)\n      \n      // Methyl groups\n      { element: 'C', x: 120, y: 150, z: 0, hybridization: 'sp3' }, // 11 (N1-methyl)\n      { element: 'C', x: 320, y: 130, z: 0, hybridization: 'sp3' }, // 12 (N3-methyl)\n      { element: 'C', x: 240, y: 270, z: 0, hybridization: 'sp3' }, // 13 (N7-methyl)\n      \n      // Hydrogens (implicit in most chemical drawings, but included for completeness)\n      { element: 'H', x: 100, y: 140, z: 0 }, // 14\n      { element: 'H', x: 100, y: 160, z: 0 }, // 15\n      { element: 'H', x: 110, y: 170, z: 0 }, // 16\n      { element: 'H', x: 340, y: 120, z: 0 }, // 17\n      { element: 'H', x: 340, y: 140, z: 0 }, // 18\n      { element: 'H', x: 330, y: 110, z: 0 }, // 19\n      { element: 'H', x: 260, y: 280, z: 0 }, // 20\n      { element: 'H', x: 220, y: 280, z: 0 }, // 21\n      { element: 'H', x: 230, y: 290, z: 0 }, // 22\n      { element: 'H', x: 130, y: 210, z: 0 }  // 23 (H on C8)\n    ];\n\n    const bonds: Bond3D[] = [\n      // 6-membered ring bonds\n      { atom1: 0, atom2: 1, order: 1, type: 'aromatic' },\n      { atom1: 1, atom2: 2, order: 1, type: 'aromatic' },\n      { atom1: 2, atom2: 3, order: 1, type: 'aromatic' },\n      { atom1: 3, atom2: 4, order: 1, type: 'aromatic' },\n      { atom1: 4, atom2: 5, order: 1, type: 'aromatic' },\n      { atom1: 5, atom2: 0, order: 1, type: 'aromatic' },\n      \n      // 5-membered ring bonds\n      { atom1: 5, atom2: 6, order: 1, type: 'aromatic' },\n      { atom1: 6, atom2: 7, order: 1, type: 'aromatic' },\n      { atom1: 7, atom2: 8, order: 1, type: 'aromatic' },\n      { atom1: 8, atom2: 4, order: 1, type: 'aromatic' },\n      \n      // Carbonyl bonds\n      { atom1: 1, atom2: 9, order: 2, type: 'double' }, // C=O\n      { atom1: 3, atom2: 10, order: 2, type: 'double' }, // C=O\n      \n      // Methyl attachments\n      { atom1: 0, atom2: 11, order: 1, type: 'single' }, // N1-methyl\n      { atom1: 2, atom2: 12, order: 1, type: 'single' }, // N3-methyl\n      { atom1: 8, atom2: 13, order: 1, type: 'single' }, // N7-methyl\n      \n      // Hydrogen bonds\n      { atom1: 11, atom2: 14, order: 1, type: 'single' },\n      { atom1: 11, atom2: 15, order: 1, type: 'single' },\n      { atom1: 11, atom2: 16, order: 1, type: 'single' },\n      { atom1: 12, atom2: 17, order: 1, type: 'single' },\n      { atom1: 12, atom2: 18, order: 1, type: 'single' },\n      { atom1: 12, atom2: 19, order: 1, type: 'single' },\n      { atom1: 13, atom2: 20, order: 1, type: 'single' },\n      { atom1: 13, atom2: 21, order: 1, type: 'single' },\n      { atom1: 13, atom2: 22, order: 1, type: 'single' },\n      { atom1: 7, atom2: 23, order: 1, type: 'single' }\n    ];\n\n    const rings: Ring[] = [\n      { atoms: [0, 1, 2, 3, 4, 5], aromatic: true, size: 6 },\n      { atoms: [5, 6, 7, 8, 4], aromatic: true, size: 5 }\n    ];\n\n    return { atoms, bonds, rings };\n  }\n\n  /**\n   * Generate benzene with proper hexagonal geometry\n   */\n  static generateBenzene(): { atoms: Atom3D[]; bonds: Bond3D[]; rings: Ring[] } {\n    const centerX = 200;\n    const centerY = 180;\n    const radius = this.AROMATIC_RING_RADIUS;\n    \n    const atoms: Atom3D[] = [];\n    const bonds: Bond3D[] = [];\n    \n    // Generate hexagonal ring\n    for (let i = 0; i < 6; i++) {\n      const angle = (i * Math.PI) / 3; // 60° intervals\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      \n      atoms.push({\n        element: 'C',\n        x: x,\n        y: y,\n        z: 0,\n        hybridization: 'sp2',\n        aromatic: true\n      });\n      \n      // Add bond to next atom (with wraparound)\n      const nextIndex = (i + 1) % 6;\n      bonds.push({\n        atom1: i,\n        atom2: nextIndex,\n        order: 1,\n        type: 'aromatic'\n      });\n    }\n\n    // Add hydrogens\n    for (let i = 0; i < 6; i++) {\n      const angle = (i * Math.PI) / 3;\n      const hRadius = radius + 15; // Hydrogen further out\n      const x = centerX + hRadius * Math.cos(angle);\n      const y = centerY + hRadius * Math.sin(angle);\n      \n      atoms.push({\n        element: 'H',\n        x: x,\n        y: y,\n        z: 0\n      });\n      \n      bonds.push({\n        atom1: i,\n        atom2: 6 + i, // Hydrogen index\n        order: 1,\n        type: 'single'\n      });\n    }\n\n    const rings: Ring[] = [\n      { atoms: [0, 1, 2, 3, 4, 5], aromatic: true, size: 6 }\n    ];\n\n    return { atoms, bonds, rings };\n  }\n\n  /**\n   * Generate water with proper bent geometry\n   */\n  static generateWater(): { atoms: Atom3D[]; bonds: Bond3D[] } {\n    const bondLength = this.BOND_LENGTH;\n    const angle = 1.8326; // 104.5° H-O-H angle\n    \n    const atoms: Atom3D[] = [\n      { element: 'O', x: 200, y: 180, z: 0, hybridization: 'sp3' },\n      { \n        element: 'H', \n        x: 200 - bondLength * Math.cos(angle / 2), \n        y: 180 + bondLength * Math.sin(angle / 2), \n        z: 0 \n      },\n      { \n        element: 'H', \n        x: 200 + bondLength * Math.cos(angle / 2), \n        y: 180 + bondLength * Math.sin(angle / 2), \n        z: 0 \n      }\n    ];\n\n    const bonds: Bond3D[] = [\n      { atom1: 0, atom2: 1, order: 1, type: 'single' },\n      { atom1: 0, atom2: 2, order: 1, type: 'single' }\n    ];\n\n    return { atoms, bonds };\n  }\n\n  /**\n   * Generate methane with tetrahedral geometry\n   */\n  static generateMethane(): { atoms: Atom3D[]; bonds: Bond3D[] } {\n    const bondLength = this.BOND_LENGTH;\n    const centerX = 200;\n    const centerY = 180;\n    \n    // Tetrahedral angles for 2D projection\n    const atoms: Atom3D[] = [\n      { element: 'C', x: centerX, y: centerY, z: 0, hybridization: 'sp3' },\n      { element: 'H', x: centerX - bondLength * 0.6, y: centerY - bondLength * 0.6, z: 0 },\n      { element: 'H', x: centerX + bondLength * 0.6, y: centerY - bondLength * 0.6, z: 0 },\n      { element: 'H', x: centerX - bondLength * 0.6, y: centerY + bondLength * 0.6, z: 0 },\n      { element: 'H', x: centerX + bondLength * 0.6, y: centerY + bondLength * 0.6, z: 0 }\n    ];\n\n    const bonds: Bond3D[] = [\n      { atom1: 0, atom2: 1, order: 1, type: 'single' },\n      { atom1: 0, atom2: 2, order: 1, type: 'single' },\n      { atom1: 0, atom2: 3, order: 1, type: 'single' },\n      { atom1: 0, atom2: 4, order: 1, type: 'single' }\n    ];\n\n    return { atoms, bonds };\n  }\n\n  /**\n   * Generate ethylene with proper double bond geometry\n   */\n  static generateEthylene(): { atoms: Atom3D[]; bonds: Bond3D[] } {\n    const bondLength = this.BOND_LENGTH;\n    const centerX = 200;\n    const centerY = 180;\n    \n    const atoms: Atom3D[] = [\n      // C=C double bond\n      { element: 'C', x: centerX - bondLength/2, y: centerY, z: 0, hybridization: 'sp2' },\n      { element: 'C', x: centerX + bondLength/2, y: centerY, z: 0, hybridization: 'sp2' },\n      \n      // Hydrogens in planar arrangement\n      { element: 'H', x: centerX - bondLength/2 - bondLength * 0.7, y: centerY - bondLength * 0.5, z: 0 },\n      { element: 'H', x: centerX - bondLength/2 - bondLength * 0.7, y: centerY + bondLength * 0.5, z: 0 },\n      { element: 'H', x: centerX + bondLength/2 + bondLength * 0.7, y: centerY - bondLength * 0.5, z: 0 },\n      { element: 'H', x: centerX + bondLength/2 + bondLength * 0.7, y: centerY + bondLength * 0.5, z: 0 }\n    ];\n\n    const bonds: Bond3D[] = [\n      { atom1: 0, atom2: 1, order: 2, type: 'double' },\n      { atom1: 0, atom2: 2, order: 1, type: 'single' },\n      { atom1: 0, atom2: 3, order: 1, type: 'single' },\n      { atom1: 1, atom2: 4, order: 1, type: 'single' },\n      { atom1: 1, atom2: 5, order: 1, type: 'single' }\n    ];\n\n    return { atoms, bonds };\n  }\n\n  /**\n   * Convert molecular structure to Canvas2D format\n   */\n  static toCanvas2DFormat(structure: { atoms: Atom3D[]; bonds: Bond3D[] }): {\n    atoms: Array<{ element: string; position: { x: number; y: number }; bonds: number[] }>;\n    bonds: Array<{ atom1: number; atom2: number; order: number; type: string }>;\n  } {\n    return {\n      atoms: structure.atoms.map((atom, index) => ({\n        element: atom.element,\n        position: { x: atom.x, y: atom.y },\n        bonds: structure.bonds\n          .map((bond, bondIndex) => bond.atom1 === index || bond.atom2 === index ? bondIndex : -1)\n          .filter(bondIndex => bondIndex !== -1)\n      })),\n      bonds: structure.bonds\n    };\n  }\n\n  /**\n   * Enhanced SMILES to 2D converter with proper geometry\n   */\n  static advancedSMILESTo2D(smiles: string): {\n    atoms: Array<{ element: string; position: { x: number; y: number }; bonds: number[] }>;\n    bonds: Array<{ atom1: number; atom2: number; order: number; type: string }>;\n  } {\n    // Handle specific known molecules\n    switch (smiles.toLowerCase()) {\n      case 'o':\n      case 'h2o':\n        return this.toCanvas2DFormat(this.generateWater());\n      \n      case 'c':\n      case 'ch4':\n        return this.toCanvas2DFormat(this.generateMethane());\n      \n      case 'c=c':\n      case 'c2h4':\n        return this.toCanvas2DFormat(this.generateEthylene());\n      \n      case 'c1=cc=cc=c1':\n      case 'c6h6':\n      case 'benzene':\n        return this.toCanvas2DFormat(this.generateBenzene());\n      \n      case 'caffeine':\n      case 'cn1c=nc2c1c(=o)n(c(=o)n2c)c':\n        return this.toCanvas2DFormat(this.generateCaffeine());\n      \n      default:\n        // Fallback to simple structure\n        return this.toCanvas2DFormat(this.generateMethane());\n    }\n  }\n}\n\nexport default Molecular2DGenerator;\n","/**\n * 2D Molecular Structure Renderer\n * Canvas-based 2D molecular structure drawing with proper chemical geometry\n */\n\nimport { Molecular2DGenerator } from './Molecular2DGenerator';\n\nexport interface Canvas2DConfig {\n  width: number;\n  height: number;\n  backgroundColor: string;\n  bondColor: string;\n  atomColors: Record<string, string>;\n  bondWidth: number;\n  atomRadius: number;\n  fontSize: number;\n}\n\nexport interface Point2D {\n  x: number;\n  y: number;\n}\n\nexport interface Atom2D {\n  element: string;\n  position: Point2D;\n  bonds: number[];\n  charge?: number;\n}\n\nexport interface Bond2D {\n  atom1: number;\n  atom2: number;\n  order: number;\n  type: 'single' | 'double' | 'triple' | 'aromatic';\n}\n\nexport interface Molecule2D {\n  atoms: Atom2D[];\n  bonds: Bond2D[];\n  name?: string;\n}\n\nexport class Canvas2DRenderer {\n  private canvas: any; // HTMLCanvasElement - using any for Node.js compatibility\n  private ctx: any; // CanvasRenderingContext2D - using any for Node.js compatibility\n  private config: Canvas2DConfig;\n  private molecule: Molecule2D | null = null;\n  private scale = 1;\n  private offset = { x: 0, y: 0 };\n\n  constructor(canvas: any, config: Partial<Canvas2DConfig> = {}) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    \n    this.config = {\n      width: 600,\n      height: 400,\n      backgroundColor: '#ffffff',\n      bondColor: '#333333',\n      atomColors: {\n        'C': '#000000',\n        'H': '#ffffff',\n        'O': '#ff0000',\n        'N': '#0000ff',\n        'S': '#ffff00',\n        'P': '#ffa500',\n        'Cl': '#00ff00',\n        'Br': '#a52a2a',\n        'I': '#9400d3'\n      },\n      bondWidth: 2,\n      atomRadius: 15,\n      fontSize: 12,\n      ...config\n    };\n\n    this.setupCanvas();\n    this.bindEvents();\n  }\n\n  private setupCanvas(): void {\n    this.canvas.width = this.config.width;\n    this.canvas.height = this.config.height;\n    \n    // Only set styles if we're in browser environment\n    try {\n      if (this.canvas.style) {\n        this.canvas.style.border = '1px solid #ccc';\n        this.canvas.style.borderRadius = '4px';\n      }\n    } catch {\n      // Ignore style errors in non-browser environments\n    }\n  }\n\n  private bindEvents(): void {\n    // Only bind events if we're in browser environment\n    try {\n      if (!this.canvas.addEventListener) {\n        return;\n      }\n    } catch {\n      return;\n    }\n\n    let isMouseDown = false;\n    let lastMousePos = { x: 0, y: 0 };\n\n    this.canvas.addEventListener('mousedown', (e: any) => {\n      isMouseDown = true;\n      lastMousePos = { x: e.clientX, y: e.clientY };\n    });\n\n    this.canvas.addEventListener('mousemove', (e: any) => {\n      if (isMouseDown) {\n        const deltaX = e.clientX - lastMousePos.x;\n        const deltaY = e.clientY - lastMousePos.y;\n        \n        this.offset.x += deltaX;\n        this.offset.y += deltaY;\n        \n        lastMousePos = { x: e.clientX, y: e.clientY };\n        this.render();\n      }\n    });\n\n    this.canvas.addEventListener('mouseup', () => {\n      isMouseDown = false;\n    });\n\n    this.canvas.addEventListener('wheel', (e: any) => {\n      e.preventDefault();\n      const scaleFactor = e.deltaY > 0 ? 0.9 : 1.1;\n      this.scale *= scaleFactor;\n      this.render();\n    });\n  }\n\n  /**\n   * Load and render a molecule\n   */\n  loadMolecule(molecule: Molecule2D): void {\n    this.molecule = molecule;\n    this.centerMolecule();\n    this.render();\n  }\n\n  /**\n   * Center the molecule in the canvas\n   */\n  private centerMolecule(): void {\n    if (!this.molecule || this.molecule.atoms.length === 0) return;\n\n    // Calculate bounding box\n    let minX = Infinity, maxX = -Infinity;\n    let minY = Infinity, maxY = -Infinity;\n\n    this.molecule.atoms.forEach(atom => {\n      minX = Math.min(minX, atom.position.x);\n      maxX = Math.max(maxX, atom.position.x);\n      minY = Math.min(minY, atom.position.y);\n      maxY = Math.max(maxY, atom.position.y);\n    });\n\n    // Calculate center offset\n    const molWidth = maxX - minX;\n    const molHeight = maxY - minY;\n    const molCenterX = (minX + maxX) / 2;\n    const molCenterY = (minY + maxY) / 2;\n\n    // Calculate scale to fit molecule\n    const scaleX = (this.config.width * 0.8) / molWidth;\n    const scaleY = (this.config.height * 0.8) / molHeight;\n    this.scale = Math.min(scaleX, scaleY, 1);\n\n    // Center the molecule\n    this.offset.x = this.config.width / 2 - molCenterX * this.scale;\n    this.offset.y = this.config.height / 2 - molCenterY * this.scale;\n  }\n\n  /**\n   * Render the current molecule\n   */\n  render(): void {\n    this.clear();\n    \n    if (!this.molecule) {\n      this.renderPlaceholder();\n      return;\n    }\n\n    this.renderBonds();\n    this.renderAtoms();\n    this.renderLabels();\n  }\n\n  /**\n   * Clear the canvas\n   */\n  private clear(): void {\n    this.ctx.fillStyle = this.config.backgroundColor;\n    this.ctx.fillRect(0, 0, this.config.width, this.config.height);\n  }\n\n  /**\n   * Render placeholder when no molecule is loaded\n   */\n  private renderPlaceholder(): void {\n    this.ctx.fillStyle = '#f0f0f0';\n    this.ctx.fillRect(0, 0, this.config.width, this.config.height);\n\n    this.ctx.fillStyle = '#999999';\n    this.ctx.font = '24px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(\n      '2D Molecular Structure',\n      this.config.width / 2,\n      this.config.height / 2 - 20\n    );\n\n    this.ctx.font = '14px Arial';\n    this.ctx.fillText(\n      'Load a molecule to visualize',\n      this.config.width / 2,\n      this.config.height / 2 + 20\n    );\n  }\n\n  /**\n   * Render molecular bonds\n   */\n  private renderBonds(): void {\n    if (!this.molecule) return;\n\n    this.ctx.strokeStyle = this.config.bondColor;\n    this.ctx.lineWidth = this.config.bondWidth;\n    this.ctx.lineCap = 'round';\n\n    this.molecule.bonds.forEach(bond => {\n      const atom1 = this.molecule!.atoms[bond.atom1];\n      const atom2 = this.molecule!.atoms[bond.atom2];\n\n      const pos1 = this.transformPoint(atom1.position);\n      const pos2 = this.transformPoint(atom2.position);\n\n      this.drawBond(pos1, pos2, bond);\n    });\n  }\n\n  /**\n   * Draw a single bond\n   */\n  private drawBond(pos1: Point2D, pos2: Point2D, bond: Bond2D): void {\n    const dx = pos2.x - pos1.x;\n    const dy = pos2.y - pos1.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const unitX = dx / length;\n    const unitY = dy / length;\n\n    // Offset for multiple bonds\n    const perpX = -unitY * 3;\n    const perpY = unitX * 3;\n\n    switch (bond.order) {\n      case 1:\n        this.drawSingleBond(pos1, pos2);\n        break;\n      case 2:\n        this.drawSingleBond(\n          { x: pos1.x + perpX, y: pos1.y + perpY },\n          { x: pos2.x + perpX, y: pos2.y + perpY }\n        );\n        this.drawSingleBond(\n          { x: pos1.x - perpX, y: pos1.y - perpY },\n          { x: pos2.x - perpX, y: pos2.y - perpY }\n        );\n        break;\n      case 3:\n        this.drawSingleBond(pos1, pos2);\n        this.drawSingleBond(\n          { x: pos1.x + perpX, y: pos1.y + perpY },\n          { x: pos2.x + perpX, y: pos2.y + perpY }\n        );\n        this.drawSingleBond(\n          { x: pos1.x - perpX, y: pos1.y - perpY },\n          { x: pos2.x - perpX, y: pos2.y - perpY }\n        );\n        break;\n    }\n\n    if (bond.type === 'aromatic') {\n      // For aromatic bonds, draw a dashed inner line to indicate aromaticity\n      this.drawAromaticIndicator(pos1, pos2);\n    }\n  }\n\n  /**\n   * Draw a single bond line\n   */\n  private drawSingleBond(pos1: Point2D, pos2: Point2D): void {\n    this.ctx.beginPath();\n    this.ctx.moveTo(pos1.x, pos1.y);\n    this.ctx.lineTo(pos2.x, pos2.y);\n    this.ctx.stroke();\n  }\n\n  /**\n   * Draw aromatic bond indicator (dashed inner line)\n   */\n  private drawAromaticIndicator(pos1: Point2D, pos2: Point2D): void {\n    // Draw a shorter dashed line slightly inside the ring\n    const dx = pos2.x - pos1.x;\n    const dy = pos2.y - pos1.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    \n    // Create inner line (80% of original length, centered)\n    const innerStart = {\n      x: pos1.x + dx * 0.1,\n      y: pos1.y + dy * 0.1\n    };\n    const innerEnd = {\n      x: pos1.x + dx * 0.9,\n      y: pos1.y + dy * 0.9\n    };\n    \n    this.ctx.setLineDash([3, 3]);\n    this.ctx.strokeStyle = this.config.bondColor;\n    this.ctx.lineWidth = this.config.bondWidth * 0.7;\n    this.drawSingleBond(innerStart, innerEnd);\n    this.ctx.setLineDash([]);\n    this.ctx.lineWidth = this.config.bondWidth;\n  }\n\n  /**\n   * Draw aromatic bond (dashed) - legacy method\n   */\n  private drawAromaticBond(pos1: Point2D, pos2: Point2D): void {\n    this.ctx.setLineDash([5, 5]);\n    this.drawSingleBond(pos1, pos2);\n    this.ctx.setLineDash([]);\n  }\n\n  /**\n   * Render atoms\n   */\n  private renderAtoms(): void {\n    if (!this.molecule) return;\n\n    this.molecule.atoms.forEach((atom, index) => {\n      const pos = this.transformPoint(atom.position);\n      this.drawAtom(atom, pos, index);\n    });\n  }\n\n  /**\n   * Draw a single atom\n   */\n  private drawAtom(atom: Atom2D, pos: Point2D, index: number): void {\n    const color = this.config.atomColors[atom.element] || '#999999';\n    const radius = this.config.atomRadius * this.scale;\n\n    // Draw atom circle\n    this.ctx.fillStyle = color;\n    this.ctx.beginPath();\n    this.ctx.arc(pos.x, pos.y, radius, 0, 2 * Math.PI);\n    this.ctx.fill();\n\n    // Draw border\n    this.ctx.strokeStyle = '#333333';\n    this.ctx.lineWidth = 1;\n    this.ctx.stroke();\n\n    // Draw element symbol\n    this.ctx.fillStyle = atom.element === 'H' ? '#000000' : '#ffffff';\n    this.ctx.font = `${this.config.fontSize * this.scale}px Arial`;\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillText(atom.element, pos.x, pos.y);\n  }\n\n  /**\n   * Render atom labels and charges\n   */\n  private renderLabels(): void {\n    if (!this.molecule) return;\n\n    this.ctx.fillStyle = '#333333';\n    this.ctx.font = `${10 * this.scale}px Arial`;\n\n    this.molecule.atoms.forEach((atom, index) => {\n      if (atom.charge && atom.charge !== 0) {\n        const pos = this.transformPoint(atom.position);\n        const chargeText = atom.charge > 0 ? `+${atom.charge}` : `${atom.charge}`;\n        \n        this.ctx.textAlign = 'left';\n        this.ctx.textBaseline = 'top';\n        this.ctx.fillText(\n          chargeText,\n          pos.x + this.config.atomRadius * this.scale,\n          pos.y - this.config.atomRadius * this.scale\n        );\n      }\n    });\n  }\n\n  /**\n   * Transform point from molecule coordinates to canvas coordinates\n   */\n  private transformPoint(point: Point2D): Point2D {\n    return {\n      x: point.x * this.scale + this.offset.x,\n      y: point.y * this.scale + this.offset.y\n    };\n  }\n\n  /**\n   * Convert SMILES to 2D coordinates with proper chemical geometry\n   */\n  static smilesToMolecule2D(smiles: string): Molecule2D {\n    // Use the advanced molecular geometry generator for proper chemical structures\n    const advanced = Molecular2DGenerator.advancedSMILESTo2D(smiles);\n    \n    return {\n      atoms: advanced.atoms,\n      bonds: advanced.bonds.map(bond => ({\n        atom1: bond.atom1,\n        atom2: bond.atom2,\n        order: bond.order,\n        type: bond.type as 'single' | 'double' | 'triple' | 'aromatic'\n      })),\n      name: `SMILES: ${smiles}`\n    };\n  }\n\n  /**\n   * Export canvas as image\n   */\n  exportImage(format: 'png' | 'jpg' | 'svg' = 'png'): string {\n    if (format === 'svg') {\n      return this.exportSVG();\n    }\n    return this.canvas.toDataURL(`image/${format}`);\n  }\n\n  /**\n   * Export current molecule as SVG\n   */\n  exportSVG(options: {\n    interactive?: boolean;\n    animations?: boolean;\n    includeMetadata?: boolean;\n    optimizeSize?: boolean;\n  } = {}): string {\n    if (!this.molecule) {\n      return this.generateEmptySVG();\n    }\n\n    const svgElements: string[] = [];\n    const { width, height } = this.config;\n    \n    // SVG header\n    svgElements.push(`<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">`);\n    \n    if (options.includeMetadata) {\n      svgElements.push(`<title>Molecular Structure - ${this.molecule.atoms.length} atoms</title>`);\n      svgElements.push(`<desc>Generated by CREB-JS Canvas2DRenderer</desc>`);\n    }\n    \n    // Styles\n    svgElements.push('<defs><style type=\"text/css\">');\n    svgElements.push('.atom-circle { stroke: #000; stroke-width: 1; }');\n    svgElements.push('.atom-label { font-family: Arial, sans-serif; font-size: 14px; text-anchor: middle; dominant-baseline: central; }');\n    svgElements.push(`.bond-line { stroke: ${this.config.bondColor}; stroke-width: ${this.config.bondWidth}; stroke-linecap: round; }`);\n    \n    if (options.interactive) {\n      svgElements.push('.atom-group:hover .atom-circle { stroke-width: 2; stroke: #ff6b35; }');\n      svgElements.push('.atom-group { cursor: pointer; }');\n    }\n    \n    svgElements.push('</style></defs>');\n    \n    // Background\n    svgElements.push(`<rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>`);\n    \n    // Bonds\n    svgElements.push('<g id=\"bonds\">');\n    this.molecule.bonds.forEach(bond => {\n      const atom1 = this.molecule!.atoms[bond.atom1];\n      const atom2 = this.molecule!.atoms[bond.atom2];\n      const pos1 = this.transformPoint(atom1.position);\n      const pos2 = this.transformPoint(atom2.position);\n      \n      svgElements.push(`<line x1=\"${pos1.x}\" y1=\"${pos1.y}\" x2=\"${pos2.x}\" y2=\"${pos2.y}\" class=\"bond-line\"/>`);\n    });\n    svgElements.push('</g>');\n    \n    // Atoms\n    svgElements.push('<g id=\"atoms\">');\n    this.molecule.atoms.forEach((atom, index) => {\n      const pos = this.transformPoint(atom.position);\n      const color = this.config.atomColors[atom.element] || '#999999';\n      const radius = this.config.atomRadius * this.scale;\n      \n      svgElements.push('<g class=\"atom-group\">');\n      svgElements.push(`<circle cx=\"${pos.x}\" cy=\"${pos.y}\" r=\"${radius}\" fill=\"${color}\" class=\"atom-circle\"/>`);\n      \n      const textColor = this.getContrastingColor(color);\n      svgElements.push(`<text x=\"${pos.x}\" y=\"${pos.y}\" fill=\"${textColor}\" class=\"atom-label\">${atom.element}</text>`);\n      svgElements.push('</g>');\n    });\n    svgElements.push('</g>');\n    \n    // Metadata\n    if (options.includeMetadata) {\n      svgElements.push('<metadata>');\n      svgElements.push(`<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">`);\n      svgElements.push(`<rdf:Description rdf:about=\"\">`);\n      svgElements.push(`<atomCount>${this.molecule.atoms.length}</atomCount>`);\n      svgElements.push(`<bondCount>${this.molecule.bonds.length}</bondCount>`);\n      svgElements.push(`<generator>CREB-JS Canvas2DRenderer</generator>`);\n      svgElements.push(`<timestamp>${new Date().toISOString()}</timestamp>`);\n      svgElements.push(`</rdf:Description>`);\n      svgElements.push(`</rdf:RDF>`);\n      svgElements.push('</metadata>');\n    }\n    \n    svgElements.push('</svg>');\n    \n    return svgElements.join('\\n');\n  }\n\n  /**\n   * Generate empty SVG placeholder\n   */\n  private generateEmptySVG(): string {\n    const { width, height } = this.config;\n    return `<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>\n      <text x=\"${width/2}\" y=\"${height/2 - 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"24\" fill=\"#999\">2D Molecular Structure</text>\n      <text x=\"${width/2}\" y=\"${height/2 + 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"14\" fill=\"#999\">Load a molecule to visualize</text>\n    </svg>`;\n  }\n\n  /**\n   * Get contrasting color for text readability\n   */\n  private getContrastingColor(backgroundColor: string): string {\n    const hex = backgroundColor.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    return brightness > 128 ? '#000000' : '#ffffff';\n  }\n\n  /**\n   * Download SVG as file\n   */\n  downloadSVG(filename: string = 'molecule.svg', options = {}): void {\n    const svgContent = this.exportSVG(options);\n    \n    if (typeof document !== 'undefined') {\n      const blob = new Blob([svgContent], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      link.click();\n      URL.revokeObjectURL(url);\n    }\n  }\n\n  /**\n   * Reset view to default\n   */\n  resetView(): void {\n    this.scale = 1;\n    this.offset = { x: 0, y: 0 };\n    this.centerMolecule();\n    this.render();\n  }\n\n  /**\n   * Set molecule scale\n   */\n  setScale(scale: number): void {\n    this.scale = Math.max(0.1, Math.min(5, scale));\n    this.render();\n  }\n\n  /**\n   * Get current molecule data\n   */\n  getMolecule(): Molecule2D | null {\n    return this.molecule;\n  }\n}\n\nexport default Canvas2DRenderer;\n","/**\n * SVG Molecular Structure Renderer\n * Vector-based 2D molecular structure export\n */\n\nimport { Point2D, Atom2D, Bond2D, Molecule2D } from './Canvas2DRenderer';\n\nexport interface SVGConfig {\n  width: number;\n  height: number;\n  backgroundColor: string;\n  atomColors: Record<string, string>;\n  bondColor: string;\n  bondWidth: number;\n  fontSize: number;\n  atomRadius: number;\n  includeStyles: boolean;\n  includeInteractivity: boolean;\n}\n\nexport interface SVGExportOptions {\n  format: 'svg' | 'svg-inline' | 'svg-download';\n  filename?: string;\n  includeMetadata?: boolean;\n  optimizeSize?: boolean;\n  interactive?: boolean;\n  animations?: boolean;\n}\n\n/**\n * SVG-based molecular structure renderer\n */\nexport class SVGRenderer {\n  private config: SVGConfig;\n  private molecule: Molecule2D | null = null;\n  private scale = 1;\n  private offset = { x: 0, y: 0 };\n\n  constructor(config: Partial<SVGConfig> = {}) {\n    this.config = {\n      width: 600,\n      height: 400,\n      backgroundColor: '#ffffff',\n      atomColors: {\n        'H': '#ffffff',\n        'C': '#303030',\n        'N': '#3050f8',\n        'O': '#ff0d0d',\n        'F': '#90e050',\n        'P': '#ff8000',\n        'S': '#ffff30',\n        'Cl': '#1ff01f',\n        'Br': '#a62929',\n        'I': '#940094'\n      },\n      bondColor: '#000000',\n      bondWidth: 2,\n      fontSize: 14,\n      atomRadius: 20,\n      includeStyles: true,\n      includeInteractivity: false,\n      ...config\n    };\n  }\n\n  /**\n   * Load a molecule for rendering\n   */\n  loadMolecule(molecule: Molecule2D): void {\n    this.molecule = molecule;\n    this.centerMolecule();\n  }\n\n  /**\n   * Center the molecule in the SVG viewport\n   */\n  private centerMolecule(): void {\n    if (!this.molecule || this.molecule.atoms.length === 0) return;\n\n    // Calculate bounding box\n    let minX = Infinity, maxX = -Infinity;\n    let minY = Infinity, maxY = -Infinity;\n\n    this.molecule.atoms.forEach(atom => {\n      minX = Math.min(minX, atom.position.x);\n      maxX = Math.max(maxX, atom.position.x);\n      minY = Math.min(minY, atom.position.y);\n      maxY = Math.max(maxY, atom.position.y);\n    });\n\n    // Calculate center offset\n    const molWidth = maxX - minX;\n    const molHeight = maxY - minY;\n    const molCenterX = (minX + maxX) / 2;\n    const molCenterY = (minY + maxY) / 2;\n\n    // Calculate scale to fit molecule\n    const scaleX = (this.config.width * 0.8) / molWidth;\n    const scaleY = (this.config.height * 0.8) / molHeight;\n    this.scale = Math.min(scaleX, scaleY, 1);\n\n    // Center the molecule\n    this.offset.x = this.config.width / 2 - molCenterX * this.scale;\n    this.offset.y = this.config.height / 2 - molCenterY * this.scale;\n  }\n\n  /**\n   * Transform point from molecule coordinates to SVG coordinates\n   */\n  private transformPoint(point: Point2D): Point2D {\n    return {\n      x: point.x * this.scale + this.offset.x,\n      y: point.y * this.scale + this.offset.y\n    };\n  }\n\n  /**\n   * Generate SVG string for the current molecule\n   */\n  exportSVG(options: Partial<SVGExportOptions> = {}): string {\n    const opts: SVGExportOptions = {\n      format: 'svg',\n      includeMetadata: true,\n      optimizeSize: false,\n      interactive: this.config.includeInteractivity,\n      animations: false,\n      ...options\n    };\n\n    if (!this.molecule) {\n      return this.generateEmptySVG(opts);\n    }\n\n    const svgElements: string[] = [];\n    \n    // SVG header\n    svgElements.push(this.generateSVGHeader(opts));\n    \n    // Styles\n    if (this.config.includeStyles) {\n      svgElements.push(this.generateStyles(opts));\n    }\n    \n    // Background\n    svgElements.push(this.generateBackground());\n    \n    // Molecular structure\n    svgElements.push(this.generateBonds(opts));\n    svgElements.push(this.generateAtoms(opts));\n    \n    // Metadata\n    if (opts.includeMetadata) {\n      svgElements.push(this.generateMetadata());\n    }\n    \n    // SVG footer\n    svgElements.push('</svg>');\n    \n    return svgElements.join('\\n');\n  }\n\n  /**\n   * Generate SVG header with viewBox and namespaces\n   */\n  private generateSVGHeader(options: SVGExportOptions): string {\n    const { width, height } = this.config;\n    \n    let header = `<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\"`;\n    header += ` xmlns=\"http://www.w3.org/2000/svg\"`;\n    \n    if (options.interactive) {\n      header += ` xmlns:xlink=\"http://www.w3.org/1999/xlink\"`;\n    }\n    \n    header += `>`;\n    \n    if (options.includeMetadata) {\n      header += `\\n<title>Molecular Structure - ${this.molecule?.atoms.length || 0} atoms</title>`;\n      header += `\\n<desc>Generated by CREB-JS Molecular Visualization System</desc>`;\n    }\n    \n    return header;\n  }\n\n  /**\n   * Generate CSS styles for the SVG\n   */\n  private generateStyles(options: SVGExportOptions): string {\n    let styles = '<defs><style type=\"text/css\">\\n';\n    \n    // Base styles\n    styles += `  .atom-circle { stroke: #000; stroke-width: 1; }\\n`;\n    styles += `  .atom-label { font-family: Arial, sans-serif; font-size: ${this.config.fontSize}px; text-anchor: middle; dominant-baseline: central; }\\n`;\n    styles += `  .bond-line { stroke: ${this.config.bondColor}; stroke-width: ${this.config.bondWidth}; stroke-linecap: round; }\\n`;\n    styles += `  .bond-double { stroke-dasharray: none; }\\n`;\n    styles += `  .bond-triple { stroke-width: ${this.config.bondWidth + 1}; }\\n`;\n    \n    // Interactive styles\n    if (options.interactive) {\n      styles += `  .atom-group:hover .atom-circle { stroke-width: 2; stroke: #ff6b35; }\\n`;\n      styles += `  .atom-group:hover .atom-label { font-weight: bold; }\\n`;\n      styles += `  .bond-line:hover { stroke: #ff6b35; stroke-width: ${this.config.bondWidth + 1}; }\\n`;\n      styles += `  .atom-group { cursor: pointer; }\\n`;\n    }\n    \n    // Animation styles\n    if (options.animations) {\n      styles += `  @keyframes atomPulse { 0%, 100% { r: ${this.config.atomRadius}; } 50% { r: ${this.config.atomRadius + 3}; } }\\n`;\n      styles += `  .atom-circle:hover { animation: atomPulse 1s infinite; }\\n`;\n    }\n    \n    styles += '</style></defs>\\n';\n    return styles;\n  }\n\n  /**\n   * Generate background rectangle\n   */\n  private generateBackground(): string {\n    return `<rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>`;\n  }\n\n  /**\n   * Generate SVG elements for bonds\n   */\n  private generateBonds(options: SVGExportOptions): string {\n    if (!this.molecule) return '';\n    \n    const bonds: string[] = [];\n    bonds.push('<g id=\"bonds\">');\n    \n    this.molecule.bonds.forEach((bond, index) => {\n      const atom1 = this.molecule!.atoms[bond.atom1];\n      const atom2 = this.molecule!.atoms[bond.atom2];\n      \n      const pos1 = this.transformPoint(atom1.position);\n      const pos2 = this.transformPoint(atom2.position);\n      \n      bonds.push(this.generateBondSVG(pos1, pos2, bond, index, options));\n    });\n    \n    bonds.push('</g>');\n    return bonds.join('\\n');\n  }\n\n  /**\n   * Generate SVG for a single bond\n   */\n  private generateBondSVG(pos1: Point2D, pos2: Point2D, bond: Bond2D, index: number, options: SVGExportOptions): string {\n    const bondClass = `bond-${bond.type || 'single'}`;\n    let bondElement = '';\n    \n    if (bond.order === 1 || !bond.order) {\n      // Single bond\n      bondElement = `<line x1=\"${pos1.x.toFixed(2)}\" y1=\"${pos1.y.toFixed(2)}\" x2=\"${pos2.x.toFixed(2)}\" y2=\"${pos2.y.toFixed(2)}\" class=\"bond-line ${bondClass}\"`;\n    } else if (bond.order === 2) {\n      // Double bond - two parallel lines\n      const dx = pos2.x - pos1.x;\n      const dy = pos2.y - pos1.y;\n      const length = Math.sqrt(dx * dx + dy * dy);\n      const offsetX = (-dy / length) * 3;\n      const offsetY = (dx / length) * 3;\n      \n      bondElement = `<g class=\"bond-double\">\n        <line x1=\"${(pos1.x + offsetX).toFixed(2)}\" y1=\"${(pos1.y + offsetY).toFixed(2)}\" x2=\"${(pos2.x + offsetX).toFixed(2)}\" y2=\"${(pos2.y + offsetY).toFixed(2)}\" class=\"bond-line\"/>\n        <line x1=\"${(pos1.x - offsetX).toFixed(2)}\" y1=\"${(pos1.y - offsetY).toFixed(2)}\" x2=\"${(pos2.x - offsetX).toFixed(2)}\" y2=\"${(pos2.y - offsetY).toFixed(2)}\" class=\"bond-line\"/>\n      </g>`;\n    } else if (bond.order === 3) {\n      // Triple bond - three parallel lines\n      const dx = pos2.x - pos1.x;\n      const dy = pos2.y - pos1.y;\n      const length = Math.sqrt(dx * dx + dy * dy);\n      const offsetX = (-dy / length) * 3;\n      const offsetY = (dx / length) * 3;\n      \n      bondElement = `<g class=\"bond-triple\">\n        <line x1=\"${pos1.x.toFixed(2)}\" y1=\"${pos1.y.toFixed(2)}\" x2=\"${pos2.x.toFixed(2)}\" y2=\"${pos2.y.toFixed(2)}\" class=\"bond-line\"/>\n        <line x1=\"${(pos1.x + offsetX).toFixed(2)}\" y1=\"${(pos1.y + offsetY).toFixed(2)}\" x2=\"${(pos2.x + offsetX).toFixed(2)}\" y2=\"${(pos2.y + offsetY).toFixed(2)}\" class=\"bond-line\"/>\n        <line x1=\"${(pos1.x - offsetX).toFixed(2)}\" y1=\"${(pos1.y - offsetY).toFixed(2)}\" x2=\"${(pos2.x - offsetX).toFixed(2)}\" y2=\"${(pos2.y - offsetY).toFixed(2)}\" class=\"bond-line\"/>\n      </g>`;\n    }\n    \n    if (options.interactive) {\n      bondElement += ` data-bond-id=\"${index}\" data-atoms=\"${bond.atom1},${bond.atom2}\"`;\n    }\n    \n    if (bondElement.includes('<g')) {\n      return bondElement;\n    } else {\n      return bondElement + '/>';\n    }\n  }\n\n  /**\n   * Generate SVG elements for atoms\n   */\n  private generateAtoms(options: SVGExportOptions): string {\n    if (!this.molecule) return '';\n    \n    const atoms: string[] = [];\n    atoms.push('<g id=\"atoms\">');\n    \n    this.molecule.atoms.forEach((atom, index) => {\n      atoms.push(this.generateAtomSVG(atom, index, options));\n    });\n    \n    atoms.push('</g>');\n    return atoms.join('\\n');\n  }\n\n  /**\n   * Generate SVG for a single atom\n   */\n  private generateAtomSVG(atom: Atom2D, index: number, options: SVGExportOptions): string {\n    const pos = this.transformPoint(atom.position);\n    const color = this.config.atomColors[atom.element] || '#cccccc';\n    const radius = this.config.atomRadius * this.scale;\n    \n    let atomGroup = `<g class=\"atom-group\" data-element=\"${atom.element}\" data-atom-id=\"${index}\">`;\n    \n    // Atom circle\n    atomGroup += `<circle cx=\"${pos.x.toFixed(2)}\" cy=\"${pos.y.toFixed(2)}\" r=\"${radius.toFixed(2)}\" fill=\"${color}\" class=\"atom-circle\"/>`;\n    \n    // Atom label\n    const textColor = this.getContrastingColor(color);\n    atomGroup += `<text x=\"${pos.x.toFixed(2)}\" y=\"${pos.y.toFixed(2)}\" fill=\"${textColor}\" class=\"atom-label\">${atom.element}</text>`;\n    \n    // Interactive elements\n    if (options.interactive) {\n      atomGroup += `<title>${atom.element} - Atom ${index + 1}</title>`;\n    }\n    \n    atomGroup += '</g>';\n    \n    return atomGroup;\n  }\n\n  /**\n   * Generate metadata section\n   */\n  private generateMetadata(): string {\n    if (!this.molecule) return '';\n    \n    const metadata = [\n      '<metadata>',\n      `  <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:creb=\"https://creb.dev/ns#\">`,\n      `    <rdf:Description rdf:about=\"\">`,\n      `      <creb:atomCount>${this.molecule.atoms.length}</creb:atomCount>`,\n      `      <creb:bondCount>${this.molecule.bonds.length}</creb:bondCount>`,\n      `      <creb:generator>CREB-JS v${process.env.npm_package_version || '1.6.0'}</creb:generator>`,\n      `      <creb:timestamp>${new Date().toISOString()}</creb:timestamp>`,\n      `    </rdf:Description>`,\n      `  </rdf:RDF>`,\n      '</metadata>'\n    ];\n    \n    return metadata.join('\\n');\n  }\n\n  /**\n   * Generate empty SVG for when no molecule is loaded\n   */\n  private generateEmptySVG(options: SVGExportOptions): string {\n    const { width, height } = this.config;\n    \n    let svg = `<svg width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">`;\n    svg += `<rect width=\"100%\" height=\"100%\" fill=\"${this.config.backgroundColor}\"/>`;\n    svg += `<text x=\"${width/2}\" y=\"${height/2 - 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"24\" fill=\"#999\">2D Molecular Structure</text>`;\n    svg += `<text x=\"${width/2}\" y=\"${height/2 + 20}\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"14\" fill=\"#999\">Load a molecule to visualize</text>`;\n    svg += '</svg>';\n    \n    return svg;\n  }\n\n  /**\n   * Get contrasting color for text\n   */\n  private getContrastingColor(backgroundColor: string): string {\n    // Simple contrast calculation\n    const hex = backgroundColor.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    \n    return brightness > 128 ? '#000000' : '#ffffff';\n  }\n\n  /**\n   * Export as downloadable SVG file\n   */\n  exportAsFile(filename: string = 'molecule.svg', options: Partial<SVGExportOptions> = {}): void {\n    const svgContent = this.exportSVG({ ...options, format: 'svg-download' });\n    \n    // Create download link (browser only)\n    if (typeof document !== 'undefined') {\n      const blob = new Blob([svgContent], { type: 'image/svg+xml' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      link.click();\n      URL.revokeObjectURL(url);\n    } else {\n      // Node.js environment - would need fs module\n      console.log('SVG content:', svgContent);\n    }\n  }\n\n  /**\n   * Get current molecule data\n   */\n  getMolecule(): Molecule2D | null {\n    return this.molecule;\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Partial<SVGConfig>): void {\n    this.config = { ...this.config, ...config };\n    this.centerMolecule();\n  }\n}\n\nexport default SVGRenderer;\n","/**\n * Simplified Molecular Visualization System\n * Node.js and browser compatible implementation\n */\n\nimport { Canvas2DRenderer, type Molecule2D } from './Canvas2DRenderer';\n\nexport interface MolecularVisualizationConfig {\n  container: any; // HTMLElement or string\n  width?: number;\n  height?: number;\n  mode?: '2d' | '3d' | 'both';\n  backgroundColor?: string;\n  interactive?: boolean;\n}\n\nexport interface MolecularStyleOptions {\n  style?: 'stick' | 'sphere' | 'wireframe';\n  colorScheme?: 'element' | 'rainbow' | 'jmol';\n  showLabels?: boolean;\n  atomScale?: number;\n  bondWidth?: number;\n}\n\nexport interface MoleculeVisualizationData {\n  pdb?: string;\n  sdf?: string;\n  smiles?: string;\n  atoms?: Array<{\n    element: string;\n    x: number;\n    y: number;\n    z: number;\n  }>;\n  bonds?: Array<{\n    atom1: number;\n    atom2: number;\n    order: number;\n  }>;\n}\n\n/**\n * Main Molecular Visualization Engine\n */\nexport class MolecularVisualization {\n  private container: any;\n  private config: MolecularVisualizationConfig;\n  private canvas2d?: Canvas2DRenderer;\n  private viewer3d?: any;\n  private currentMolecule?: MoleculeVisualizationData;\n  private styleOptions: MolecularStyleOptions;\n\n  constructor(config: MolecularVisualizationConfig) {\n    this.config = {\n      width: 600,\n      height: 400,\n      mode: 'both',\n      backgroundColor: '#ffffff',\n      interactive: true,\n      ...config\n    };\n\n    this.styleOptions = {\n      style: 'stick',\n      colorScheme: 'element',\n      showLabels: false,\n      atomScale: 1.0,\n      bondWidth: 2\n    };\n\n    this.initializeContainer();\n    this.setupVisualization();\n  }\n\n  /**\n   * Initialize the visualization container\n   */\n  private initializeContainer(): void {\n    // Handle both string selector and direct element\n    if (typeof this.config.container === 'string') {\n      // In browser environment, try to find element\n      try {\n        const element = (globalThis as any)?.document?.getElementById?.(this.config.container);\n        this.container = element || this.createFallbackContainer();\n      } catch {\n        this.container = this.createFallbackContainer();\n      }\n    } else {\n      this.container = this.config.container || this.createFallbackContainer();\n    }\n  }\n\n  /**\n   * Create a fallback container for non-browser environments\n   */\n  private createFallbackContainer(): any {\n    return {\n      width: this.config.width || 600,\n      height: this.config.height || 400,\n      appendChild: () => {},\n      innerHTML: '',\n      style: {}\n    };\n  }\n\n  /**\n   * Setup the visualization components\n   */\n  private setupVisualization(): void {\n    if (this.config.mode === '2d' || this.config.mode === 'both') {\n      this.setup2DVisualization();\n    }\n\n    if (this.config.mode === '3d' || this.config.mode === 'both') {\n      this.setup3DVisualization();\n    }\n  }\n\n  /**\n   * Setup 2D canvas visualization\n   */\n  private setup2DVisualization(): void {\n    try {\n      // Try to create canvas element\n      let canvas: any;\n      \n      if ((globalThis as any)?.document?.createElement) {\n        canvas = (globalThis as any).document.createElement('canvas');\n        canvas.width = this.config.width || 600;\n        canvas.height = this.config.height || 400;\n        \n        if (this.container.appendChild) {\n          this.container.appendChild(canvas);\n        }\n      } else {\n        // Fallback for non-browser environments\n        canvas = {\n          width: this.config.width || 600,\n          height: this.config.height || 400,\n          getContext: () => ({\n            fillStyle: '',\n            strokeStyle: '',\n            lineWidth: 1,\n            lineCap: 'round',\n            font: '12px Arial',\n            textAlign: 'center',\n            textBaseline: 'middle',\n            fillRect: () => {},\n            fillText: () => {},\n            beginPath: () => {},\n            moveTo: () => {},\n            lineTo: () => {},\n            arc: () => {},\n            fill: () => {},\n            stroke: () => {},\n            setLineDash: () => {}\n          }),\n          toDataURL: () => 'data:image/png;base64,',\n          style: {}\n        };\n      }\n\n      this.canvas2d = new Canvas2DRenderer(canvas);\n    } catch (error) {\n      console.warn('Could not initialize 2D visualization:', error);\n    }\n  }\n\n  /**\n   * Setup 3D visualization\n   */\n  private setup3DVisualization(): void {\n    try {\n      // Check if 3Dmol.js is available\n      if ((globalThis as any)?.$3Dmol) {\n        this.initialize3DViewer();\n      } else {\n        this.initializeFallback3D();\n      }\n    } catch (error) {\n      console.warn('Could not initialize 3D visualization:', error);\n      this.initializeFallback3D();\n    }\n  }\n\n  /**\n   * Initialize 3Dmol.js viewer\n   */\n  private initialize3DViewer(): void {\n    try {\n      const $3Dmol = (globalThis as any).$3Dmol;\n      this.viewer3d = $3Dmol.createViewer(this.container, {\n        defaultcolors: $3Dmol.elementColors.defaultColors\n      });\n    } catch (error) {\n      console.warn('Failed to create 3Dmol viewer:', error);\n      this.initializeFallback3D();\n    }\n  }\n\n  /**\n   * Initialize fallback 3D visualization\n   */\n  private initializeFallback3D(): void {\n    this.viewer3d = {\n      addModel: () => ({ setStyle: () => {}, show: () => {} }),\n      setStyle: () => {},\n      zoomTo: () => {},\n      render: () => {},\n      clear: () => {},\n      resize: () => {}\n    };\n  }\n\n  /**\n   * Load and display a molecule\n   */\n  loadMolecule(data: MoleculeVisualizationData): void {\n    this.currentMolecule = data;\n\n    if (this.config.mode === '2d' || this.config.mode === 'both') {\n      this.render2D(data);\n    }\n\n    if (this.config.mode === '3d' || this.config.mode === 'both') {\n      this.render3D(data);\n    }\n  }\n\n  /**\n   * Render molecule in 2D\n   */\n  private render2D(data: MoleculeVisualizationData): void {\n    if (!this.canvas2d) return;\n\n    try {\n      let molecule2d: Molecule2D;\n\n      if (data.smiles) {\n        molecule2d = Canvas2DRenderer.smilesToMolecule2D(data.smiles);\n      } else if (data.atoms && data.bonds) {\n        molecule2d = {\n          atoms: data.atoms.map((atom, i) => ({\n            element: atom.element,\n            position: { x: atom.x * 50 + 100, y: atom.y * 50 + 100 },\n            bonds: data.bonds!\n              .filter(bond => bond.atom1 === i || bond.atom2 === i)\n              .map((_, j) => j)\n          })),\n          bonds: data.bonds.map(bond => ({\n            atom1: bond.atom1,\n            atom2: bond.atom2,\n            order: bond.order,\n            type: bond.order === 1 ? 'single' : bond.order === 2 ? 'double' : 'triple'\n          }))\n        };\n      } else {\n        // Default fallback molecule\n        molecule2d = Canvas2DRenderer.smilesToMolecule2D('C');\n      }\n\n      this.canvas2d.loadMolecule(molecule2d);\n    } catch (error) {\n      console.warn('Error rendering 2D molecule:', error);\n    }\n  }\n\n  /**\n   * Render molecule in 3D\n   */\n  private render3D(data: MoleculeVisualizationData): void {\n    if (!this.viewer3d) return;\n\n    try {\n      this.viewer3d.clear();\n\n      if (data.pdb) {\n        const model = this.viewer3d.addModel(data.pdb, 'pdb');\n        model.setStyle({}, { [this.styleOptions.style || 'stick']: {} });\n        model.show();\n      } else if (data.sdf) {\n        const model = this.viewer3d.addModel(data.sdf, 'sdf');\n        model.setStyle({}, { [this.styleOptions.style || 'stick']: {} });\n        model.show();\n      }\n\n      this.viewer3d.zoomTo();\n      this.viewer3d.render();\n    } catch (error) {\n      console.warn('Error rendering 3D molecule:', error);\n    }\n  }\n\n  /**\n   * Update visualization style\n   */\n  updateStyle(options: Partial<MolecularStyleOptions>): void {\n    this.styleOptions = { ...this.styleOptions, ...options };\n\n    if (this.currentMolecule) {\n      this.loadMolecule(this.currentMolecule);\n    }\n  }\n\n  /**\n   * Export current visualization as image\n   */\n  exportImage(format: 'png' | 'jpg' = 'png'): string {\n    if (this.canvas2d && (this.config.mode === '2d' || this.config.mode === 'both')) {\n      return this.canvas2d.exportImage(format);\n    }\n    return '';\n  }\n\n  /**\n   * Reset visualization to default view\n   */\n  resetView(): void {\n    if (this.canvas2d) {\n      this.canvas2d.resetView();\n    }\n\n    if (this.viewer3d && this.viewer3d.zoomTo) {\n      this.viewer3d.zoomTo();\n      this.viewer3d.render();\n    }\n  }\n\n  /**\n   * Resize the visualization\n   */\n  resize(width: number, height: number): void {\n    this.config.width = width;\n    this.config.height = height;\n\n    if (this.viewer3d && this.viewer3d.resize) {\n      this.viewer3d.resize();\n    }\n\n    // For 2D, would need to recreate canvas\n    if (this.canvas2d) {\n      this.setup2DVisualization();\n      if (this.currentMolecule) {\n        this.render2D(this.currentMolecule);\n      }\n    }\n  }\n\n  /**\n   * Get current molecule data\n   */\n  getMolecule(): MoleculeVisualizationData | undefined {\n    return this.currentMolecule;\n  }\n\n  /**\n   * Clean up resources\n   */\n  destroy(): void {\n    if (this.viewer3d && this.viewer3d.clear) {\n      this.viewer3d.clear();\n    }\n    \n    this.canvas2d = undefined;\n    this.viewer3d = undefined;\n    this.currentMolecule = undefined;\n  }\n}\n\n/**\n * Utility functions for molecular data conversion\n */\nexport class MolecularDataUtils {\n  /**\n   * Convert PDB string to basic atom/bond data\n   */\n  static parsePDB(pdbString: string): MoleculeVisualizationData {\n    const atoms: Array<{ element: string; x: number; y: number; z: number }> = [];\n    const bonds: Array<{ atom1: number; atom2: number; order: number }> = [];\n\n    const lines = pdbString.split('\\n');\n    \n    for (const line of lines) {\n      if (line.startsWith('ATOM') || line.startsWith('HETATM')) {\n        const element = line.substring(76, 78).trim() || line.substring(12, 16).trim().charAt(0);\n        const x = parseFloat(line.substring(30, 38));\n        const y = parseFloat(line.substring(38, 46));\n        const z = parseFloat(line.substring(46, 54));\n        \n        if (!isNaN(x) && !isNaN(y) && !isNaN(z)) {\n          atoms.push({ element, x, y, z });\n        }\n      }\n    }\n\n    // Simple bond detection based on distance\n    for (let i = 0; i < atoms.length; i++) {\n      for (let j = i + 1; j < atoms.length; j++) {\n        const dx = atoms[i].x - atoms[j].x;\n        const dy = atoms[i].y - atoms[j].y;\n        const dz = atoms[i].z - atoms[j].z;\n        const distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n        \n        // Typical bond distance thresholds\n        if (distance < 2.0) {\n          bonds.push({ atom1: i, atom2: j, order: 1 });\n        }\n      }\n    }\n\n    return { pdb: pdbString, atoms, bonds };\n  }\n\n  /**\n   * Generate sample molecules for testing\n   */\n  static generateSampleMolecule(type: 'water' | 'methane' | 'benzene' = 'water'): MoleculeVisualizationData {\n    switch (type) {\n      case 'water':\n        return {\n          smiles: 'O',\n          atoms: [\n            { element: 'O', x: 0, y: 0, z: 0 },\n            { element: 'H', x: 0.757, y: 0.587, z: 0 },\n            { element: 'H', x: -0.757, y: 0.587, z: 0 }\n          ],\n          bonds: [\n            { atom1: 0, atom2: 1, order: 1 },\n            { atom1: 0, atom2: 2, order: 1 }\n          ]\n        };\n\n      case 'methane':\n        return {\n          smiles: 'C',\n          atoms: [\n            { element: 'C', x: 0, y: 0, z: 0 },\n            { element: 'H', x: 1.089, y: 0, z: 0 },\n            { element: 'H', x: -0.363, y: 1.027, z: 0 },\n            { element: 'H', x: -0.363, y: -0.513, z: 0.889 },\n            { element: 'H', x: -0.363, y: -0.513, z: -0.889 }\n          ],\n          bonds: [\n            { atom1: 0, atom2: 1, order: 1 },\n            { atom1: 0, atom2: 2, order: 1 },\n            { atom1: 0, atom2: 3, order: 1 },\n            { atom1: 0, atom2: 4, order: 1 }\n          ]\n        };\n\n      case 'benzene':\n        return {\n          smiles: 'c1ccccc1',\n          atoms: [\n            { element: 'C', x: 1.4, y: 0, z: 0 },\n            { element: 'C', x: 0.7, y: 1.2, z: 0 },\n            { element: 'C', x: -0.7, y: 1.2, z: 0 },\n            { element: 'C', x: -1.4, y: 0, z: 0 },\n            { element: 'C', x: -0.7, y: -1.2, z: 0 },\n            { element: 'C', x: 0.7, y: -1.2, z: 0 }\n          ],\n          bonds: [\n            { atom1: 0, atom2: 1, order: 1 },\n            { atom1: 1, atom2: 2, order: 2 },\n            { atom1: 2, atom2: 3, order: 1 },\n            { atom1: 3, atom2: 4, order: 2 },\n            { atom1: 4, atom2: 5, order: 1 },\n            { atom1: 5, atom2: 0, order: 2 }\n          ]\n        };\n\n      default:\n        return this.generateSampleMolecule('water');\n    }\n  }\n}\n\nexport default MolecularVisualization;\n","/**\n * Browser-compatible CREB-JS entry point\n * This file excludes Node.js-specific functionality to ensure browser compatibility\n */\n\n// Reaction Animation System (browser-compatible)\nexport { ReactionAnimator } from './visualization/ReactionAnimation';\n\n// Phase 2: Advanced Animation Engine (NEW)\nexport { ReactionAnimationEngine } from './animation/ReactionAnimationEngine';\n\n// Phase 3: AI and Physics Integration (NEW) - Browser Compatible Versions\nexport { ReactionClassifier } from './ai/SimplifiedReactionClassifier';\nexport { SimplifiedPhysicsEngine as MolecularPhysicsEngine } from './physics/SimplifiedPhysicsEngine';\nexport { SimplifiedCacheManager as IntelligentCacheManager } from './caching/SimplifiedCacheManager';\n\n// Phase 4: Enhanced Systems (NEW) - All-in-one enhancements\nexport { \n  CREBMasterEnhancementSystem,\n  createEnhancedCREB,\n  EnhancedAnimationController,\n  EnhancedMolecularRenderer,\n  EnhancedUI,\n  BrowserCompatibilityManager,\n  EnhancedFeaturesSystem\n} from './enhancements';\n\n// 3D Visualization System (browser-compatible)\nexport { Mol3DWrapper } from './visualization/Mol3DWrapper';\nexport { PubChemIntegration } from './visualization/PubChemIntegration';\nexport { RDKitWrapper } from './visualization/RDKitWrapper';\n\n// Core chemistry functionality (browser-compatible)\nexport { ChemicalEquationBalancer } from './balancer';\nexport { Stoichiometry } from './stoichiometry';\nexport { ElementCounter, EquationParser, calculateMolarWeight } from './utils';\nexport * from './types';\nexport * from './constants';\n\n// Enhanced TypeScript Support (browser-compatible)\nexport {\n  // Branded Types\n  type ChemicalFormula,\n  type ElementSymbol,\n  type BalancedEquationString,\n  type SMILESNotation,\n  type InChINotation,\n  type CASNumber,\n  \n  // Advanced Types\n  type ValidElement,\n  type TypedElementCount,\n  type TypedCompound,\n  type TypedReaction,\n  type ReactionType,\n  type PhaseState,\n  \n  // Type Guards\n  isChemicalFormula,\n  isElementSymbol,\n  isBalancedEquation,\n  \n  // Utility Functions\n  parseFormula,\n  createChemicalFormula,\n  createElementSymbol,\n  \n  // Error Types\n  ChemicalFormulaError,\n  EquationBalancingError\n} from './advancedTypes';\n\nexport { EnhancedBalancer } from './enhancedBalancerSimple';\n\n// Enhanced PubChem-integrated classes (browser-compatible version)\nexport { \n  EnhancedChemicalEquationBalancer,\n  type EnhancedBalancedEquation,\n  type CompoundInfo \n} from './enhancedBalancer';\n\n// Browser-compatible visualization - import specific components\nexport { Canvas2DRenderer } from './visualization/Canvas2DRenderer';\nexport { SVGRenderer } from './visualization/SVGRenderer';\nexport { \n  MolecularVisualization,\n  type MolecularVisualizationConfig,\n  type MolecularStyleOptions,\n  type MoleculeVisualizationData\n} from './visualization/SimplifiedMolecularVisualization';\n\n// Reaction Animation System (Browser-compatible) - already exported above\n\n// Import the class for use in factory function\nimport { MolecularVisualization as MolViz } from './visualization/SimplifiedMolecularVisualization';\n\n// Re-export specific visualization types and functions\nexport type MoleculeForVisualization = {\n  elements: string[];\n  formula?: string;\n};\n\nexport function convertMoleculeToVisualization(molecule: MoleculeForVisualization) {\n  const atoms = molecule.elements.map((element: string, index: number) => ({\n    element,\n    x: Math.random() * 4 - 2,\n    y: Math.random() * 4 - 2,\n    z: Math.random() * 4 - 2\n  }));\n\n  const bonds = [];\n  for (let i = 0; i < atoms.length - 1; i++) {\n    bonds.push({\n      atom1: i,\n      atom2: i + 1,\n      order: 1\n    });\n  }\n\n  return {\n    atoms,\n    bonds,\n    smiles: molecule.formula || `${molecule.elements.join('')}`\n  };\n}\n\n// Simple factory function that can be tree-shaken if not used\nexport function createMolecularVisualization(container: any, options: any = {}) {\n  return new MolViz({ container, ...options });\n}\n\n// Browser polyfill for EventEmitter\nexport class EventEmitter {\n  private events: { [key: string]: Function[] } = {};\n\n  on(event: string, listener: Function): this {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n    return this;\n  }\n\n  emit(event: string, ...args: any[]): boolean {\n    if (this.events[event]) {\n      this.events[event].forEach(listener => listener(...args));\n      return true;\n    }\n    return false;\n  }\n\n  removeListener(event: string, listener: Function): this {\n    if (this.events[event]) {\n      this.events[event] = this.events[event].filter(l => l !== listener);\n    }\n    return this;\n  }\n\n  removeAllListeners(event?: string): this {\n    if (event) {\n      delete this.events[event];\n    } else {\n      this.events = {};\n    }\n    return this;\n  }\n}\n"],"names":["MolecularPhysicsEngine","IntelligentCacheManager","PerformanceMonitor","MemoryManager","FallbackRenderer","global","MolViz"],"mappings":"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IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,GAAG,EAAE,MAAM;AACX,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,IAAI,EAAE,IAAI;AACV,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,GAAG,EAAE,KAAK;AACV,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,GAAG,EAAE,MAAM;AACX,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,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","x_google_ignoreList":[17]}